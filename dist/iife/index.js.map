{
  "version": 3,
  "sources": ["../../src/js/index.js", "../../src/js/constants.js", "../../src/js/labels/labels.js", "../../src/js/utils/time.js", "../../src/js/utils/utils.js", "../../src/js/utils/element-utils.js", "../../src/js/utils/server-safe-globals.js", "../../src/js/media-chrome-button.js", "../../src/js/media-airplay-button.js", "../../src/js/media-cast-button.js", "../../src/js/media-gesture-receiver.js", "../../src/js/media-container.js", "../../src/js/utils/attribute-token-list.js", "../../src/js/utils/captions.js", "../../src/js/utils/fullscreen-api.js", "../../src/js/utils/platform-tests.js", "../../src/js/controller.js", "../../src/js/media-controller.js", "../../src/js/media-chrome-range.js", "../../src/js/media-control-bar.js", "../../src/js/media-text-display.js", "../../src/js/media-duration-display.js", "../../src/js/media-time-display.js", "../../src/js/media-captions-button.js", "../../src/js/utils/seek.js", "../../src/js/media-seek-forward-button.js", "../../src/js/media-fullscreen-button.js", "../../src/js/media-live-button.js", "../../src/js/media-mute-button.js", "../../src/js/media-pip-button.js", "../../src/js/media-play-button.js", "../../src/js/media-playback-rate-button.js", "../../src/js/media-poster-image.js", "../../src/js/media-seek-backward-button.js", "../../src/js/media-preview-time-display.js", "../../src/js/media-preview-thumbnail.js", "../../src/js/media-time-range.js", "../../src/js/media-loading-indicator.js", "../../src/js/media-volume-range.js"],
  "sourcesContent": ["export * as constants from './constants.js';\nexport { default as labels } from './labels/labels.js';\nexport * as timeUtils from './utils/time.js';\nimport MediaAirplayButton from './media-airplay-button.js';\nimport MediaCastButton from './media-cast-button.js';\nimport MediaChromeButton from './media-chrome-button.js';\nimport MediaGestureReceiver from './media-gesture-receiver.js';\nimport MediaController from './media-controller.js';\nimport MediaChromeRange from './media-chrome-range.js';\nimport MediaControlBar from './media-control-bar.js';\nimport MediaDurationDisplay from './media-duration-display.js';\nimport MediaTimeDisplay from './media-time-display.js';\nimport MediaCaptionsButton from './media-captions-button.js';\nimport MediaSeekForwardButton from './media-seek-forward-button.js';\nimport MediaFullscreenButton from './media-fullscreen-button.js';\nimport MediaLiveButton from './media-live-button.js';\nimport MediaMuteButton from './media-mute-button.js';\nimport MediaPipButton from './media-pip-button.js';\nimport MediaPlayButton from './media-play-button.js';\nimport MediaPlaybackRateButton from './media-playback-rate-button.js';\nimport MediaPosterImage from './media-poster-image.js';\nimport MediaSeekBackwardButton from './media-seek-backward-button.js';\nimport MediaPreviewTimeDisplay from './media-preview-time-display.js';\nimport MediaPreviewThumbnail from './media-preview-thumbnail.js';\nimport MediaTimeRange from './media-time-range.js';\nimport MediaLoadingIndicator from './media-loading-indicator.js';\nimport MediaVolumeRange from './media-volume-range.js';\n\nexport {\n  MediaAirplayButton,\n  MediaCastButton,\n  MediaChromeButton,\n  MediaGestureReceiver,\n  MediaController,\n  MediaChromeRange,\n  MediaControlBar,\n  MediaDurationDisplay,\n  MediaTimeDisplay,\n  MediaCaptionsButton,\n  MediaSeekForwardButton,\n  MediaFullscreenButton,\n  MediaLiveButton,\n  MediaMuteButton,\n  MediaPipButton,\n  MediaPlayButton,\n  MediaPlaybackRateButton,\n  MediaPosterImage,\n  MediaSeekBackwardButton,\n  MediaPreviewTimeDisplay,\n  MediaPreviewThumbnail,\n  MediaTimeRange,\n  MediaLoadingIndicator,\n  MediaVolumeRange,\n};\n", "export const MediaUIEvents = {\n  MEDIA_PLAY_REQUEST: 'mediaplayrequest',\n  MEDIA_PAUSE_REQUEST: 'mediapauserequest',\n  MEDIA_MUTE_REQUEST: 'mediamuterequest',\n  MEDIA_UNMUTE_REQUEST: 'mediaunmuterequest',\n  MEDIA_VOLUME_REQUEST: 'mediavolumerequest',\n  MEDIA_SEEK_REQUEST: 'mediaseekrequest',\n  MEDIA_AIRPLAY_REQUEST: 'mediaairplayrequest',\n  MEDIA_ENTER_FULLSCREEN_REQUEST: 'mediaenterfullscreenrequest',\n  MEDIA_EXIT_FULLSCREEN_REQUEST: 'mediaexitfullscreenrequest',\n  MEDIA_PREVIEW_REQUEST: 'mediapreviewrequest',\n  MEDIA_ENTER_PIP_REQUEST: 'mediaenterpiprequest',\n  MEDIA_EXIT_PIP_REQUEST: 'mediaexitpiprequest',\n  MEDIA_ENTER_CAST_REQUEST: 'mediaentercastrequest',\n  MEDIA_EXIT_CAST_REQUEST: 'mediaexitcastrequest',\n  MEDIA_SHOW_TEXT_TRACKS_REQUEST: 'mediashowtexttracksrequest',\n  MEDIA_HIDE_TEXT_TRACKS_REQUEST: 'mediahidetexttracksrequest',\n  MEDIA_SHOW_SUBTITLES_REQUEST: 'mediashowsubtitlesrequest',\n  MEDIA_DISABLE_SUBTITLES_REQUEST: 'mediadisablesubtitlesrequest',\n  MEDIA_PLAYBACK_RATE_REQUEST: 'mediaplaybackraterequest',\n  MEDIA_SEEK_TO_LIVE_REQUEST: 'mediaseektoliverequest',\n  REGISTER_MEDIA_STATE_RECEIVER: 'registermediastatereceiver',\n  UNREGISTER_MEDIA_STATE_RECEIVER: 'unregistermediastatereceiver',\n};\n\nexport const MediaStateReceiverAttributes = {\n  MEDIA_CHROME_ATTRIBUTES: 'mediachromeattributes',\n  MEDIA_CONTROLLER: 'mediacontroller',\n};\n\nexport const MediaUIProps = {\n  MEDIA_AIRPLAY_UNAVAILABLE: 'mediaAirplayUnavailable',\n  MEDIA_FULLSCREEN_UNAVAILABLE: 'mediaFullscreenUnavailable',\n  MEDIA_PIP_UNAVAILABLE: 'mediaPipUnavailable',\n  MEDIA_CAST_UNAVAILABLE: 'mediaCastUnavailable',\n  MEDIA_PAUSED: 'mediaPaused',\n  MEDIA_HAS_PLAYED: 'mediaHasPlayed',\n  MEDIA_ENDED: 'mediaEnded',\n  MEDIA_MUTED: 'mediaMuted',\n  MEDIA_VOLUME_LEVEL: 'mediaVolumeLevel',\n  MEDIA_VOLUME: 'mediaVolume',\n  MEDIA_VOLUME_UNAVAILABLE: 'mediaVolumeUnavailable',\n  MEDIA_IS_PIP: 'mediaIsPip',\n  MEDIA_IS_CASTING: 'mediaIsCasting',\n  MEDIA_SUBTITLES_LIST: 'mediaSubtitlesList',\n  MEDIA_SUBTITLES_SHOWING: 'mediaSubtitlesShowing',\n  MEDIA_IS_FULLSCREEN: 'mediaIsFullscreen',\n  MEDIA_PLAYBACK_RATE: 'mediaPlaybackRate',\n  MEDIA_CURRENT_TIME: 'mediaCurrentTime',\n  MEDIA_DURATION: 'mediaDuration',\n  MEDIA_SEEKABLE: 'mediaSeekable',\n  MEDIA_PREVIEW_TIME: 'mediaPreviewTime',\n  MEDIA_PREVIEW_IMAGE: 'mediaPreviewImage',\n  MEDIA_PREVIEW_COORDS: 'mediaPreviewCoords',\n  MEDIA_LOADING: 'mediaLoading',\n  MEDIA_BUFFERED: 'mediaBuffered',\n  MEDIA_STREAM_TYPE: 'mediaStreamType',\n  MEDIA_TARGET_LIVE_WINDOW: 'mediaTargetLiveWindow',\n  MEDIA_TIME_IS_LIVE: 'mediaTimeIsLive',\n};\n\nconst MediaUIPropsEntries = /** @type {[keyof MediaUIProps, string][]} */ (\n  Object.entries(MediaUIProps)\n);\n\nexport const MediaUIAttributes =\n  /** @type {{ [k in keyof MediaUIProps]: string }} */ (\n    MediaUIPropsEntries.reduce((dictObj, [key, propName]) => {\n      dictObj[key] = `${propName.toLowerCase()}`;\n      return dictObj;\n    }, /** @type {Partial<{ [k in keyof MediaUIProps]: string }>} */ ({}))\n  );\n\nexport const MediaStateChangeEvents =\n  /** @type {{ [k in keyof MediaUIProps | 'USER_INACTIVE' | 'BREAKPOINTS_CHANGE']: string }} */ (\n    MediaUIPropsEntries.reduce(\n      (dictObj, [key, propName]) => {\n        dictObj[key] = `${propName.toLowerCase()}`;\n        return dictObj;\n      },\n      /** @type {Partial<{ [k in keyof MediaUIProps | 'USER_INACTIVE' | 'BREAKPOINTS_CHANGE']: string  }>} */ ({\n        USER_INACTIVE: 'userinactivechange',\n        BREAKPOINTS_CHANGE: 'breakpointchange',\n      })\n    )\n  );\n\n// Maps from state change event type -> attribute name\nexport const StateChangeEventToAttributeMap = Object.entries(\n  MediaStateChangeEvents\n).reduce(\n  (mapObj, [key, eventType]) => {\n    const attrName = MediaUIAttributes[key];\n    if (attrName) {\n      mapObj[eventType] = attrName;\n    }\n    return mapObj;\n  },\n  { userinactivechange: 'userinactive' }\n);\n\n// Maps from attribute name -> state change event type\nexport const AttributeToStateChangeEventMap = Object.entries(\n  MediaUIAttributes\n).reduce(\n  (mapObj, [key, attrName]) => {\n    const evtType = MediaStateChangeEvents[key];\n    if (evtType) {\n      mapObj[attrName] = evtType;\n    }\n    return mapObj;\n  },\n  { userinactive: 'userinactivechange' }\n);\n\nexport const TextTrackKinds = {\n  SUBTITLES: 'subtitles',\n  CAPTIONS: 'captions',\n  DESCRIPTIONS: 'descriptions',\n  CHAPTERS: 'chapters',\n  METADATA: 'metadata',\n};\n\nexport const TextTrackModes = {\n  DISABLED: 'disabled',\n  HIDDEN: 'hidden',\n  SHOWING: 'showing',\n};\n\nexport const ReadyStates = {\n  HAVE_NOTHING: 0,\n  HAVE_METADATA: 1,\n  HAVE_CURRENT_DATA: 2,\n  HAVE_FUTURE_DATA: 3,\n  HAVE_ENOUGH_DATA: 4,\n};\n\nexport const PointerTypes = {\n  MOUSE: 'mouse',\n  PEN: 'pen',\n  TOUCH: 'touch',\n};\n\nexport const AvailabilityStates = {\n  UNAVAILABLE: 'unavailable',\n  UNSUPPORTED: 'unsupported',\n};\n\nexport const StreamTypes = {\n  LIVE: 'live',\n  ON_DEMAND: 'on-demand',\n  UNKNOWN: 'unknown',\n};\n", "/** @type {{ [k: string]: (x?: Partial<{ seekOffset: number; playbackRate: number; }>) => string; }} */\nexport const nouns = {\n  AUDIO_PLAYER: () => 'audio player',\n  VIDEO_PLAYER: () => 'video player',\n  VOLUME: () => 'volume',\n  SEEK: () => 'seek',\n  CLOSED_CAPTIONS: () => 'closed captions',\n  PLAYBACK_RATE: ({ playbackRate = 1 } = {}) =>\n    `current playback rate ${playbackRate}`,\n  PLAYBACK_TIME: () => `playback time`,\n  MEDIA_LOADING: () => `media loading`,\n};\n\n/** @type {{ [k: string]: (x?: Partial<{ seekOffset: number; playbackRate: number; }>) => string; }} */\nexport const verbs = {\n  PLAY: () => 'play',\n  PAUSE: () => 'pause',\n  MUTE: () => 'mute',\n  UNMUTE: () => 'unmute',\n  AIRPLAY: () => 'air play',\n  ENTER_CAST: () => 'start casting',\n  EXIT_CAST: () => 'stop casting',\n  ENTER_FULLSCREEN: () => 'enter fullscreen mode',\n  EXIT_FULLSCREEN: () => 'exit fullscreen mode',\n  ENTER_PIP: () => 'enter picture in picture mode',\n  EXIT_PIP: () => 'exit picture in picture mode',\n  SEEK_FORWARD_N_SECS: ({ seekOffset = 30 } = {}) =>\n    `seek forward ${seekOffset} seconds`,\n  SEEK_BACK_N_SECS: ({ seekOffset = 30 } = {}) =>\n    `seek back ${seekOffset} seconds`,\n  SEEK_LIVE: () => 'seek to live',\n  PLAYING_LIVE: () => 'playing live',\n};\n\nexport default {\n  ...nouns,\n  ...verbs,\n};\n", "import { isValidNumber } from './utils.js';\n\nconst UnitLabels = [\n  {\n    singular: 'hour',\n    plural: 'hours',\n  },\n  {\n    singular: 'minute',\n    plural: 'minutes',\n  },\n  {\n    singular: 'second',\n    plural: 'seconds',\n  },\n];\nconst toTimeUnitPhrase = (timeUnitValue, unitIndex) => {\n  const unitLabel =\n    timeUnitValue === 1\n      ? UnitLabels[unitIndex].singular\n      : UnitLabels[unitIndex].plural;\n\n  return `${timeUnitValue} ${unitLabel}`;\n};\n\n/**\n * This function converts numeric seconds into a phrase\n * @param {number} seconds - a (positive or negative) time, represented as seconds\n * @returns {string} The time, represented as a phrase of hours, minutes, and seconds\n */\nexport const formatAsTimePhrase = (seconds) => {\n  if (!isValidNumber(seconds)) return '';\n  const positiveSeconds = Math.abs(seconds);\n  const negative = positiveSeconds !== seconds;\n  const secondsDateTime = new Date(0, 0, 0, 0, 0, positiveSeconds, 0);\n  const timeParts = [\n    secondsDateTime.getHours(),\n    secondsDateTime.getMinutes(),\n    secondsDateTime.getSeconds(),\n  ];\n  // NOTE: Everything above should be useable for the `formatTime` function.\n\n  const timeString = timeParts\n    // Convert non-0 values to a string of the value plus its unit\n    .map(\n      (timeUnitValue, index) =>\n        timeUnitValue && toTimeUnitPhrase(timeUnitValue, index)\n    )\n    // Ignore/exclude any 0 values\n    .filter((x) => x)\n    // join into a single comma-separated string phrase\n    .join(', ');\n\n  // If the time was negative, assume it represents some remaining amount of time/\"count down\".\n  const negativeSuffix = negative ? ' remaining' : '';\n\n  return `${timeString}${negativeSuffix}`;\n};\n\nexport function formatTime(seconds, guide) {\n  // Handle negative values at the end\n  let negative = false;\n\n  if (seconds < 0) {\n    negative = true;\n    seconds = 0 - seconds;\n  }\n\n  seconds = seconds < 0 ? 0 : seconds;\n  /** @type {number|string} */\n  let s = Math.floor(seconds % 60);\n  /** @type {number|string} */\n  let m = Math.floor((seconds / 60) % 60);\n  /** @type {number|string} */\n  let h = Math.floor(seconds / 3600);\n  const gm = Math.floor((guide / 60) % 60);\n  const gh = Math.floor(guide / 3600);\n\n  // handle invalid times\n  if (isNaN(seconds) || seconds === Infinity) {\n    // '-' is false for all relational operators (e.g. <, >=) so this setting\n    // will add the minimum number of fields specified by the guide\n    h = m = s = '-';\n  }\n\n  // Check if we need to show hours\n  h = h > 0 || gh > 0 ? h + ':' : '';\n\n  // If hours are showing, we may need to add a leading zero.\n  // Always show at least one digit of minutes.\n  m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':';\n\n  // Check if leading zero is need for seconds\n  s = s < 10 ? '0' + s : s;\n\n  return (negative ? '-' : '') + h + m + s;\n}\n\n/** @type {TimeRanges} */\nexport const emptyTimeRanges = Object.freeze({\n  length: 0,\n  start(index) {\n    const unsignedIdx = index >>> 0;\n    if (unsignedIdx >= this.length) {\n      throw new DOMException(\n        `Failed to execute 'start' on 'TimeRanges': The index provided (${unsignedIdx}) is greater than or equal to the maximum bound (${this.length}).`\n      );\n    }\n    return 0;\n  },\n  end(index) {\n    const unsignedIdx = index >>> 0;\n    if (unsignedIdx >= this.length) {\n      throw new DOMException(\n        `Failed to execute 'end' on 'TimeRanges': The index provided (${unsignedIdx}) is greater than or equal to the maximum bound (${this.length}).`\n      );\n    }\n    return 0;\n  },\n});\n\n/**\n * @argument {TimeRanges} [timeRanges]\n */\nexport function serializeTimeRanges(timeRanges = emptyTimeRanges) {\n  // @ts-ignore\n  return Array.from(timeRanges)\n    .map((_, i) => [\n      Number(timeRanges.start(i).toFixed(3)),\n      Number(timeRanges.end(i).toFixed(3)),\n    ].join(':'))\n    .join(' ');\n}", "export function dashedToCamel(word) {\n  return word\n    .split('-')\n    .map(function (x, i) {\n      return (\n        (i ? x[0].toUpperCase() : x[0].toLowerCase()) + x.slice(1).toLowerCase()\n      );\n    })\n    .join('');\n}\n\nexport function constToCamel(word, upperFirst = false) {\n  return word\n    .split('_')\n    .map(function (x, i) {\n      return (\n        (i || upperFirst ? x[0].toUpperCase() : x[0].toLowerCase()) +\n        x.slice(1).toLowerCase()\n      );\n    })\n    .join('');\n}\n\nexport function camelCase(name) {\n  return name.replace(/[-_]([a-z])/g, ($0, $1) => $1.toUpperCase());\n}\n\nexport function isValidNumber(x) {\n  return typeof x === 'number' && !Number.isNaN(x) && Number.isFinite(x);\n}\n\nexport function isNumericString(str) {\n  if (typeof str != 'string') return false; // we only process strings!\n  // @ts-ignore\n  return !isNaN(str) && !isNaN(parseFloat(str));\n}\n\n/**\n * Returns a promise that will resolve after passed ms.\n * @param  {number} ms\n * @return {Promise}\n */\nexport const delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\n", "export const updateIconText = (svg, value, selector = '.value') => {\n  const node = svg.querySelector(selector);\n\n  if (!node) return;\n\n  node.textContent = value;\n};\n\nexport const getAllSlotted = (el, name) => {\n  const slotSelector = `slot[name=\"${name}\"]`;\n  const slot = el.shadowRoot.querySelector(slotSelector);\n  if (!slot) return [];\n  return slot.children;\n};\n\nexport const getSlotted = (el, name) => getAllSlotted(el, name)[0];\n\nexport const containsComposedNode = (rootNode, childNode) => {\n  if (!rootNode || !childNode) return false;\n  if (rootNode.contains(childNode)) return true;\n  return containsComposedNode(rootNode, childNode.getRootNode().host);\n};\n\nexport const closestComposedNode = (childNode, selector) => {\n  if (!childNode) return null;\n  const closest = childNode.closest(selector);\n  if (closest) return closest;\n  return closestComposedNode(childNode.getRootNode().host, selector);\n};\n\n/**\n * Get or insert a CSS rule with a selector in an element containing <style> tags.\n * @param  {Element|ShadowRoot} styleParent\n * @param  {string} selectorText\n * @return {CSSStyleRule |\n * { style: {\n * setProperty: () => void,\n * removeProperty: () => void,\n * width?: string,\n * height?: string,\n * display?: string,\n * transform?: string,\n * }}}\n */\nexport function getOrInsertCSSRule(styleParent, selectorText) {\n  let style;\n  // @ts-ignore\n  for (style of styleParent.querySelectorAll('style')) {\n    // Catch this error. e.g. browser extension adds style tags.\n    //   Uncaught DOMException: CSSStyleSheet.cssRules getter:\n    //   Not allowed to access cross-origin stylesheet\n    let cssRules;\n    try {\n      cssRules = style.sheet?.cssRules;\n    } catch {\n      continue;\n    }\n    for (let rule of cssRules ?? [])\n      if (rule.selectorText === selectorText) return rule;\n  }\n  // If there is no style sheet return an empty style rule.\n  if (!style?.sheet) {\n    return {\n      style: {\n        setProperty: () => {},\n        removeProperty: () => {},\n      },\n    };\n  }\n\n  style.sheet.insertRule(`${selectorText}{}`, style.sheet.cssRules.length);\n  return style.sheet.cssRules[style.sheet.cssRules.length - 1];\n}\n\n/**\n * Gets the number represented by the attribute\n * @param {any} el (Should be an HTMLElement, but need any for SSR cases)\n * @param {string} attrName\n * @param {number} [defaultValue = Number.NaN]\n * @returns {number | undefined} Will return undefined if no attribute set\n */\nexport function getNumericAttr(el, attrName, defaultValue = Number.NaN) {\n  const attrVal = el.getAttribute(attrName);\n  return attrVal != null ? +attrVal : defaultValue;\n}\n\n/**\n * @param {any} el (Should be an HTMLElement, but need any for SSR cases)\n * @param {string} attrName\n * @param {number} value\n */\nexport function setNumericAttr(el, attrName, value) {\n  // Simple cast to number\n  const nextNumericValue = +value;\n\n  // Treat null, undefined, and NaN as \"nothing values\", so unset if value is currently set.\n  if (value == null || Number.isNaN(nextNumericValue)) {\n    if (el.hasAttribute(attrName)) {\n      el.removeAttribute(attrName);\n    }\n    return;\n  }\n\n  // Avoid resetting a value that hasn't changed\n  if (getNumericAttr(el, attrName, undefined) === nextNumericValue) return;\n\n  el.setAttribute(attrName, `${nextNumericValue}`);\n}\n\n/**\n * @param {any} el (Should be an HTMLElement, but need any for SSR cases)\n * @param {string} attrName\n * @returns {boolean}\n */\nexport function getBooleanAttr(el, attrName) {\n  return el.hasAttribute(attrName);\n}\n\n/**\n * @param {any} el (Should be an HTMLElement, but need any for SSR cases)\n * @param {string} attrName\n * @param {boolean} value\n */\nexport function setBooleanAttr(el, attrName, value) {\n  // also handles undefined\n  if (value == null) {\n    if (el.hasAttribute(attrName)) {\n      el.removeAttribute(attrName);\n    }\n    return;\n  }\n\n  // avoid setting a value that hasn't changed\n  // NOTE: For booleans, we can rely on a loose equality check\n  if (getBooleanAttr(el, attrName) == value) return;\n\n  el.toggleAttribute(attrName, value);\n}\n\n/**\n * @param {any} el (Should be an HTMLElement, but need any for SSR cases)\n * @param {string} attrName\n */\nexport function getStringAttr(el, attrName, defaultValue = null) {\n  return el.getAttribute(attrName) ?? defaultValue;\n}\n\n/**\n * @param {*} el (Should be an HTMLElement, but need any for SSR cases)\n * @param {string} attrName\n * @param {string} value\n */\nexport function setStringAttr(el, attrName, value) {\n  // also handles undefined\n  if (value == null) {\n    if (el.hasAttribute(attrName)) {\n      el.removeAttribute(attrName);\n    }\n    return;\n  }\n\n  const nextValue = `${value}`;\n  // avoid triggering a set if no change\n  if (getStringAttr(el, attrName, undefined) === nextValue) return;\n\n  el.setAttribute(attrName, nextValue);\n}\n", "class EventTarget {\n  addEventListener() {}\n  removeEventListener() {}\n  dispatchEvent() {\n    return true;\n  }\n}\n\nclass ResizeObserver {\n  observe() {}\n}\n\nconst documentShim = {\n  createElement: function () {\n    return new globalThisShim.HTMLElement();\n  },\n  addEventListener() {},\n  removeEventListener() {},\n};\n\nconst globalThisShim = {\n  ResizeObserver,\n  document: documentShim,\n  HTMLElement: class HTMLElement extends EventTarget {},\n  DocumentFragment: class DocumentFragment extends EventTarget {},\n  customElements: {\n    get: function () {},\n    define: function () {},\n    whenDefined: function () {},\n  },\n  CustomEvent: function CustomEvent() {},\n  getComputedStyle: function () {},\n  // eslint-disable-next-line no-unused-vars\n  requestAnimationFrame: function(_cb) {\n    return 1;\n  },\n  // eslint-disable-next-line no-unused-vars\n  queueMicrotask: function(_cb) {\n  },\n};\n\nexport const isServer =\n  typeof window === 'undefined' ||\n  typeof window.customElements === 'undefined';\n\nconst isShimmed = Object.keys(globalThisShim)\n  .every(key => key in globalThis);\n\n/**\n  * @type { globalThis & {\n  *   WebKitPlaybackTargetAvailabilityEvent?,\n  *   chrome?,\n  *   DocumentFragment?,\n  *   getComputedStyle,\n  *   CastableVideoElement?\n  * } |\n  * {HTMLElement,\n  * customElements,\n  * CustomEvent,\n  * getComputedStyle,\n  * addEventListener?,\n  * removeEventListener?,\n  * setTimeout?,\n  * clearTimeout?,\n  * localStorage?,\n  * WebKitPlaybackTargetAvailabilityEvent?,\n  * window?,\n  * document?,\n  * chrome?,\n  * DocumentFragment?,\n  * ResizeObserver?,\n  * requestAnimationFrame,\n  * queueMicrotask,\n  * CastableVideoElement?\n  * } }\n  * */\nexport const GlobalThis = isServer && !isShimmed ? globalThisShim : globalThis;\n\n/**\n  * @type { document & { webkitExitFullscreen? } |\n  * {createElement,\n  * fullscreenElement?,\n  * webkitExitFullscreen?,\n  * getElementById?,\n  * pictureInPictureElement?,\n  * exitPictureInPicture?,\n  * pictureInPictureEnabled?,\n  * requestPictureInPicture?,\n  * addEventListener?,\n  * removeEventListener?,\n  * } }\n  */\nexport const Document = isServer && !isShimmed ? documentShim : globalThis.document;\n\nexport {\n  GlobalThis as globalThis,\n  Document as document\n};\n", "import { MediaStateReceiverAttributes } from './constants.js';\nimport { getOrInsertCSSRule } from './utils/element-utils.js';\nimport { globalThis, document } from './utils/server-safe-globals.js';\n\nconst template = document.createElement('template');\n\ntemplate.innerHTML = /*html*/`\n<style>\n  :host {\n    font: var(--media-font,\n      var(--media-font-weight, bold)\n      var(--media-font-size, 14px) /\n      var(--media-text-content-height, var(--media-control-height, 24px))\n      var(--media-font-family, helvetica neue, segoe ui, roboto, arial, sans-serif));\n    color: var(--media-text-color, var(--media-primary-color, rgb(238 238 238)));\n    background: var(--media-control-background, var(--media-secondary-color, rgb(20 20 30 / .7)));\n    padding: var(--media-control-padding, 10px);\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    vertical-align: middle;\n    box-sizing: border-box;\n    transition: background .15s linear;\n    pointer-events: auto;\n    cursor: pointer;\n  }\n\n  ${/*\n    Only show outline when keyboard focusing.\n    https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo\n  */''}\n  :host(:focus-visible) {\n    box-shadow: inset 0 0 0 2px rgb(27 127 204 / .9);\n    outline: 0;\n  }\n  ${/*\n   * hide default focus ring, particularly when using mouse\n   */''}\n  :host(:where(:focus)) {\n    box-shadow: none;\n    outline: 0;\n  }\n\n  :host(:hover) {\n    background: var(--media-control-hover-background, rgba(50 50 70 / .7));\n  }\n\n  svg, img, ::slotted(svg), ::slotted(img) {\n    width: var(--media-button-icon-width);\n    height: var(--media-button-icon-height, var(--media-control-height, 24px));\n    transform: var(--media-button-icon-transform);\n    transition: var(--media-button-icon-transition);\n    fill: var(--media-icon-color, var(--media-primary-color, rgb(238 238 238)));\n    vertical-align: middle;\n    max-width: 100%;\n    max-height: 100%;\n    min-width: 100%;\n  }\n</style>\n`;\n\n/**\n * @extends {HTMLElement}\n *\n * @attr {boolean} disabled - The Boolean disabled attribute makes the element not mutable or focusable.\n * @attr {string} mediacontroller - The element `id` of the media controller to connect to (if not nested within).\n *\n * @cssproperty --media-primary-color - Default color of text and icon.\n * @cssproperty --media-secondary-color - Default color of button background.\n * @cssproperty --media-text-color - `color` of button text.\n * @cssproperty --media-icon-color - `fill` color of button icon.\n *\n * @cssproperty --media-control-display - `display` property of control.\n * @cssproperty --media-control-background - `background` of control.\n * @cssproperty --media-control-hover-background - `background` of control hover state.\n * @cssproperty --media-control-padding - `padding` of control.\n * @cssproperty --media-control-height - `line-height` of control.\n *\n * @cssproperty --media-font - `font` shorthand property.\n * @cssproperty --media-font-weight - `font-weight` property.\n * @cssproperty --media-font-family - `font-family` property.\n * @cssproperty --media-font-size - `font-size` property.\n * @cssproperty --media-text-content-height - `line-height` of button text.\n *\n * @cssproperty --media-button-icon-width - `width` of button icon.\n * @cssproperty --media-button-icon-height - `height` of button icon.\n * @cssproperty --media-button-icon-transform - `transform` of button icon.\n * @cssproperty --media-button-icon-transition - `transition` of button icon.\n */\nclass MediaChromeButton extends globalThis.HTMLElement {\n  #mediaController;\n  preventClick = false;\n\n  static get observedAttributes() {\n    return ['disabled', MediaStateReceiverAttributes.MEDIA_CONTROLLER];\n  }\n\n  constructor(options = {}) {\n    super();\n\n    if (!this.shadowRoot) {\n      // Set up the Shadow DOM if not using Declarative Shadow DOM.\n      this.attachShadow({ mode: 'open' });\n\n      const buttonHTML = template.content.cloneNode(true);\n      this.nativeEl = buttonHTML;\n\n      // Slots\n      let slotTemplate = options.slotTemplate;\n\n      if (!slotTemplate) {\n        slotTemplate = document.createElement('template');\n        slotTemplate.innerHTML = `<slot>${options.defaultContent || ''}</slot>`;\n      }\n\n      this.nativeEl.appendChild(slotTemplate.content.cloneNode(true));\n\n      this.shadowRoot.appendChild(buttonHTML);\n    }\n\n    const { style } = getOrInsertCSSRule(this.shadowRoot, ':host');\n    style.setProperty('display', `var(--media-control-display, var(--${this.localName}-display, inline-flex))`);\n  }\n\n  #clickListener = (e) => {\n    if (!this.preventClick) {\n      this.handleClick(e);\n    }\n  }\n\n  // NOTE: There are definitely some \"false positive\" cases with multi-key pressing,\n  // but this should be good enough for most use cases.\n  #keyupListener = (e) => {\n    const { key } = e;\n    if (!this.keysUsed.includes(key)) {\n      this.removeEventListener('keyup', this.#keyupListener);\n      return;\n    }\n\n    if (!this.preventClick) {\n      this.handleClick(e);\n    }\n  }\n\n  #keydownListener = (e) => {\n    const { metaKey, altKey, key } = e;\n    if (metaKey || altKey || !this.keysUsed.includes(key)) {\n      this.removeEventListener('keyup', this.#keyupListener);\n      return;\n    }\n    this.addEventListener('keyup', this.#keyupListener, {once: true});\n  }\n\n  enable() {\n    this.addEventListener('click', this.#clickListener);\n    this.addEventListener('keydown', this.#keydownListener);\n    this.tabIndex = 0;\n  }\n\n  disable() {\n    this.removeEventListener('click', this.#clickListener);\n    this.removeEventListener('keydown', this.#keydownListener);\n    this.removeEventListener('keyup', this.#keyupListener);\n    this.tabIndex = -1;\n  }\n\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    if (attrName === MediaStateReceiverAttributes.MEDIA_CONTROLLER) {\n      if (oldValue) {\n        this.#mediaController?.unassociateElement?.(this);\n        this.#mediaController = null;\n      }\n      if (newValue) {\n        // @ts-ignore\n        this.#mediaController = this.getRootNode()?.getElementById(newValue);\n        this.#mediaController?.associateElement?.(this);\n      }\n    } else if (attrName === 'disabled' && newValue !== oldValue) {\n      if (newValue == null) {\n        this.enable();\n      } else {\n        this.disable();\n      }\n    }\n  }\n\n  connectedCallback() {\n    if (!this.hasAttribute('disabled')) {\n      this.enable();\n    }\n\n    this.setAttribute('role', 'button');\n\n    const mediaControllerId = this.getAttribute(\n      MediaStateReceiverAttributes.MEDIA_CONTROLLER\n    );\n    if (mediaControllerId) {\n      // @ts-ignore\n      this.#mediaController = this.getRootNode()?.getElementById(mediaControllerId);\n      this.#mediaController?.associateElement?.(this);\n    }\n  }\n\n  disconnectedCallback() {\n    this.disable();\n    // Use cached mediaController, getRootNode() doesn't work if disconnected.\n    this.#mediaController?.unassociateElement?.(this);\n    this.#mediaController = null;\n  }\n\n  get keysUsed() {\n    return ['Enter', ' '];\n  }\n\n  /**\n   * @abstract\n   * @argument {Event} e\n   */\n  handleClick(e) {} // eslint-disable-line\n}\n\nif (!globalThis.customElements.get('media-chrome-button')) {\n  globalThis.customElements.define('media-chrome-button', MediaChromeButton);\n}\n\nexport { MediaChromeButton };\nexport default MediaChromeButton;\n", "import { MediaChromeButton } from './media-chrome-button.js';\nimport { globalThis, document } from './utils/server-safe-globals.js';\nimport { MediaUIEvents, MediaUIAttributes } from './constants.js';\nimport { verbs } from './labels/labels.js';\nimport { getStringAttr, setStringAttr } from './utils/element-utils.js';\n\nconst airplayIcon = `<svg aria-hidden=\"true\" viewBox=\"0 0 26 24\">\n  <path d=\"M22.13 3H3.87a.87.87 0 0 0-.87.87v13.26a.87.87 0 0 0 .87.87h3.4L9 16H5V5h16v11h-4l1.72 2h3.4a.87.87 0 0 0 .87-.87V3.87a.87.87 0 0 0-.86-.87Zm-8.75 11.44a.5.5 0 0 0-.76 0l-4.91 5.73a.5.5 0 0 0 .38.83h9.82a.501.501 0 0 0 .38-.83l-4.91-5.73Z\"/>\n</svg>\n`;\n\nconst slotTemplate = document.createElement('template');\nslotTemplate.innerHTML = `\n  <slot name=\"icon\">${airplayIcon}</slot>\n`;\n\n/**\n * @slot icon - The element shown for the AirPlay button\u2019s display.\n *\n * @attr {(unavailable|unsupported)} mediaairplayunavailable - (read-only) Set if airplay is unavailable.\n *\n * @cssproperty [--media-airplay-button-display = inline-flex] - `display` property of button.\n *\n * @event {CustomEvent} mediaairplayrequest\n */\nclass MediaAirplayButton extends MediaChromeButton {\n  static get observedAttributes() {\n    return [\n      ...super.observedAttributes,\n      MediaUIAttributes.MEDIA_AIRPLAY_UNAVAILABLE,\n    ];\n  }\n\n  constructor(options = {}) {\n    super({ slotTemplate, ...options });\n  }\n\n  connectedCallback() {\n    this.setAttribute('aria-label', verbs.AIRPLAY());\n    super.connectedCallback();\n  }\n\n  /**\n   * @type {string | undefined} Airplay unavailability state\n   */\n  get mediaAirplayUnavailable() {\n    return getStringAttr(this, MediaUIAttributes.MEDIA_AIRPLAY_UNAVAILABLE);\n  }\n\n  set mediaAirplayUnavailable(value) {\n    setStringAttr(this, MediaUIAttributes.MEDIA_AIRPLAY_UNAVAILABLE, value);\n  }\n\n  handleClick() {\n    const evt = new globalThis.CustomEvent(MediaUIEvents.MEDIA_AIRPLAY_REQUEST, {\n      composed: true,\n      bubbles: true,\n    });\n    this.dispatchEvent(evt);\n  }\n}\n\nif (!globalThis.customElements.get('media-airplay-button')) {\n  globalThis.customElements.define('media-airplay-button', MediaAirplayButton);\n}\n\nexport default MediaAirplayButton;\n", "import { MediaChromeButton } from './media-chrome-button.js';\nimport { globalThis, document } from './utils/server-safe-globals.js';\nimport { MediaUIEvents, MediaUIAttributes } from './constants.js';\nimport { verbs } from './labels/labels.js';\nimport {\n  getBooleanAttr,\n  setBooleanAttr,\n  getStringAttr,\n  setStringAttr,\n} from './utils/element-utils.js';\n\nconst enterIcon = `<svg aria-hidden=\"true\" viewBox=\"0 0 24 24\"><g><path class=\"cast_caf_icon_arch0\" d=\"M1,18 L1,21 L4,21 C4,19.3 2.66,18 1,18 L1,18 Z\"/><path class=\"cast_caf_icon_arch1\" d=\"M1,14 L1,16 C3.76,16 6,18.2 6,21 L8,21 C8,17.13 4.87,14 1,14 L1,14 Z\"/><path class=\"cast_caf_icon_arch2\" d=\"M1,10 L1,12 C5.97,12 10,16.0 10,21 L12,21 C12,14.92 7.07,10 1,10 L1,10 Z\"/><path class=\"cast_caf_icon_box\" d=\"M21,3 L3,3 C1.9,3 1,3.9 1,5 L1,8 L3,8 L3,5 L21,5 L21,19 L14,19 L14,21 L21,21 C22.1,21 23,20.1 23,19 L23,5 C23,3.9 22.1,3 21,3 L21,3 Z\"/></g></svg>`;\n\nconst exitIcon = `<svg aria-hidden=\"true\" viewBox=\"0 0 24 24\"><g><path class=\"cast_caf_icon_arch0\" d=\"M1,18 L1,21 L4,21 C4,19.3 2.66,18 1,18 L1,18 Z\"/><path class=\"cast_caf_icon_arch1\" d=\"M1,14 L1,16 C3.76,16 6,18.2 6,21 L8,21 C8,17.13 4.87,14 1,14 L1,14 Z\"/><path class=\"cast_caf_icon_arch2\" d=\"M1,10 L1,12 C5.97,12 10,16.0 10,21 L12,21 C12,14.92 7.07,10 1,10 L1,10 Z\"/><path class=\"cast_caf_icon_box\" d=\"M21,3 L3,3 C1.9,3 1,3.9 1,5 L1,8 L3,8 L3,5 L21,5 L21,19 L14,19 L14,21 L21,21 C22.1,21 23,20.1 23,19 L23,5 C23,3.9 22.1,3 21,3 L21,3 Z\"/><path class=\"cast_caf_icon_boxfill\" d=\"M5,7 L5,8.63 C8,8.6 13.37,14 13.37,17 L19,17 L19,7 Z\"/></g></svg>`;\n\nconst slotTemplate = document.createElement('template');\nslotTemplate.innerHTML = /*html*/`\n  <style>\n  :host([${MediaUIAttributes.MEDIA_IS_CASTING}]) slot:not([name=exit]):not([name=icon]) {\n    display: none !important;\n  }\n\n  ${/* Double negative, but safer if display doesn't equal 'block' */ ''}\n  :host(:not([${MediaUIAttributes.MEDIA_IS_CASTING}])) slot:not([name=enter]):not([name=icon]) {\n    display: none !important;\n  }\n  </style>\n\n  <slot name=\"icon\">\n    <slot name=\"enter\">${enterIcon}</slot>\n    <slot name=\"exit\">${exitIcon}</slot>\n  </slot>\n`;\n\nconst updateAriaLabel = (el) => {\n  const isCast = el.getAttribute(MediaUIAttributes.MEDIA_IS_CASTING) != null;\n  const label = isCast ? verbs.EXIT_CAST() : verbs.ENTER_CAST();\n  el.setAttribute('aria-label', label);\n};\n\n/**\n * @slot enter - An element shown when the media is not in casting mode and pressing the button will open the Cast menu.\n * @slot exit - An element shown when the media is in casting mode and pressing the button will trigger exiting casting mode.\n * @slot icon - An element for representing enter and exit states in a single icon\n *\n * @attr {(unavailable|unsupported)} mediacastunavailable - (read-only) Set if casting is unavailable.\n * @attr {boolean} mediaiscasting - (read-only) Present if the media is casting.\n *\n * @cssproperty [--media-cast-button-display = inline-flex] - `display` property of button.\n */\nclass MediaCastButton extends MediaChromeButton {\n  static get observedAttributes() {\n    return [\n      ...super.observedAttributes,\n      MediaUIAttributes.MEDIA_IS_CASTING,\n      MediaUIAttributes.MEDIA_CAST_UNAVAILABLE,\n    ];\n  }\n\n  constructor(options = {}) {\n    super({ slotTemplate, ...options });\n  }\n\n  connectedCallback() {\n    updateAriaLabel(this);\n    super.connectedCallback();\n  }\n\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    if (attrName === MediaUIAttributes.MEDIA_IS_CASTING) {\n      updateAriaLabel(this);\n    }\n    super.attributeChangedCallback(attrName, oldValue, newValue);\n  }\n\n  /**\n   * @type {boolean} Are we currently casting\n   */\n  get mediaIsCasting() {\n    return getBooleanAttr(this, MediaUIAttributes.MEDIA_IS_CASTING);\n  }\n\n  set mediaIsCasting(value) {\n    setBooleanAttr(this, MediaUIAttributes.MEDIA_IS_CASTING, value);\n  }\n\n  /**\n   * @type {string | undefined} Cast unavailability state\n   */\n  get mediaCastUnavailable() {\n    return getStringAttr(this, MediaUIAttributes.MEDIA_CAST_UNAVAILABLE);\n  }\n\n  set mediaCastUnavailable(value) {\n    setStringAttr(this, MediaUIAttributes.MEDIA_CAST_UNAVAILABLE, value);\n  }\n\n  handleClick() {\n    const eventName =\n      this.mediaIsCasting\n        ? MediaUIEvents.MEDIA_EXIT_CAST_REQUEST\n        : MediaUIEvents.MEDIA_ENTER_CAST_REQUEST;\n    this.dispatchEvent(\n      new globalThis.CustomEvent(eventName, { composed: true, bubbles: true })\n    );\n  }\n}\n\nif (!globalThis.customElements.get('media-cast-button')) {\n  globalThis.customElements.define('media-cast-button', MediaCastButton);\n}\n\nexport default MediaCastButton;\n", "import {\n  MediaUIAttributes,\n  MediaUIEvents,\n  MediaStateReceiverAttributes,\n  PointerTypes,\n} from './constants.js';\nimport {\n  closestComposedNode,\n  getBooleanAttr,\n  setBooleanAttr,\n} from './utils/element-utils.js';\nimport { globalThis, document } from './utils/server-safe-globals.js';\n\nconst template = document.createElement('template');\n\ntemplate.innerHTML = /*html*/`\n<style>\n  :host {\n    display: var(--media-control-display, var(--media-gesture-receiver-display, inline-block));\n    box-sizing: border-box;\n  }\n</style>\n`;\n\n/**\n * @extends {HTMLElement}\n *\n * @attr {boolean} mediapaused - (read-only) Present if the media is paused.\n * @attr {string} mediacontroller - The element `id` of the media controller to connect to (if not nested within).\n *\n * @cssproperty --media-gesture-receiver-display - `display` property of gesture receiver.\n * @cssproperty --media-control-display - `display` property of control.\n */\nclass MediaGestureReceiver extends globalThis.HTMLElement {\n  #mediaController;\n\n  // NOTE: Currently \"baking in\" actions + attrs until we come up with\n  // a more robust architecture (CJP)\n  static get observedAttributes() {\n    return [\n      MediaStateReceiverAttributes.MEDIA_CONTROLLER,\n      MediaUIAttributes.MEDIA_PAUSED,\n    ];\n  }\n\n  constructor(options = {}) {\n    super();\n\n    if (!this.shadowRoot) {\n      // Set up the Shadow DOM if not using Declarative Shadow DOM.\n      const shadow = this.attachShadow({ mode: 'open' });\n\n      const buttonHTML = template.content.cloneNode(true);\n      this.nativeEl = buttonHTML;\n\n      // Slots\n      let slotTemplate = options.slotTemplate;\n\n      if (!slotTemplate) {\n        slotTemplate = document.createElement('template');\n        slotTemplate.innerHTML = `<slot>${options.defaultContent || ''}</slot>`;\n      }\n\n      this.nativeEl.appendChild(slotTemplate.content.cloneNode(true));\n      shadow.appendChild(buttonHTML);\n    }\n  }\n\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    if (attrName === MediaStateReceiverAttributes.MEDIA_CONTROLLER) {\n      if (oldValue) {\n        this.#mediaController?.unassociateElement?.(this);\n        this.#mediaController = null;\n      }\n      if (newValue) {\n        // @ts-ignore\n        this.#mediaController = this.getRootNode()?.getElementById(newValue);\n        this.#mediaController?.associateElement?.(this);\n      }\n    }\n  }\n\n  connectedCallback() {\n    this.tabIndex = -1;\n    this.setAttribute('aria-hidden', 'true');\n\n    this.#mediaController = getMediaControllerEl(this);\n    if (this.getAttribute(MediaStateReceiverAttributes.MEDIA_CONTROLLER)) {\n      this.#mediaController?.associateElement?.(this);\n    }\n\n    this.#mediaController?.addEventListener('pointerdown', this);\n    this.#mediaController?.addEventListener('click', this);\n  }\n\n  disconnectedCallback() {\n    // Use cached mediaController, getRootNode() doesn't work if disconnected.\n    if (this.getAttribute(MediaStateReceiverAttributes.MEDIA_CONTROLLER)) {\n      this.#mediaController?.unassociateElement?.(this);\n    }\n\n    this.#mediaController?.removeEventListener('pointerdown', this);\n    this.#mediaController?.removeEventListener('click', this);\n    this.#mediaController = null;\n  }\n\n  handleEvent(event) {\n    const composedTarget = event.composedPath()?.[0];\n    const allowList = ['video', 'media-controller'];\n    if (!allowList.includes(composedTarget?.localName)) return;\n\n    if (event.type === 'pointerdown') {\n      // Since not all browsers have updated to be spec compliant, where 'click' events should be PointerEvents,\n      // we can use use 'pointerdown' to reliably determine the pointer type. (CJP).\n      this._pointerType = event.pointerType;\n    } else if (event.type === 'click') {\n      // Cannot use composedPath or target because this is a layer on top and pointer events are disabled.\n      // Attach to window and check if click is in this element's bounding box to keep <video> right-click menu.\n      const { clientX, clientY } = event;\n      const { left, top, width, height } = this.getBoundingClientRect();\n      const x = clientX - left;\n      const y = clientY - top;\n      if (\n        x < 0 ||\n        y < 0 ||\n        x > width ||\n        y > height ||\n        // In case this element has no dimensions (or display: none) return.\n        (width === 0 && height === 0)\n      ) {\n        return;\n      }\n\n      const { pointerType = this._pointerType } = event;\n      // NOTE: While there are cases where we may have a stale this._pointerType,\n      // we're guaranteed that the most recent this._pointerType will correspond\n      // to the current click event definitionally. As such, this clearing is technically\n      // unnecessary (CJP)\n      this._pointerType = undefined;\n\n      // NOTE: Longer term, we'll likely want to delay this to support double click/double tap (CJP)\n      if (pointerType === PointerTypes.TOUCH) {\n        this.handleTap(event);\n        return;\n      } else if (pointerType === PointerTypes.MOUSE) {\n        this.handleMouseClick(event);\n        return;\n      }\n    }\n  }\n\n  /**\n   * @type {boolean} Is the media paused\n   */\n  get mediaPaused() {\n    return getBooleanAttr(this, MediaUIAttributes.MEDIA_PAUSED);\n  }\n\n  set mediaPaused(value) {\n    setBooleanAttr(this, MediaUIAttributes.MEDIA_PAUSED, value);\n  }\n\n  // NOTE: Currently \"baking in\" actions + attrs until we come up with\n  // a more robust architecture (CJP)\n  /**\n   * @abstract\n   * @argument {Event} e\n   */\n  handleTap(e) {} // eslint-disable-line\n\n  // eslint-disable-next-line\n  handleMouseClick(e) {\n    const eventName = this.mediaPaused\n      ? MediaUIEvents.MEDIA_PLAY_REQUEST\n      : MediaUIEvents.MEDIA_PAUSE_REQUEST;\n    this.dispatchEvent(\n      new globalThis.CustomEvent(eventName, { composed: true, bubbles: true })\n    );\n  }\n}\n\nfunction getMediaControllerEl(controlEl) {\n  const mediaControllerId = controlEl.getAttribute(\n    MediaStateReceiverAttributes.MEDIA_CONTROLLER\n  );\n  if (mediaControllerId) {\n    return controlEl.getRootNode()?.getElementById(mediaControllerId);\n  }\n  return closestComposedNode(controlEl, 'media-controller');\n}\n\nif (!globalThis.customElements.get('media-gesture-receiver')) {\n  globalThis.customElements.define('media-gesture-receiver', MediaGestureReceiver);\n}\n\nexport default MediaGestureReceiver;\n", "/*\n  The <media-chrome> can contain the control elements\n  and the media element. Features:\n  * Auto-set the `media` attribute on child media chrome elements\n    * Uses the element with slot=\"media\"\n  * Take custom controls to fullscreen\n  * Position controls at the bottom\n  * Auto-hide controls on inactivity while playing\n*/\nimport { globalThis, document } from './utils/server-safe-globals.js';\nimport {\n  MediaUIEvents,\n  MediaUIAttributes,\n  MediaStateChangeEvents,\n} from './constants.js';\nimport { nouns } from './labels/labels.js';\n// Guarantee that `<media-gesture-receiver/>` is available for use in the template\nimport './media-gesture-receiver.js';\n\nexport const Attributes = {\n  AUDIO: 'audio',\n  AUTOHIDE: 'autohide',\n  BREAKPOINTS: 'breakpoints',\n  GESTURES_DISABLED: 'gesturesdisabled',\n  KEYBOARD_CONTROL: 'keyboardcontrol',\n  NO_AUTOHIDE: 'noautohide',\n  USER_INACTIVE: 'userinactive',\n};\n\nconst template = document.createElement('template');\n\ntemplate.innerHTML = /*html*/`\n  <style>\n    ${\n      /*\n       * outline on media is turned off because it is allowed to get focus to faciliate hotkeys.\n       * However, on keyboard interactions, the focus outline is shown,\n       * which is particularly noticeable when going fullscreen via hotkeys.\n       */ ''\n    }\n    :host([${MediaUIAttributes.MEDIA_IS_FULLSCREEN}]) ::slotted([slot=media]) {\n      outline: none;\n    }\n\n    :host {\n      box-sizing: border-box;\n      position: relative;\n      display: inline-block;\n      line-height: 0;\n      background-color: var(--media-background-color, #000);\n    }\n\n    :host(:not([${Attributes.AUDIO}])) [part~=layer]:not([part~=media-layer]) {\n      position: absolute;\n      top: 0;\n      left: 0;\n      bottom: 0;\n      right: 0;\n      display: flex;\n      flex-flow: column nowrap;\n      align-items: start;\n      pointer-events: none;\n      background: none;\n    }\n\n    slot[name=media] {\n      display: var(--media-slot-display, contents);\n    }\n\n    ${\n      /*\n       * when in audio mode, hide the slotted media element by default\n       */ ''\n    }\n    :host([${Attributes.AUDIO}]) slot[name=media] {\n      display: var(--media-slot-display, none);\n    }\n\n    ${\n      /*\n       * when in audio mode, hide the gesture-layer which causes media-controller to be taller than the control bar\n       */ ''\n    }\n    :host([${Attributes.AUDIO}]) [part~=layer][part~=gesture-layer] {\n      height: 0;\n      display: block;\n    }\n\n    ${\n      /*\n       * if gestures are disabled, don't accept pointer-events\n       */ ''\n    }\n    :host(:not([${Attributes.AUDIO}])[${Attributes.GESTURES_DISABLED}]) ::slotted([slot=gestures-chrome]),\n    :host(:not([${Attributes.AUDIO}])[${Attributes.GESTURES_DISABLED}]) media-gesture-receiver[slot=gestures-chrome] {\n      display: none;\n    }\n\n    ${\n      /*\n       * any slotted element that isn't a poster or media slot should be pointer-events auto\n       * we'll want to add here any slotted elements that shouldn't get pointer-events by default when slotted\n       */ ''\n    }\n    ::slotted(:not([slot=media]):not([slot=poster]):not(media-loading-indicator)) {\n      pointer-events: auto;\n    }\n\n    :host(:not([${Attributes.AUDIO}])) *[part~=layer][part~=centered-layer] {\n      align-items: center;\n      justify-content: center;\n    }\n\n    :host(:not([${Attributes.AUDIO}])) ::slotted(media-gesture-receiver[slot=gestures-chrome]),\n    :host(:not([${Attributes.AUDIO}])) media-gesture-receiver[slot=gestures-chrome] {\n      align-self: stretch;\n      flex-grow: 1;\n    }\n\n    slot[name=middle-chrome] {\n      display: inline;\n      flex-grow: 1;\n      pointer-events: none;\n      background: none;\n    }\n\n    ${/* Position the media and poster elements to fill the container */ ''}\n    ::slotted([slot=media]),\n    ::slotted([slot=poster]) {\n      width: 100%;\n      height: 100%;\n    }\n\n    ${/* Video specific styles */ ''}\n    :host(:not([${Attributes.AUDIO}])) .spacer {\n      flex-grow: 1;\n    }\n\n    ${/* Safari needs this to actually make the element fill the window */ ''}\n    :host(:-webkit-full-screen) {\n      ${/* Needs to use !important otherwise easy to break */ ''}\n      width: 100% !important;\n      height: 100% !important;\n    }\n\n    ${/* Only add these if auto hide is not disabled */ ''}\n    ::slotted(:not([slot=media]):not([${Attributes.NO_AUTOHIDE}])) {\n      opacity: 1;\n      transition: opacity 0.25s;\n    }\n\n    ${\n      /* Hide controls when inactive, not paused, not audio and auto hide not disabled */ ''\n    }\n    :host([${Attributes.USER_INACTIVE}]:not([${MediaUIAttributes.MEDIA_PAUSED}]):not([${MediaUIAttributes.MEDIA_IS_CASTING}]):not([${Attributes.AUDIO}])) ::slotted(:not([slot=media]):not([${Attributes.NO_AUTOHIDE}])) {\n      opacity: 0;\n      transition: opacity 1s;\n    }\n\n    ::slotted(media-control-bar)  {\n      align-self: stretch;\n    }\n\n    :host([${MediaUIAttributes.MEDIA_HAS_PLAYED}]) ::slotted([slot=poster]) {\n      display: none;\n    }\n  </style>\n\n  <slot name=\"media\" part=\"layer media-layer\"></slot>\n  <slot name=\"poster\" part=\"layer poster-layer\"></slot>\n  <slot name=\"gestures-chrome\" part=\"layer gesture-layer\">\n    <media-gesture-receiver slot=\"gestures-chrome\"></media-gesture-receiver>\n  </slot>\n  <span part=\"layer vertical-layer\">\n    <slot name=\"top-chrome\" part=\"top chrome\"></slot>\n    <slot name=\"middle-chrome\" part=\"middle chrome\"></slot>\n    <slot name=\"centered-chrome\" part=\"layer centered-layer center centered chrome\"></slot>\n    ${/* default, effectively \"bottom-chrome\" */ ''}\n    <slot part=\"bottom chrome\"></slot>\n  </span>\n`;\n\nconst MEDIA_UI_ATTRIBUTE_NAMES = Object.values(MediaUIAttributes);\n\nconst defaultBreakpoints = 'sm:384 md:576 lg:768 xl:960';\n\nconst resizeCallback = (entries) => {\n  for (const entry of entries) {\n    const container = entry.target;\n\n    if (!container.isConnected) continue;\n\n    const breakpoints =\n      container.getAttribute(Attributes.BREAKPOINTS) ?? defaultBreakpoints;\n    const ranges = createBreakpointMap(breakpoints);\n    const activeBreakpoints = getBreakpoints(ranges, entry.contentRect);\n\n    let changed = false;\n\n    Object.keys(ranges).forEach((name) => {\n      if (activeBreakpoints.includes(name)) {\n        if (!container.hasAttribute(`breakpoint${name}`)) {\n          container.setAttribute(`breakpoint${name}`, '');\n          changed = true;\n        }\n        return;\n      }\n\n      if (container.hasAttribute(`breakpoint${name}`)) {\n        container.removeAttribute(`breakpoint${name}`);\n        changed = true;\n      }\n    });\n\n    if (changed) {\n      const evt = new CustomEvent(MediaStateChangeEvents.BREAKPOINTS_CHANGE, {\n        detail: activeBreakpoints\n      });\n\n      container.dispatchEvent(evt)\n    }\n  }\n};\n\nfunction createBreakpointMap(breakpoints) {\n  const pairs = breakpoints.split(/\\s+/);\n  return Object.fromEntries(pairs.map((pair) => pair.split(':')));\n}\n\nfunction getBreakpoints(breakpoints, rect) {\n  return Object.keys(breakpoints).filter((name) => {\n    return rect.width >= breakpoints[name];\n  });\n}\n\n/**\n * @extends {HTMLElement}\n *\n * @attr {boolean} audio\n * @attr {string} autohide\n * @attr {string} breakpoints\n * @attr {boolean} gesturesdisabled\n * @attr {boolean} keyboardcontrol\n * @attr {boolean} noautohide\n * @attr {boolean} userinactive\n *\n * @cssprop --media-background-color - `background-color` of container.\n * @cssprop --media-slot-display - `display` of the media slot (default none for [audio] usage).\n */\nclass MediaContainer extends globalThis.HTMLElement {\n  constructor() {\n    super();\n\n    if (!this.shadowRoot) {\n      // Set up the Shadow DOM if not using Declarative Shadow DOM.\n      this.attachShadow({ mode: 'open' });\n      this.shadowRoot.appendChild(template.content.cloneNode(true));\n    }\n\n    // Watch for child adds/removes and update the media element if necessary\n    const mutationCallback = (mutationsList) => {\n      const media = this.media;\n\n      for (let mutation of mutationsList) {\n        if (mutation.type === 'childList') {\n          // Media element being removed\n          mutation.removedNodes.forEach((node) => {\n            // Is this a direct child media element of media-controller?\n            // TODO: This accuracy doesn't matter after moving away from media attrs.\n            // Could refactor so we can always just call 'dispose' on any removed media el.\n            if (node.slot == 'media' && mutation.target == this) {\n              // Check if this was the current media by if it was the first\n              // el with slot=media in the child list. There could be multiple.\n              let previousSibling =\n                mutation.previousSibling &&\n                mutation.previousSibling.previousElementSibling;\n\n              // Must have been first if no prev sibling or new media\n              if (!previousSibling || !media) {\n                this.mediaUnsetCallback(node);\n              } else {\n                // Check if any prev siblings had a slot=media\n                // Should remain true otherwise\n                let wasFirst = previousSibling.slot !== 'media';\n                while (\n                  (previousSibling = previousSibling.previousSibling) !== null\n                ) {\n                  if (previousSibling.slot == 'media') wasFirst = false;\n                }\n                if (wasFirst) this.mediaUnsetCallback(node);\n              }\n            }\n          });\n\n          // Controls or media element being added\n          // No need to inject anything if media=null\n          if (media) {\n            mutation.addedNodes.forEach((node) => {\n              if (node == media) {\n                // Update all controls with new media if this is the new media\n                this.handleMediaUpdated(media).then((media) =>\n                  this.mediaSetCallback(media)\n                );\n              }\n            });\n          }\n        }\n      }\n    };\n\n    const mutationObserver = new MutationObserver(mutationCallback);\n    mutationObserver.observe(this, { childList: true, subtree: true });\n\n    let pendingResizeCb = false;\n    const deferResizeCallback = (entries) => {\n      // Already have a pending async breakpoint computation, so go ahead and bail\n      if (pendingResizeCb) return;\n      // Just in case it takes too long (which will cause an error to throw),\n      // do the breakpoint computation asynchronously\n      globalThis.queueMicrotask(() => {\n        resizeCallback(entries);\n        // Once we've completed, reset the pending cb flag to false\n        pendingResizeCb = false;\n      });\n      pendingResizeCb = true;\n    };\n    const resizeObserver = new ResizeObserver(deferResizeCallback);\n    this.resizeObserver = resizeObserver;\n    resizeObserver.observe(this);\n\n    // Handles the case when the slotted media element is a slot element itself.\n    // e.g. chaining media slots for media themes.\n    let currentMedia = this.media;\n    /** @type {HTMLSlotElement} */\n    let chainedSlot = this.querySelector(':scope > slot[slot=media]');\n    if (chainedSlot) {\n      chainedSlot.addEventListener('slotchange', () => {\n        const slotEls = chainedSlot.assignedElements({ flatten: true });\n        if (!slotEls.length) {\n          this.mediaUnsetCallback(currentMedia);\n          return;\n        }\n        if (this.media) {\n          currentMedia = this.media;\n          this.handleMediaUpdated(this.media).then((media) =>\n            this.mediaSetCallback(media)\n          );\n        }\n      });\n    }\n  }\n\n  static get observedAttributes() {\n    return [Attributes.AUTOHIDE, Attributes.GESTURES_DISABLED].concat(\n      MEDIA_UI_ATTRIBUTE_NAMES\n    );\n  }\n\n  // Could share this code with media-chrome-html-element instead\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    if (attrName.toLowerCase() == Attributes.AUTOHIDE) {\n      this.autohide = newValue;\n    }\n  }\n\n  // First direct child with slot=media, or null\n  /**\n   * @returns {HTMLVideoElement &\n   * {buffered,\n   * webkitEnterFullscreen?,\n   * webkitExitFullscreen?,\n   * requestCast?,\n   * webkitShowPlaybackTargetPicker?,\n   * }}\n   */\n  get media() {\n    /** @type {HTMLVideoElement} */\n    let media = this.querySelector(':scope > [slot=media]');\n\n    // Chaining media slots for media templates\n    if (media?.nodeName == 'SLOT')\n      // @ts-ignore\n      media = media.assignedElements({ flatten: true })[0];\n\n    return media;\n  }\n\n  mediaSetCallback(media) {\n    // Toggle play/pause with clicks on the media element itself\n    this._mediaClickPlayToggle = () => {\n      const eventName = media.paused\n        ? MediaUIEvents.MEDIA_PLAY_REQUEST\n        : MediaUIEvents.MEDIA_PAUSE_REQUEST;\n      this.dispatchEvent(\n        new globalThis.CustomEvent(eventName, { composed: true, bubbles: true })\n      );\n    };\n  }\n\n  handleMediaUpdated(media) {\n    const resolveMediaPromise = (media) => {\n      // media.addEventListener('click', this._mediaClickPlayToggle, false);\n\n      return Promise.resolve(media);\n    };\n\n    const rejectMediaPromise = (media) => {\n      console.error(\n        '<media-chrome>: Media element set with slot=\"media\" does not appear to be compatible.',\n        media\n      );\n      return Promise.reject(media);\n    };\n\n    // Anything \"falsy\" couldn't act as a media element. Reject.\n    if (!media) {\n      return rejectMediaPromise(media);\n    }\n\n    const mediaName = media.nodeName.toLowerCase();\n    // Custom element. Wait until it's defined before resolving\n    if (mediaName.includes('-')) {\n      return globalThis.customElements.whenDefined(mediaName).then(() => {\n        return resolveMediaPromise(media);\n      });\n    }\n\n    // Exists and isn't a custom element. Resolve.\n    return resolveMediaPromise(media);\n  }\n\n  /**\n   * @abstract\n   */\n  // eslint-disable-next-line\n  mediaUnsetCallback(node) {\n    // media.removeEventListener('click', this._mediaClickPlayToggle);\n  }\n\n  connectedCallback() {\n    const isAudioChrome = this.getAttribute(Attributes.AUDIO) != null;\n    const label = isAudioChrome ? nouns.AUDIO_PLAYER() : nouns.VIDEO_PLAYER();\n    this.setAttribute('role', 'region');\n    this.setAttribute('aria-label', label);\n\n    if (this.media) {\n      this.handleMediaUpdated(this.media).then((media) =>\n        this.mediaSetCallback(media)\n      );\n    }\n\n    // Assume user is inactive until they're not (aka userinactive by default is true)\n    // This allows things like autoplay and programmatic playing to also initiate hiding controls (CJP)\n    this.setAttribute(Attributes.USER_INACTIVE, '');\n\n    const setInactive = () => {\n      if (this.autohide < 0) return;\n      if (this.hasAttribute(Attributes.USER_INACTIVE)) return;\n\n      this.setAttribute(Attributes.USER_INACTIVE, '');\n\n      const evt = new globalThis.CustomEvent(\n        MediaStateChangeEvents.USER_INACTIVE,\n        { composed: true, bubbles: true, detail: true }\n      );\n      this.dispatchEvent(evt);\n    };\n\n    const setActive = () => {\n      if (!this.hasAttribute(Attributes.USER_INACTIVE)) return;\n\n      this.removeAttribute(Attributes.USER_INACTIVE);\n\n      const evt = new globalThis.CustomEvent(\n        MediaStateChangeEvents.USER_INACTIVE,\n        { composed: true, bubbles: true, detail: false }\n      );\n      this.dispatchEvent(evt);\n    }\n\n    const scheduleInactive = () => {\n      setActive();\n\n      globalThis.clearTimeout(this._inactiveTimeout);\n\n      // Setting autohide to -1 turns off autohide\n      if (this.autohide < 0) return;\n\n      this._inactiveTimeout = globalThis.setTimeout(() => {\n        setInactive();\n      }, this.autohide * 1000);\n    };\n\n    // Unhide for keyboard controlling\n    this.addEventListener('keyup', () => {\n      scheduleInactive();\n    });\n\n    // when we get a tap, we want to unhide\n    this.addEventListener('pointerup', (e) => {\n      if (e.pointerType === 'touch') {\n        if (\n          // @ts-ignore\n          [this, this.media].includes(e.target) &&\n          !this.hasAttribute(Attributes.USER_INACTIVE)\n        ) {\n          setInactive();\n        } else {\n          scheduleInactive();\n        }\n      } else if (\n        e.composedPath().some((el) =>\n          ['media-play-button', 'media-fullscreen-button'].includes(\n            // @ts-ignore\n            el?.nodeName?.toLowerCase()\n          )\n        )\n      ) {\n        scheduleInactive();\n      }\n    });\n\n    this.addEventListener('pointermove', (e) => {\n      // pointermove doesn't happen with touch on taps on iOS, but does on android,\n      // so, only run pointermove for mouse\n      if (e.pointerType !== 'mouse') return;\n\n      setActive();\n      // Stay visible if hovered over control bar\n      globalThis.clearTimeout(this._inactiveTimeout);\n\n      // If hovering over something other than controls, we're free to make inactive\n      // @ts-ignore\n      if ([this, this.media].includes(e.target)) {\n        scheduleInactive();\n      }\n    });\n\n    // Immediately hide if mouse leaves the container\n    this.addEventListener('mouseleave', () => {\n      setInactive();\n    });\n\n    // Allow for focus styles only when using the keyboard to navigate\n    this.addEventListener('keyup', () => {\n      this.setAttribute(Attributes.KEYBOARD_CONTROL, '');\n    });\n    globalThis.window?.addEventListener('mouseup', () => {\n      this.removeAttribute(Attributes.KEYBOARD_CONTROL);\n    });\n  }\n\n  set autohide(seconds) {\n    seconds = Number(seconds);\n    this._autohide = isNaN(seconds) ? 0 : seconds;\n  }\n\n  get autohide() {\n    return this._autohide === undefined ? 2 : this._autohide;\n  }\n}\n\n// NOTE: Since MediaContainer is not currently designed to be used directly as\n// a custom element, unlike other components, we do not `define()` it.\n\nexport { MediaContainer };\nexport default MediaContainer;\n", "/** @implements {Pick<DOMTokenList, 'length' | 'value' | 'toString' | 'item' | 'add' | 'remove' | 'contains' | 'toggle' | 'replace'>} */\nexport class AttributeTokenList {\n  #el;\n  #attr;\n  #defaultSet;\n  #tokenSet = new Set();\n\n  constructor(el, attr, { defaultValue } = { defaultValue: undefined }) {\n    this.#el = el;\n    this.#attr = attr;\n    this.#defaultSet = new Set(defaultValue);\n  }\n\n  [Symbol.iterator]() {\n    return this.#tokens.values();\n  }\n\n  get #tokens() {\n    return this.#tokenSet.size ? this.#tokenSet : this.#defaultSet;\n  }\n\n  get length() {\n    return this.#tokens.size;\n  }\n\n  get value() {\n    return [...this.#tokens].join(' ') ?? '';\n  }\n\n  set value(val) {\n    if (val === this.value) return;\n    this.#tokenSet = new Set();\n    this.add(...(val?.split(' ') ?? []));\n  }\n\n  toString() {\n    return this.value;\n  }\n\n  item(index) {\n    return [...this.#tokens][index];\n  }\n\n  values() {\n    return this.#tokens.values();\n  }\n\n  forEach(callback) {\n    this.#tokens.forEach(callback);\n  }\n\n  add(...tokens) {\n    tokens.forEach((t) => this.#tokenSet.add(t));\n    // if the attribute was removed don't try to add it again.\n    if (this.value === '' && !this.#el?.hasAttribute(`${this.#attr}`)) {\n      return;\n    }\n    this.#el?.setAttribute(`${this.#attr}`, `${this.value}`);\n  }\n\n  remove(...tokens) {\n    tokens.forEach((t) => this.#tokenSet.delete(t));\n    this.#el?.setAttribute(`${this.#attr}`, `${this.value}`);\n  }\n\n  contains(token) {\n    return this.#tokens.has(token);\n  }\n\n  toggle(token, force) {\n    if (typeof force !== 'undefined') {\n      if (force) {\n        this.add(token);\n        return true;\n      } else {\n        this.remove(token);\n        return false;\n      }\n    }\n\n    if (this.contains(token)) {\n      this.remove(token);\n      return false;\n    }\n\n    this.add(token);\n    return true;\n  }\n\n  replace(oldToken, newToken) {\n    this.remove(oldToken);\n    this.add(newToken);\n    return oldToken === newToken;\n  }\n}\n", "import { globalThis } from './server-safe-globals.js';\nimport { MediaUIEvents, MediaUIAttributes } from '../constants.js';\n\n// NOTE: This is generic for any CSS/html list representation. Consider renaming and moving to generic module.\n/**\n * Splits a string (representing TextTracks) into an array of strings based on whitespace.\n * @param {string} [textTracksStr = ''] - a string of 1+ \"items\" (representing TextTracks), separated by whitespace\n * @returns {Array<string>} An array of non-whitesace strings (each representing a single TextTrack).\n */\nexport const splitTextTracksStr = (textTracksStr = '') =>\n  textTracksStr.split(/\\s+/);\n\n/**\n * Parses a string that represents a TextTrack into a \"TextTrack-like object\"\n * The expected TextTrack string format is:\n * \"language[:label]\"\n * where the language *should* conform to BCP 47, just like TextTracks, and the (optional)\n * label *must* be URL encoded.\n * Note that this format may be expanded to include additional properties, such as\n * `id`.\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TextTrack\n * @param {string} [textTrackStr = ''] - A well-defined TextTrack string representations\n * @returns {Object} An object that resembles a (partial) TextTrack (`{ language: string; label?: string; }`)\n */\nexport const parseTextTrackStr = (textTrackStr = '') => {\n  let [kind, language, encodedLabel] = textTrackStr.split(':');\n  const label = encodedLabel ? decodeURIComponent(encodedLabel) : undefined;\n  kind = kind === 'cc' ? 'captions' : 'subtitles';\n  return {\n    kind,\n    language,\n    label,\n  };\n};\n\n/**\n * Parses a whitespacae-separated string that represents list of TextTracks into an array of TextTrack-like objects,\n * where each object will have the properties identified by the corresponding string, plus any properties generically\n * provided by the (optional) `textTrackLikeObj` argument.\n * @param {string} [textTracksStr = ''] - a string of 1+ \"items\" (representing TextTracks), separated by whitespace\n * @param {Object} [textTrackLikeObj] An object that resembles a (partial) TextTrack, used to add generic properties to all parsed TextTracks.\n * @returns {Array<Object>} An array of \"TextTrack-like objects\", each with properties parsed from the string and any properties from `textTrackLikeObj`.\n * @example\n * ```js\n * const tracksStr = 'en-US:English en:English%20%28with%20descriptions%29';\n * const tracks = parseTextTracksStr(tracksStr);\n * // [{ language: 'en-US', label: 'English' }, { language: 'en', label: 'English (with descriptions)' }];\n *\n * const tracksData = { kind: 'captions' };\n * const tracksWithData = parseTextTracksStr(tracksStr, tracksData);\n * // [{ language: 'en-US', label: 'English', kind: 'captions' }, { language: 'en', label: 'English (with descriptions)', kind: 'captions' }];\n * ```\n */\nexport const parseTextTracksStr = (\n  textTracksStr = '',\n  textTrackLikeObj = {}\n) => {\n  return splitTextTracksStr(textTracksStr).map((textTrackStr) => {\n    const textTrackObj = parseTextTrackStr(textTrackStr);\n    return {\n      ...textTrackLikeObj,\n      ...textTrackObj,\n    };\n  });\n};\n\n/**\n * Takes a variety of possible representations of TextTrack(s) and \"normalizes\" them to an Array of 1+ TextTrack-like objects.\n * @param {Array<string|Object>|string|Object} trackOrTracks - A value representing 1+ TextTracks\n * @returns {Array<Object>} An array of TextTrack-like objects.\n */\nexport const parseTracks = (trackOrTracks) => {\n  // Already an array, but might be an array of strings, objects, or both.\n  if (Array.isArray(trackOrTracks)) {\n    return trackOrTracks.map((trackObjOrStr) => {\n      // If the individual track is a string representation, translate it into a TextTrack-like object.\n      if (typeof trackObjOrStr === 'string') {\n        return parseTextTrackStr(trackObjOrStr);\n      }\n      // Otherwise, assume it already is one.\n      return trackObjOrStr;\n    });\n  }\n  // A string of 1+ TextTrack representations. Parse into an array of objects.\n  if (typeof trackOrTracks === 'string') {\n    return parseTextTracksStr(trackOrTracks);\n  }\n  // Assume a single TextTrack-like object. Wrap into an array of 1.\n  return [trackOrTracks];\n};\n\n/**\n * Translates a TextTrack-like object into a well-defined string representation for the TextTrack\n * @param {Object} obj - A TextTrack or TextTrack-like object\n * @param {string} obj.kind - A required kind for the track.\n * @param {string} [obj.label] - An optional label for the track.\n * @param {string} [obj.language] - The BCP-47 compliant string representing the language code of the track\n * @returns {string} A string representing a TextTrack with the format: \"language[:label]\"\n */\nexport const formatTextTrackObj = ({ kind, label, language } = { kind: 'subtitles' }) => {\n  if (!label) return language;\n  return `${kind === 'captions' ? 'cc': 'sb'}:${language}:${encodeURIComponent(label)}`;\n};\n\n/**\n * Translates a set of TextTracks into a well-defined, whitespace-separated string representation of the set\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TextTrackList\n * @param {Array<TextTrack|object>|TextTrackList} textTracks - A TextTracks object or an Array of TextTracks or TextTrack-like objects.\n * @returns A string representing a set of TextTracks, separated by whitespace.\n */\nexport const stringifyTextTrackList = (textTracks = []) => {\n  return Array.prototype.map.call(textTracks, formatTextTrackObj).join(' ');\n};\n\n// NOTE: This is a generic higher order fn. Consider and moving to generic module.\n/**\n * A generic higher-order function that yields a predicate to assert whether or not some value has the provided key/value pair\n * @param {string|number} key - The property key/name against which we'd like to match\n * @param {*} value - The value of the key we expect for a match\n * @returns {Function} - A predicate function that yields true if the provided object has the expected key/value pair, otherwise false.\n * @example\n * ```js\n * const hasShowingMode = isMatchingPropOf('mode', 'showing');\n * hasShowingMode({ mode: 'showing' }); // true\n * hasShowingMode({ mode: 'disabled' }); // false\n * hasShowingMode({ no_mode: 'any' }); // false\n * ```\n */\nexport const isMatchingPropOf = (key, value) => (obj) => obj[key] === value;\n\n// NOTE: This is a generic higher order fn. Consider renaming and moving to generic module.\n/**\n * A higher-order function that yields a single predicate to assert whether or not some value has *every* key/value pair defined in `filterObj`.\n * @param {object} filterObj - An object of key/value pairs that we expect on a given object\n * @returns {Function} - A predicate function that yields true iff the provided object has *every* key/value pair in `filterObj`, otherwise false\n * @example\n * ```js\n * const track1 = { label: 'English', kind: 'captions', language: 'en-US' };\n * const track1a = { label: 'English', kind: 'captions', language: 'en-US', id: '1', mode: 'showing' };\n * const track2 = { label: 'English (with descriptions)', kind: 'captions', language: 'en-US', id: '2', mode: 'disabled' };\n * const track3 = { label: 'Espa\u00F1ol', kind: 'subtitles', language: 'es-MX', id: '3', mode: 'disabled' };\n * const track4 = { label: 'English', language: 'en-US', mode: 'showing' };\n *\n * const isMatchingTrack = textTrackObjAsPred({ label: 'English', kind: 'captions', language: 'en-US' });\n * isMatchingTrack(track1); // true\n * isMatchingTrack(track1a); // true\n * isMatchingTrack(track2); // false\n * isMatchingTrack(track3); // false\n * isMatchingTrack(track4); // false\n * isMatchingTrack({ no_corresponding_props: 'any' }); // false\n * ```\n */\nexport const textTrackObjAsPred = (filterObj) => {\n  const preds = Object.entries(filterObj).map(([key, value]) => {\n    // Translate each key/value pair into a single predicate\n    return isMatchingPropOf(key, value);\n  });\n\n  // Return a predicate function that takes the array of single key/value pair predicates and asserts that *every* pred in the array is true of the (TextTrack-like) object\n  return (textTrack) => preds.every((pred) => pred(textTrack));\n};\n\n/**\n * Updates any `tracks` that match one of the `tracksToUpdate` to be in the provided TextTrack `mode`.\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TextTrack/mode\n * @see {@link parseTracks}\n * @param {string} mode - The desired mode for any matching TextTracks. Should be one of \"disabled\"|\"hidden\"|\"showing\"\n * @param {TextTrackList|Array<TextTrack|Object>} tracks - A TextTracks object or array of TextTracks that should contain any matching TextTracks to update\n * @param {Array<string|Object>|string|Object} tracksToUpdate - A value representing a set of TextTracks\n */\nexport const updateTracksModeTo = (mode, tracks = [], tracksToUpdate = []) => {\n  // 1. Normalize the tracksToUpdate into an array of \"partial TextTrack-like\" objects\n  // 2. Convert each object into its own predicate function to identify that an actual TextTrack is a match\n  const preds = parseTracks(tracksToUpdate).map(textTrackObjAsPred);\n\n  // A track is identified as a track to update as long as it matches *one* of the preds (i.e. as long as it \"looks like\" one of \"partial TextTrack-like\" objects)\n  const isTrackToUpdate = (textTrack) => {\n    return preds.some((pred) => pred(textTrack));\n  };\n\n  Array.from(tracks)\n    // 1. Filter to only include tracks to update\n    .filter(isTrackToUpdate)\n    // 2. Update each of those tracks to the appropriate mode.\n    .forEach((textTrack) => {\n      textTrack.mode = mode;\n    });\n};\n\n/**\n * Takes an `HTMLMediaElement media` and yields an array of `TextTracks` that match the provided `filterPredOrObj` criteria (or all `TextTracks` by default).\n * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/textTracks\n * @see {@link textTrackObjAsPred}\n * @param {HTMLMediaElement} media - An HTMLMediaElement with an expected textTracks value\n * (NOTE: This uses \"structural polymorphism\", so as long as `media` has an Array-like `textTracks` value of TextTrack-like objects, this function will work).\n * @param {Function|Object} [filterPredOrObj] Either a predicate function or an object that can be translated into a predicate function of matching key/value pairs.\n * @returns {Array<TextTrack>} An array of TextTracks that match the given `filterPredOrObj` (or all TextTracks on `media` by default)\n * @example\n * ```html\n * <!DOCTYPE html>\n * <html lang=\"en\">\n * <head></head>\n * <body>\n * <video src=\"https://stream.mux.com/DS00Spx1CV902MCtPj5WknGlR102V5HFkDe/high.mp4\">\n *   <track label=\"Spanish\" kind=\"subtitles\" srclang=\"es\" src=\"./vtt/en-sub.vtt\">\n *   <track label=\"English\" kind=\"subtitles\" srclang=\"en\" src=\"./vtt/es-sub.vtt\">\n *   <track label=\"English\" kind=\"captions\" srclang=\"en\" src=\"./vtt/en-cc.vtt\">\n  </video>\n * </body>\n * </html>\n * ```\n * ```js\n * // js ...\n * const media = document.querySelector('video');\n * getTextTracksList(media, { kind: 'subtitles' });\n * // [{ label: 'Spanish', kind: 'subtitles', language: 'es' }, { label: 'English', kind: 'subtitles', language: 'en' }]\n * getTextTracksList(media, { kind: 'captions' });\n * // [{ label: 'English', kind: 'captions', language: 'en' }]\n * getTextTracksList(media);\n * // [{ label: 'Spanish', kind: 'subtitles', language: 'es' }, { label: 'English', kind: 'subtitles', language: 'en' }, { label: 'English', kind: 'captions', language: 'en' }]\n * ```\n */\nexport const getTextTracksList = (media, filterPredOrObj = () => true) => {\n  if (!media?.textTracks) return [];\n\n  const filterPred =\n    typeof filterPredOrObj === 'function'\n      ? filterPredOrObj\n      : textTrackObjAsPred(filterPredOrObj);\n\n  return Array.from(media.textTracks).filter(filterPred);\n};\n\n\n/**\n * Are captions or subtitles enabled?\n *\n * @param {HTMLElement} el - An HTMLElement that has caption related attributes on it.\n * @returns {boolean} Whether captions are enabled or not\n */\nexport const areSubsOn = (el) => {\n  const showingSubtitles = !!el.getAttribute(\n    MediaUIAttributes.MEDIA_SUBTITLES_SHOWING\n  );\n  return showingSubtitles;\n};\n\n/**\n * Trigger the appropriate event on the provided element that will toggle either captions or subtitles as appropriate.\n *\n * This was originally in media-captions-button.\n *\n * @param {HTMLElement} el - An HTMLElement that has caption related attributes on it.\n * @param {boolean} [force] - An optional boolean that will force captions to the given state. True for on and false for off\n */\nexport const toggleSubsCaps = (el, force) => {\n  const subsOn = areSubsOn(el);\n\n  if (subsOn || force === false) {\n    // Subtitles are on. Clicking should disable any currently showing captions (and subtitles, if relevant)\n    // For why we are requesting tracks to `mode=\"disabled\"` and not `mode=\"hidden\"`, see: https://github.com/muxinc/media-chrome/issues/60\n    const subtitlesShowingStr = el.getAttribute(\n      MediaUIAttributes.MEDIA_SUBTITLES_SHOWING\n    );\n    // If we have currently showing subtitles track(s), request for them to be disabled.\n    if (subtitlesShowingStr) {\n      const evt = new globalThis.CustomEvent(\n        MediaUIEvents.MEDIA_DISABLE_SUBTITLES_REQUEST,\n        { composed: true, bubbles: true, detail: subtitlesShowingStr }\n      );\n      el.dispatchEvent(evt);\n    }\n  } else if (!subsOn || force === true) {\n    // Subtitles are off. Clicking should show the first relevant captions track or subtitles track (true/\"on\" by default)\n    const [subTrackStr] =\n      splitTextTracksStr(\n        el.getAttribute(MediaUIAttributes.MEDIA_SUBTITLES_LIST) ?? ''\n      ) ?? [];\n    if (subTrackStr) {\n      // If we have at least one subtitles track (and didn't have any captions tracks), request for the first one to be showing as a fallback for captions.\n      const evt = new globalThis.CustomEvent(\n        MediaUIEvents.MEDIA_SHOW_SUBTITLES_REQUEST,\n        { composed: true, bubbles: true, detail: subTrackStr }\n      );\n      el.dispatchEvent(evt);\n    }\n  } else {\n    // If we end up here, it means we have an enabled CC-button that a user has clicked on but there are no captions or subtitles.\n    console.error(\n      'Attempting to enable captions or subtitles but none are available! Please verify your media content if this is unexpected.'\n    );\n  }\n};\n", "import { document } from './server-safe-globals.js';\n\nexport const fullscreenApi = {\n  enter: 'requestFullscreen',\n  exit: 'exitFullscreen',\n  rootEvents: ['fullscreenchange'],\n  mediaEvents: [],\n  element: 'fullscreenElement',\n  error: 'fullscreenerror',\n  enabled: 'fullscreenEnabled',\n};\n\nif (document.fullscreenElement === undefined) {\n  fullscreenApi.enter = 'webkitRequestFullScreen';\n  fullscreenApi.exit =\n    document.webkitExitFullscreen != null\n      ? 'webkitExitFullscreen'\n      : 'webkitCancelFullScreen';\n  fullscreenApi.rootEvents = ['webkitfullscreenchange'];\n  fullscreenApi.mediaEvents = ['webkitbeginfullscreen', 'webkitendfullscreen'],\n  fullscreenApi.element = 'webkitFullscreenElement';\n  fullscreenApi.error = 'webkitfullscreenerror';\n  fullscreenApi.enabled = 'webkitFullscreenEnabled';\n}\n", "import { globalThis, document } from './server-safe-globals.js';\nimport { delay } from './utils.js';\nimport { fullscreenApi } from './fullscreen-api.js';\n\n/**\n * Test element\n */\nlet testMediaEl;\nexport const getTestMediaEl = () => {\n  if (testMediaEl) return testMediaEl;\n  testMediaEl = document?.createElement?.('video');\n  return testMediaEl;\n};\n\n/**\n * Test for volume support\n * \n * @param {HTMLMediaElement} mediaEl\n * @returns {Promise<boolean>}\n */\nexport const hasVolumeSupportAsync = async (mediaEl = getTestMediaEl()) => {\n  if (!mediaEl) return false;\n  const prevVolume = mediaEl.volume;\n  mediaEl.volume = prevVolume / 2 + 0.1;\n  await delay(0);\n  return mediaEl.volume !== prevVolume;\n};\n\n// let volumeSupported;\n// export const volumeSupportPromise = hasVolumeSupportAsync().then((supported) => {\n//   volumeSupported = supported;\n//   return volumeSupported;\n// });\n\n/**\n * Test for PIP support\n * \n * @param {HTMLVideoElement} mediaEl\n * @returns {boolean}\n */\nexport const hasPipSupport = (mediaEl = getTestMediaEl()) =>\n  typeof mediaEl?.requestPictureInPicture === 'function';\n\n/**\n * Test for Fullscreen support\n * \n * @param {HTMLVideoElement} mediaEl\n * @returns {boolean}\n */\nexport const hasFullscreenSupport = (mediaEl = getTestMediaEl()) => {\n  let fullscreenEnabled = document[fullscreenApi.enabled];\n\n  if (!fullscreenEnabled && mediaEl) {\n    fullscreenEnabled = 'webkitSupportsFullscreen' in mediaEl;\n  }\n\n  return fullscreenEnabled;\n};\n\nexport const fullscreenSupported = hasFullscreenSupport();\nexport const pipSupported = hasPipSupport();\nexport const airplaySupported = !!globalThis.WebKitPlaybackTargetAvailabilityEvent;\nexport const castSupported = !!globalThis.chrome;\n", "import { globalThis, document } from './utils/server-safe-globals.js';\nimport { fullscreenApi } from './utils/fullscreen-api.js';\nimport { containsComposedNode } from './utils/element-utils.js';\nimport {\n  hasVolumeSupportAsync,\n  fullscreenSupported,\n  pipSupported,\n  airplaySupported,\n  castSupported\n} from './utils/platform-tests.js';\nimport {\n  MediaUIAttributes,\n  TextTrackKinds,\n  TextTrackModes,\n  AvailabilityStates,\n  StreamTypes,\n} from './constants.js';\n\nimport {\n  getTextTracksList,\n  updateTracksModeTo,\n  toggleSubsCaps,\n} from './utils/captions.js';\n\nlet volumeSupported;\nexport const volumeSupportPromise = hasVolumeSupportAsync().then((supported) => {\n  volumeSupported = supported;\n  return volumeSupported;\n});\n\nconst StreamTypeValues = Object.values(StreamTypes);\n\nconst getSubtitleTracks = (controller) => {\n  return getTextTracksList(controller.media, (textTrack) => {\n    return [TextTrackKinds.SUBTITLES, TextTrackKinds.CAPTIONS].includes(textTrack.kind);\n  }).sort((a, b) => a.kind >= b.kind ? 1 : -1);\n};\n\nconst getShowingSubtitleTracks = (controller) => {\n  return getTextTracksList(controller.media, (textTrack) => {\n    return textTrack.mode === TextTrackModes.SHOWING &&\n      [TextTrackKinds.SUBTITLES, TextTrackKinds.CAPTIONS].includes(textTrack.kind);\n  });\n};\n\nexport const MediaUIStates = {\n  MEDIA_PAUSED: {\n    get: function (controller) {\n      const { media } = controller;\n\n      return media ? media.paused : true;\n    },\n    mediaEvents: ['play', 'playing', 'pause', 'emptied'],\n  },\n  MEDIA_HAS_PLAYED: {\n    // We want to let the user know that the media started playing at any point (`media-has-played`).\n    // Since these propagators are all called when boostrapping state, let's verify this is\n    // a real playing event by checking that 1) there's media and 2) it isn't currently paused.\n    get: function (controller) {\n      const { media } = controller;\n\n      if (!media) return false;\n\n      // TODO: Would seem to leave room for issue if this is called\n      // after a video has played but is currently paused.\n      // Could possibly check for a duration and a positive current time.\n      return !media.paused;\n    },\n    mediaEvents: ['playing', 'emptied'],\n  },\n  MEDIA_ENDED: {\n    get: function (controller) {\n      const { media } = controller;\n\n      return media ? media.ended : false;\n    },\n    mediaEvents: ['seeked', 'ended', 'emptied'],\n  },\n  MEDIA_PLAYBACK_RATE: {\n    get: function (controller) {\n      const { media } = controller;\n\n      if (!media || typeof media.playbackRate == 'undefined') {\n        return 1;\n      }\n\n      return media.playbackRate;\n    },\n    mediaEvents: ['ratechange', 'loadstart'],\n  },\n  MEDIA_MUTED: {\n    get: function (controller) {\n      const { media } = controller;\n\n      if (!media || typeof media.muted == 'undefined') {\n        return false;\n      }\n\n      return media.muted;\n    },\n    mediaEvents: ['volumechange'],\n  },\n  MEDIA_VOLUME: {\n    get: function (controller) {\n      const { media } = controller;\n\n      if (!media || typeof media.volume == 'undefined') {\n        return 1;\n      }\n\n      return Number(media.volume);\n    },\n    mediaEvents: ['volumechange'],\n  },\n  MEDIA_VOLUME_LEVEL: {\n    get: function (controller) {\n      const { media } = controller;\n      let level = 'high';\n\n      if (!media || typeof media.volume == 'undefined') {\n        return level;\n      }\n\n      const { muted, volume } = media;\n\n      if (volume === 0 || muted) {\n        level = 'off';\n      } else if (volume < 0.5) {\n        level = 'low';\n      } else if (volume < 0.75) {\n        level = 'medium';\n      }\n\n      return level;\n    },\n    mediaEvents: ['volumechange'],\n  },\n  MEDIA_CURRENT_TIME: {\n    get: function (controller) {\n      const { media } = controller;\n\n      if (!media || typeof media.currentTime == 'undefined') {\n        return 0;\n      }\n\n      return media.currentTime;\n    },\n    mediaEvents: ['timeupdate', 'loadedmetadata'],\n  },\n  MEDIA_DURATION: {\n    get: function (controller) {\n      const { media } = controller;\n\n      // TODO: What if duration is infinity/live? (heff)\n      if (!media || !Number.isFinite(media.duration)) {\n        return NaN;\n      }\n\n      return media.duration;\n    },\n    mediaEvents: ['durationchange', 'loadedmetadata', 'emptied'],\n  },\n  MEDIA_SEEKABLE: {\n    // TODO: Returns undefined and a string, consider a better type\n    // not tied to attribute strings\n    get: function (controller) {\n      const { media } = controller;\n\n      if (!media?.seekable?.length) return undefined;\n\n      const start = media.seekable.start(0);\n      const end = media.seekable.end(media.seekable.length - 1);\n\n      // Account for cases where metadata from slotted media has an \"empty\" seekable (CJP)\n      if (!start && !end) return undefined;\n      return [Number(start.toFixed(3)), Number(end.toFixed(3))];\n    },\n    mediaEvents: ['loadedmetadata', 'emptied', 'progress'],\n  },\n  MEDIA_LOADING: {\n    get: function (controller) {\n      return !!(controller.media?.readyState < 3);\n    },\n    mediaEvents: ['waiting', 'playing', 'emptied'],\n  },\n  MEDIA_BUFFERED: {\n    get: function (controller) {\n      const timeRanges = controller.media?.buffered;\n      return Array.from(controller.media?.buffered ?? [])\n        .map((_, i) => [\n          Number(timeRanges.start(i)).toFixed(3),\n          Number(timeRanges.end(i)).toFixed(3),\n        ]);\n    },\n    mediaEvents: ['progress', 'emptied'],\n  },\n  MEDIA_STREAM_TYPE: {\n    get: function (controller) {\n      const { media } = controller;\n\n      // TODO: Should return default-stream-type in this case if set\n      // Reconsider undefined as default otherwise. Feels odd to return it.\n      if (!media) return undefined;\n\n      const { streamType } = media;\n      if (StreamTypeValues.includes(streamType)) {\n        // If the slotted media supports `streamType` but\n        // `streamType` is \"unknown\", prefer `default-stream-type`\n        // if set (CJP)\n        if (streamType === StreamTypes.UNKNOWN) {\n          /** @TODO Move to non attr state and consider adding as a part of a separate \"default state\" model (CJP) */\n          const defaultType = controller.getAttribute('defaultstreamtype');\n          if ([StreamTypes.LIVE, StreamTypes.ON_DEMAND].includes(defaultType)) {\n            return defaultType;\n          }\n          return undefined;\n        }\n        return streamType;\n      }\n      const duration = media.duration;\n\n      if (duration === Infinity) {\n        return StreamTypes.LIVE;\n      } else if (Number.isFinite(duration)) {\n        return StreamTypes.ON_DEMAND;\n      } else {\n          /** @TODO Move to non attr state and consider adding as a part of a separate \"default state\" model (CJP) */\n        const defaultType = controller.getAttribute('defaultstreamtype');\n\n        if ([StreamTypes.LIVE, StreamTypes.ON_DEMAND].includes(defaultType)) {\n          return defaultType;\n        }\n      }\n\n      return undefined;\n    },\n    mediaEvents: [\n      'emptied',\n      'durationchange',\n      'loadedmetadata',\n      'streamtypechange',\n    ],\n  },\n  MEDIA_TARGET_LIVE_WINDOW: {\n    get: function (controller) {\n      const { media } = controller;\n\n      if (!media) return Number.NaN;\n      const { targetLiveWindow } = media;\n      const streamType = MediaUIStates.MEDIA_STREAM_TYPE.get(controller);\n\n      // Since `NaN` represents either \"unknown\" or \"inapplicable\", need to check if `streamType`\n      // is `\"live\"`. If so, assume it's \"standard live\" (aka `targetLiveWindow === 0`) (CJP)\n      if (\n        (targetLiveWindow == null || Number.isNaN(targetLiveWindow)) &&\n        streamType === StreamTypes.LIVE\n      ) {\n        return 0;\n      }\n      return targetLiveWindow;\n    },\n    mediaEvents: [\n      'emptied',\n      'durationchange',\n      'loadedmetadata',\n      'streamtypechange',\n      'targetlivewindowchange',\n    ],\n  },\n  MEDIA_TIME_IS_LIVE: {\n    get: function (controller) {\n      const { media } = controller;\n\n      if (!media) return false;\n\n      if (typeof media.liveEdgeStart === 'number') {\n        if (Number.isNaN(media.liveEdgeStart)) return false;\n        return media.currentTime >= media.liveEdgeStart;\n      }\n\n      const live = MediaUIStates.MEDIA_STREAM_TYPE.get(controller) === 'live';\n      // Can't be playing live if it's not a live stream\n      if (!live) return false;\n\n      const seekable = media.seekable;\n      // If the slotted media element is live but does not expose a 'seekable' `TimeRanges` object,\n      // always assume playing live\n      if (!seekable) return true;\n      // If there is an empty `seekable`, assume we are not playing live\n      if (!seekable.length) return false;\n\n      // Default to 10 seconds\n      // Assuming seekable range already accounts for appropriate buffer room\n      const liveEdgeStartOffset = controller.hasAttribute('liveedgeoffset')\n        ? // TODO: Move to no attr value\n          Number(controller.getAttribute('liveedgeoffset'))\n        : 10;\n      const liveEdgeStart =\n        seekable.end(seekable.length - 1) - liveEdgeStartOffset;\n      return media.currentTime >= liveEdgeStart;\n    },\n    mediaEvents: ['playing', 'timeupdate', 'progress', 'waiting', 'emptied'],\n  },\n  MEDIA_IS_FULLSCREEN: {\n    get: function (controller, event) {\n      const media = controller.media;\n\n      // iOS has a specialized fullscreen API on the video element.\n      // https://developer.apple.com/documentation/webkitjs/htmlvideoelement/1630493-webkitdisplayingfullscreen\n      if (media && document[fullscreenApi.element] === undefined && 'webkitDisplayingFullscreen' in media) {\n        // For some reason webkitDisplayingFullscreen is true when in PiP,\n        // add an extra presentation mode is fullscreen check.\n        return media.webkitDisplayingFullscreen && media.webkitPresentationMode === 'fullscreen';\n      }\n\n      let fullscreenEl;\n\n      if (event) {\n        // Safari < 16.4 doesn't support ShadowRoot.fullscreenElement.\n        // document.fullscreenElement could be several ancestors up the tree.\n        // Use event.target instead.\n        const isSomeElementFullscreen = document[fullscreenApi.element];\n        fullscreenEl = isSomeElementFullscreen ? event.target : null;\n      } else {\n        // If the getter was called w/o an event use the root's fullscreenElement.\n        fullscreenEl =\n          controller.getRootNode().fullscreenElement ??\n          document[fullscreenApi.element];\n      }\n\n      return containsComposedNode(controller.fullscreenElement, fullscreenEl);\n    },\n    rootEvents: fullscreenApi.rootEvents,\n    // iOS requires `webkitbeginfullscreen` and `webkitendfullscreen` events on the video.\n    mediaEvents: fullscreenApi.mediaEvents,\n  },\n  MEDIA_IS_PIP: {\n    get: function (controller, e) {\n      const media = controller.media;\n\n      if (!media) return false;\n\n      // Rely on event type for state first\n      // in case this doesn't work well for custom elements using internal <video>\n      if (e) {\n        return e.type == 'enterpictureinpicture';\n      } else {\n        const pipElement =\n          // Might need to use the root of media-container\n          // @ts-ignore\n          controller.getRootNode().pictureInPictureElement ??\n          document.pictureInPictureElement;\n        return containsComposedNode(media, pipElement);\n      }\n    },\n    mediaEvents: ['enterpictureinpicture', 'leavepictureinpicture'],\n  },\n  MEDIA_IS_CASTING: {\n    // Note this relies on a customized video[is=castable-video] element.\n    get: function (controller, e) {\n      const { media } = controller;\n\n      if (!media) return false;\n\n      const castElement = globalThis.CastableVideoElement?.castElement;\n      let castState = containsComposedNode(media, castElement);\n\n      // While the cast is connecting set media-is-cast=\"connecting\"\n      if (e?.type === 'castchange' && e?.detail === 'CONNECTING') {\n        castState = 'connecting';\n      }\n\n      return castState;\n    },\n    mediaEvents: ['entercast', 'leavecast', 'castchange'],\n  },\n  MEDIA_AIRPLAY_UNAVAILABLE: {\n    // NOTE: only adding this if airplay is supported, in part to avoid unnecessary battery consumption per\n    // Apple docs recommendations (See: https://developer.apple.com/documentation/webkitjs/adding_an_airplay_button_to_your_safari_media_controls)\n    // For a more advanced solution, we could monitor for media state receivers that \"care\" about airplay support and add/remove\n    // whenever these are added/removed. (CJP)\n    // NOTE: I don't think only adding this if supported helps, so making this match others.\n    // If Airplay's not supported then it it doesn't hurt to add it.\n    // If battery is really an issue we need a different approach.\n    // Also this is a terrible API, Apple. (heff)\n    get: function (controller, e) {\n      if (!airplaySupported) return AvailabilityStates.UNSUPPORTED;\n\n      // NOTE: since we invoke all these event handlers without arguments whenever a media is attached,\n      // need to account for the possibility that event is undefined (CJP).\n      // TODO: Is there reall no way to detect this without an event? (heff)\n      if (!e) return undefined;\n      // TODO: Switch to non attr specific value\n\n      if (e.availability === 'available') {\n        return undefined;\n      } else if (e.availability === 'not-available') {\n        return AvailabilityStates.UNAVAILABLE;\n      }\n    },\n    mediaEvents: ['webkitplaybacktargetavailabilitychanged'],\n  },\n  MEDIA_CAST_UNAVAILABLE: {\n    get: function () {\n      const castState = globalThis.CastableVideoElement?.castState;\n\n      if (!castSupported || !castState) {\n        return AvailabilityStates.UNSUPPORTED;\n      }\n\n      // Cast state: NO_DEVICES_AVAILABLE, NOT_CONNECTED, CONNECTING, CONNECTED\n      if (castState.includes('CONNECT')) {\n        // TODO: Move to non attr specific value\n        return undefined;\n      } else {\n        return AvailabilityStates.UNAVAILABLE;\n      }\n    },\n    mediaEvents: ['castchange'],\n  },\n  MEDIA_FULLSCREEN_UNAVAILABLE: {\n    get: function () {\n      // TODO: Move to non attr specific value\n      return fullscreenSupported ? undefined : AvailabilityStates.UNAVAILABLE;\n    },\n  },\n  MEDIA_PIP_UNAVAILABLE: {\n    get: function () {\n      // TODO: Move to non attr specific value\n      return pipSupported ? undefined : AvailabilityStates.UNSUPPORTED;\n    },\n  },\n  MEDIA_VOLUME_UNAVAILABLE: {\n    get: function (controller) {\n      if (volumeSupported !== undefined && !volumeSupported) {\n        return AvailabilityStates.UNSUPPORTED;\n      }\n\n      const { media } = controller;\n\n      if (media && typeof media.volume == 'undefined') {\n        return AvailabilityStates.UNAVAILABLE;\n      }\n\n      // TODO: move to non attr specific value\n      return undefined;\n    },\n    // Give a little time for the volume support promise to run\n    mediaEvents: ['loadstart'],\n  },\n  MEDIA_SUBTITLES_LIST: {\n    get: function (controller) {\n      // TODO: Move to non attr specific values\n      return getSubtitleTracks(controller).map(({ kind, label, language }) => ({ kind, label, language }));\n    },\n    mediaEvents: ['loadstart'],\n    trackListEvents: ['addtrack', 'removetrack'],\n  },\n  MEDIA_SUBTITLES_SHOWING: {\n    get: function (controller) {\n      // NOTE: A bit hacky, but this ensures that HAS-style textTracks (e.g. from mux-video)\n      // will also respect `defaultsubtitles` (CJP)\n      if (\n        controller.hasAttribute('defaultsubtitles') &&\n        !controller.hasAttribute(MediaUIAttributes.MEDIA_HAS_PLAYED) &&\n        !controller.hasAttribute(MediaUIAttributes.MEDIA_SUBTITLES_SHOWING)\n      ) {\n        toggleSubsCaps(controller, true);\n      }\n      return getShowingSubtitleTracks(controller).map(({ kind, label, language }) => ({ kind, label, language }));\n    },\n    mediaEvents: ['loadstart'],\n    trackListEvents: ['addtrack', 'removetrack', 'change'],\n  },\n};\n\n// Capture request events from UI elements and tranlate to actions\nexport const MediaUIRequestHandlers = {\n  MEDIA_PLAY_REQUEST: (media, e, controller) => {\n    const streamType = MediaUIStates.MEDIA_STREAM_TYPE.get(controller);\n    // TODO: Move to not attr value\n    const autoSeekToLive = controller.getAttribute('noautoseektolive') === null;\n\n    if (streamType == StreamTypes.LIVE && autoSeekToLive) {\n      MediaUIRequestHandlers['MEDIA_SEEK_TO_LIVE_REQUEST'](media);\n    }\n    // Not all media's play() returns a Promise, e.g. castable-video\n    media.play()?.catch(() => {});\n  },\n  MEDIA_PAUSE_REQUEST: (media) => media.pause(),\n  MEDIA_MUTE_REQUEST: (media) => (media.muted = true),\n  MEDIA_UNMUTE_REQUEST: (media) => {\n    media.muted = false;\n\n    // Avoid confusion by bumping the volume on unmute\n    if (media.volume === 0) {\n      media.volume = 0.25;\n    }\n  },\n  MEDIA_VOLUME_REQUEST: (media, e, mediaController) => {\n    const volume = e.detail;\n\n    media.volume = volume;\n\n    // If the viewer moves the volume we should unmute for them.\n    if (volume > 0 && media.muted) {\n      media.muted = false;\n    }\n\n    // don't set to localStorage if novolumepref attribute is set\n    if (!mediaController.hasAttribute('novolumepref')) {\n      // Store the last set volume as a local preference, if ls is supported\n      try {\n        globalThis.localStorage.setItem(\n          'media-chrome-pref-volume',\n          volume.toString()\n        );\n      } catch (err) {\n        // ignore\n      }\n    }\n  },\n\n  // This current assumes that the media controller is the fullscreen element\n  // which may be true in most cases but not all.\n  // The prior version of media-chrome supported alt fullscreen elements\n  // and that's something we can work towards here.\n  //\n  // Generally the fullscreen and PiP API's have the exit methods and enabled\n  // flags on the `document`. The active element is accessed on the document\n  // or shadow root but Safari doesn't support this.\n  // Entering fullscreen or PiP is called on the element. i.e.\n  //\n  //   - Document.exitFullscreen()\n  //   - Document.fullscreenEnabled\n  //   - Document.fullscreenElement / (ShadowRoot.fullscreenElement)\n  //   - Element.requestFullscreen()\n  //\n  MEDIA_ENTER_FULLSCREEN_REQUEST: (media, e, controller) => {\n    if (!fullscreenSupported) {\n      console.warn(\n        'Fullscreen support is unavailable; not entering fullscreen'\n      );\n      return;\n    }\n\n    if (document.pictureInPictureElement) {\n      // Should be async\n      document.exitPictureInPicture();\n    }\n\n    // TODO: Moved from super to just controller, verify that works\n    if (controller[fullscreenApi.enter]) {\n      // Media chrome container fullscreen\n      controller.fullscreenElement[fullscreenApi.enter]();\n    } else if (media.webkitEnterFullscreen) {\n      // Media element fullscreen using iOS API\n      media.webkitEnterFullscreen();\n    } else if (media.requestFullscreen) {\n      // Media element fullscreen, using correct API\n      // So media els don't have to implement multiple APIs.\n      media.requestFullscreen();\n    } else {\n      console.warn('MediaChrome: Fullscreen not supported');\n    }\n  },\n  MEDIA_EXIT_FULLSCREEN_REQUEST: () => {\n    document[fullscreenApi.exit]();\n  },\n  MEDIA_ENTER_PIP_REQUEST: (media) => {\n    if (!document.pictureInPictureEnabled) {\n      console.warn('MediaChrome: Picture-in-picture is not enabled');\n      // Placeholder for emitting a user-facing warning\n      return;\n    }\n\n    if (!media.requestPictureInPicture) {\n      console.warn(\n        'MediaChrome: The current media does not support picture-in-picture'\n      );\n      // Placeholder for emitting a user-facing warning\n      return;\n    }\n\n    // Exit fullscreen if needed\n    if (document[fullscreenApi.element]) {\n      document[fullscreenApi.exit]();\n    }\n\n    const warnNotReady = () => {\n      console.warn(\n        'MediaChrome: The media is not ready for picture-in-picture. It must have a readyState > 0.'\n      );\n    };\n\n    media.requestPictureInPicture().catch((err) => {\n      // InvalidStateError, readyState == 0 (Not ready)\n      if (err.code === 11) {\n        // We can assume the viewer wants the video to load, so attempt to\n        // if we can rely on readyState and preload\n        // Only works in Chrome currently. Safari doesn't allow triggering\n        // in an event listener. Also requires readyState == 4.\n        // Firefox doesn't have the PiP API yet.\n        if (media.readyState === 0 && media.preload === 'none') {\n          const cleanup = () => {\n            media.removeEventListener('loadedmetadata', tryPip);\n            media.preload = 'none';\n          };\n\n          const tryPip = () => {\n            media.requestPictureInPicture().catch(warnNotReady);\n            cleanup();\n          };\n\n          media.addEventListener('loadedmetadata', tryPip);\n          media.preload = 'metadata';\n\n          // No easy way to know if this failed and we should clean up\n          // quickly if it doesn't to prevent an awkward delay for the user\n          setTimeout(() => {\n            if (media.readyState === 0) warnNotReady();\n            cleanup();\n          }, 1000);\n        } else {\n          // Rethrow if unknown context\n          throw err;\n        }\n      } else {\n        // Rethrow if unknown context\n        throw err;\n      }\n    });\n  },\n  MEDIA_EXIT_PIP_REQUEST: () => {\n    if (document.pictureInPictureElement) {\n      // Should be async\n      document.exitPictureInPicture();\n    }\n  },\n  MEDIA_ENTER_CAST_REQUEST: (media) => {\n    if (!globalThis.CastableVideoElement?.castEnabled) return;\n\n    // Exit fullscreen if needed\n    if (document[fullscreenApi.element]) {\n      document[fullscreenApi.exit]();\n    }\n\n    // Open the browser cast menu.\n    // Note this relies on a customized video[is=castable-video] element.\n    media.requestCast();\n  },\n  MEDIA_EXIT_CAST_REQUEST: async () => {\n    if (globalThis.CastableVideoElement?.castElement) {\n      globalThis.CastableVideoElement.exitCast();\n    }\n  },\n  MEDIA_SEEK_REQUEST: (media, e) => {\n    const time = e.detail;\n\n    // Can't set the time before the media is ready\n    // Ignore if readyState isn't supported\n    if (media.readyState > 0 || media.readyState === undefined) {\n      media.currentTime = time;\n    }\n  },\n  MEDIA_PLAYBACK_RATE_REQUEST: (media, e) => {\n    media.playbackRate = e.detail;\n  },\n  MEDIA_PREVIEW_REQUEST: (media, e, controller) => {\n    // No media (yet), so bail early\n    if (!media) return;\n\n    const time = e.detail;\n\n    // if time is null, then we're done previewing and want to remove the attributes\n    if (time === null) {\n      controller.propagateMediaState(\n        MediaUIAttributes.MEDIA_PREVIEW_TIME,\n        undefined\n      );\n    }\n    controller.propagateMediaState(MediaUIAttributes.MEDIA_PREVIEW_TIME, time);\n\n    const [track] = getTextTracksList(media, {\n      kind: TextTrackKinds.METADATA,\n      label: 'thumbnails',\n    });\n    // No thumbnails track (yet) or no cues available in thumbnails track, so bail early.\n    if (!(track && track.cues)) return;\n\n    // if time is null, then we're done previewing and want to remove the attributes\n    if (time === null) {\n      controller.propagateMediaState(\n        MediaUIAttributes.MEDIA_PREVIEW_IMAGE,\n        undefined\n      );\n      controller.propagateMediaState(\n        MediaUIAttributes.MEDIA_PREVIEW_COORDS,\n        undefined\n      );\n      return;\n    }\n\n    const cue = Array.prototype.find.call(\n      track.cues,\n      (c) => c.startTime >= time\n    );\n\n    // No corresponding cue, so bail early\n    if (!cue) return;\n\n    // Since this isn't really \"global state\", we may want to consider moving this \"down\" to the component level,\n    // probably pulled out into its own module/set of functions (CJP)\n    const base = !/'^(?:[a-z]+:)?\\/\\//i.test(cue.text)\n      ? // @ts-ignore\n        media.querySelector('track[label=\"thumbnails\"]')?.src\n      : undefined;\n    const url = new URL(cue.text, base);\n    const previewCoordsStr = new URLSearchParams(url.hash).get('#xywh');\n    controller.propagateMediaState(\n      MediaUIAttributes.MEDIA_PREVIEW_IMAGE,\n      url.href\n    );\n    controller.propagateMediaState(\n      MediaUIAttributes.MEDIA_PREVIEW_COORDS,\n      previewCoordsStr.split(',')\n    );\n  },\n  MEDIA_SHOW_SUBTITLES_REQUEST: (media, e, controller) => {\n    const tracks = getSubtitleTracks(controller);\n    const { detail: tracksToUpdate = [] } = e;\n    updateTracksModeTo(TextTrackModes.SHOWING, tracks, tracksToUpdate);\n  },\n  MEDIA_DISABLE_SUBTITLES_REQUEST: (media, e, controller) => {\n    const tracks = getSubtitleTracks(controller);\n    const { detail: tracksToUpdate = [] } = e;\n    updateTracksModeTo(TextTrackModes.DISABLED, tracks, tracksToUpdate);\n  },\n  MEDIA_AIRPLAY_REQUEST: (media) => {\n    if (!media) return;\n\n    if (\n      !(\n        media.webkitShowPlaybackTargetPicker &&\n        globalThis.WebKitPlaybackTargetAvailabilityEvent\n      )\n    ) {\n      console.warn(\n        'received a request to select AirPlay but AirPlay is not supported in this environment'\n      );\n      return;\n    }\n    media.webkitShowPlaybackTargetPicker();\n  },\n  MEDIA_SEEK_TO_LIVE_REQUEST: (media) => {\n    const seekable = media.seekable;\n\n    if (!seekable) {\n      console.warn(\n        'MediaController: Media element does not support seeking to live.'\n      );\n      return;\n    }\n\n    if (!seekable.length) {\n      console.warn('MediaController: Media is unable to seek to live.');\n      return;\n    }\n\n    media.currentTime = seekable.end(seekable.length - 1);\n  },\n};\n", "/*\n  The <media-chrome> can contain the control elements\n  and the media element. Features:\n  * Auto-set the `media` attribute on child media chrome elements\n    * Uses the element with slot=\"media\"\n  * Take custom controls to fullscreen\n  * Position controls at the bottom\n  * Auto-hide controls on inactivity while playing\n*/\nimport { MediaContainer } from './media-container.js';\nimport { globalThis } from './utils/server-safe-globals.js';\nimport { AttributeTokenList } from './utils/attribute-token-list.js';\nimport { constToCamel, delay } from './utils/utils.js';\nimport { stringifyTextTrackList, toggleSubsCaps } from './utils/captions.js';\nimport {\n  MediaUIEvents,\n  MediaUIAttributes,\n  MediaStateReceiverAttributes,\n  AttributeToStateChangeEventMap,\n  MediaUIProps,\n} from './constants.js';\nimport { MediaUIRequestHandlers, MediaUIStates, volumeSupportPromise } from './controller.js';\nimport { setBooleanAttr, setNumericAttr, setStringAttr } from './utils/element-utils.js';\n\nconst ButtonPressedKeys = ['ArrowLeft', 'ArrowRight', 'Enter', ' ', 'f', 'm', 'k', 'c'];\nconst DEFAULT_SEEK_OFFSET = 10;\nconst DEFAULT_TIME = 0;\n\nexport const Attributes = {\n  DEFAULT_SUBTITLES: 'defaultsubtitles',\n  DEFAULT_STREAM_TYPE: 'defaultstreamtype',\n  FULLSCREEN_ELEMENT: 'fullscreenelement',\n  HOTKEYS: 'hotkeys',\n  KEYS_USED: 'keysused',\n  LIVE_EDGE_OFFSET: 'liveedgeoffset',\n  NO_AUTO_SEEK_TO_LIVE: 'noautoseektolive',\n  NO_HOTKEYS: 'nohotkeys',\n};\n\n/**\n * Media Controller should not mimic the HTMLMediaElement API.\n * @see https://github.com/muxinc/media-chrome/pull/182#issuecomment-1067370339\n *\n * @attr {boolean} defaultsubtitles\n * @attr {string} defaultstreamtype\n * @attr {string} fullscreenelement\n * @attr {boolean} nohotkeys\n * @attr {string} hotkeys\n * @attr {string} keysused\n * @attr {string} liveedgeoffset\n * @attr {boolean} noautoseektolive\n */\nclass MediaController extends MediaContainer {\n  static get observedAttributes() {\n    return super.observedAttributes.concat(\n      Attributes.NO_HOTKEYS,\n      Attributes.HOTKEYS,\n      Attributes.DEFAULT_STREAM_TYPE,\n      Attributes.DEFAULT_SUBTITLES\n    );\n  }\n\n  #hotKeys = new AttributeTokenList(this, Attributes.HOTKEYS);\n  #fullscreenElement;\n\n  constructor() {\n    super();\n\n    // Update volume support ASAP\n    if (MediaUIStates.MEDIA_VOLUME_UNAVAILABLE.get(this) === undefined) {\n      // NOTE: In order to propagate ASAP, we currently need to ensure that\n      // the volume support promise has resolved. Given the async nature of\n      // some of these environment state values, we may want to model this\n      // a bit better (CJP).\n      volumeSupportPromise.then(() => {\n        this.propagateMediaState(\n          MediaUIAttributes.MEDIA_VOLUME_UNAVAILABLE,\n          MediaUIStates.MEDIA_VOLUME_UNAVAILABLE.get(this)\n        );\n      });\n    }\n\n    // Track externally associated control elements\n    this.mediaStateReceivers = [];\n    this.associatedElementSubscriptions = new Map();\n    this.associateElement(this);\n\n    // Apply ui event listeners to self\n    // Should apply to any UI container, not just controller\n    Object.keys(MediaUIRequestHandlers).forEach((key) => {\n      const handlerName = `_handle${constToCamel(key, true)}`;\n\n      // TODO: Move to map, not obj root property\n      this[handlerName] = (e) => {\n        // Stop media UI events from continuing to bubble\n        e.stopPropagation();\n\n        if (!this.media) {\n          console.warn('MediaController: No media available.');\n          return;\n        }\n\n        MediaUIRequestHandlers[key](this.media, e, this);\n      };\n      this.addEventListener(MediaUIEvents[key], this[handlerName]);\n    });\n\n    // Build event listeners for media states\n    this._mediaStatePropagators = {};\n    Object.keys(MediaUIStates).forEach((key)=>{\n      this._mediaStatePropagators[key] = e => {\n        this.propagateMediaState(MediaUIProps[key], MediaUIStates[key].get(this, e));\n      };\n    });\n\n    this.enableHotkeys();\n  }\n\n  get fullscreenElement() {\n    return this.#fullscreenElement ?? this;\n  }\n\n  set fullscreenElement(element) {\n    if (this.hasAttribute(Attributes.FULLSCREEN_ELEMENT)) {\n      this.removeAttribute(Attributes.FULLSCREEN_ELEMENT);\n    }\n    this.#fullscreenElement = element;\n  }\n\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    if (attrName === Attributes.NO_HOTKEYS) {\n      if (newValue !== oldValue && newValue === '') {\n        if (this.hasAttribute(Attributes.HOTKEYS)) {\n          console.warn('Both `hotkeys` and `nohotkeys` have been set. All hotkeys will be disabled.');\n        }\n        this.disableHotkeys();\n\n      } else if (newValue !== oldValue && newValue === null) {\n        this.enableHotkeys();\n      }\n    } else if (attrName === Attributes.HOTKEYS) {\n        this.#hotKeys.value = newValue;\n\n    } else if (\n      attrName === Attributes.DEFAULT_SUBTITLES &&\n      newValue !== oldValue &&\n      newValue === ''\n    ) {\n      toggleSubsCaps(this, true);\n\n    } else if (attrName === Attributes.DEFAULT_STREAM_TYPE) {\n      this.propagateMediaState(MediaUIProps.MEDIA_STREAM_TYPE);\n\n    } else if (attrName === Attributes.FULLSCREEN_ELEMENT) {\n      const el = newValue\n        // @ts-ignore\n        ? this.getRootNode()?.getElementById(newValue)\n        : undefined;\n      // NOTE: Setting the internal private prop here to not\n      // clear the attribute that was just set (CJP).\n      this.#fullscreenElement = el;\n    }\n\n    super.attributeChangedCallback(attrName, oldValue, newValue);\n  }\n\n  mediaSetCallback(media) {\n    super.mediaSetCallback(media);\n\n    // TODO: What does this do? At least add comment, maybe move to media-container\n    if (!media.hasAttribute('tabindex')) {\n      media.tabIndex = -1;\n    }\n\n    // Listen for media state changes and propagate them to children and associated els\n    Object.keys(MediaUIStates).forEach((key) => {\n      const {\n        mediaEvents,\n        rootEvents,\n        trackListEvents\n      } = MediaUIStates[key];\n\n      const handler = this._mediaStatePropagators[key];\n\n      mediaEvents?.forEach((eventName)=>{\n        media.addEventListener(eventName, handler);\n        handler();\n      });\n\n      rootEvents?.forEach((eventName)=>{\n        this.getRootNode().addEventListener(eventName, handler);\n        handler();\n      });\n\n      trackListEvents?.forEach((eventName)=>{\n        media.textTracks?.addEventListener(eventName, handler);\n        handler();\n      });\n    });\n\n    // don't get from localStorage if novolumepref attribute is set\n    if (!this.hasAttribute('novolumepref')) {\n      // Update the media with the last set volume preference\n      // This would preferably live with the media element, not a control.\n      try {\n        const volPref = globalThis.localStorage.getItem('media-chrome-pref-volume');\n        if (volPref !== null) media.volume = volPref;\n      } catch (e) {\n        console.debug('Error getting volume pref', e);\n      }\n    }\n  }\n\n  mediaUnsetCallback(media) {\n    super.mediaUnsetCallback(media);\n\n    // Remove all state change propagators\n    Object.keys(MediaUIStates).forEach((key) => {\n      const {\n        mediaEvents,\n        rootEvents,\n        trackListEvents\n      } = MediaUIStates[key];\n\n      const handler = this._mediaStatePropagators[key];\n\n      mediaEvents?.forEach((eventName)=>{\n        media.removeEventListener(eventName, handler);\n      });\n\n      rootEvents?.forEach((eventName)=>{\n        this.getRootNode().removeEventListener(eventName, handler);\n      });\n\n      trackListEvents?.forEach((eventName)=>{\n        media.textTracks?.removeEventListener(eventName, handler);\n      });\n    });\n\n    // Reset to paused state\n    // TODO: Can we just reset all state here?\n    // Should hasPlayed refer to the media element or the controller?\n    // i.e. the poster might re-show if not handled by the poster el\n    this.propagateMediaState(MediaUIProps.MEDIA_PAUSED, true);\n  }\n\n  propagateMediaState(stateName, state) {\n    const attrName = stateName.toLowerCase();\n    const previousState = this.getAttribute(attrName);\n\n    propagateMediaState(this.mediaStateReceivers, stateName, state);\n\n    if (previousState === this.getAttribute(attrName)) return;\n\n    // TODO: I don't think we want these events to bubble? Video element states don't. (heff)\n    const evt = new globalThis.CustomEvent(\n      AttributeToStateChangeEventMap[attrName],\n      { composed: true, bubbles: true, detail: state }\n    );\n    this.dispatchEvent(evt);\n  }\n\n  associateElement(element) {\n    if (!element) return;\n    const { associatedElementSubscriptions } = this;\n\n    if (associatedElementSubscriptions.has(element)) return;\n\n    const registerMediaStateReceiver =\n      this.registerMediaStateReceiver.bind(this);\n    const unregisterMediaStateReceiver =\n      this.unregisterMediaStateReceiver.bind(this);\n\n    /** @TODO Should we support \"removing association\" */\n    const unsubscribe = monitorForMediaStateReceivers(\n      element,\n      registerMediaStateReceiver,\n      unregisterMediaStateReceiver\n    );\n\n    // Add all media request event listeners to the Associated Element. This allows any DOM element that\n    // is a descendant of any Associated Element (including the <media-controller/> itself) to make requests\n    // for media state changes rather than constraining that exclusively to a Media State Receivers.\n    Object.keys(MediaUIEvents).forEach((key) => {\n      element.addEventListener(\n        MediaUIEvents[key],\n        this[`_handle${constToCamel(key, true)}`]\n      );\n    });\n\n    associatedElementSubscriptions.set(element, unsubscribe);\n  }\n\n  unassociateElement(element) {\n    if (!element) return;\n    const { associatedElementSubscriptions } = this;\n    if (!associatedElementSubscriptions.has(element)) return;\n    const unsubscribe = associatedElementSubscriptions.get(element);\n    unsubscribe();\n    associatedElementSubscriptions.delete(element);\n\n    // Remove all media UI event listeners\n    Object.keys(MediaUIEvents).forEach((key) => {\n      element.removeEventListener(\n        MediaUIEvents[key],\n        this[`_handle${constToCamel(key, true)}`]\n      );\n    });\n  }\n\n  registerMediaStateReceiver(el) {\n    if (!el) return;\n    const els = this.mediaStateReceivers;\n    const index = els.indexOf(el);\n    if (index > -1) return;\n\n    els.push(el);\n\n    Object.keys(MediaUIStates).forEach((stateConstName)=>{\n      const stateDetails = MediaUIStates[stateConstName];\n\n      propagateMediaState(\n        [el],\n        MediaUIProps[stateConstName],\n        stateDetails.get(this)\n      );\n    });\n  }\n\n  unregisterMediaStateReceiver(el) {\n    const els = this.mediaStateReceivers;\n\n    const index = els.indexOf(el);\n    if (index < 0) return;\n\n    els.splice(index, 1);\n  }\n\n  #keyUpHandler(e) {\n    const { key } = e;\n    if (!ButtonPressedKeys.includes(key)) {\n      this.removeEventListener('keyup', this.#keyUpHandler);\n      return;\n    }\n\n    this.keyboardShortcutHandler(e);\n  }\n\n  #keyDownHandler(e) {\n    const { metaKey, altKey, key } = e;\n    if (metaKey || altKey || !ButtonPressedKeys.includes(key)) {\n      this.removeEventListener('keyup', this.#keyUpHandler);\n      return;\n    }\n\n    // if the pressed key might move the page, we need to preventDefault on keydown\n    // because doing so on keyup is too late\n    // We also want to make sure that the hotkey hasn't been turned off before doing so\n    if (\n      [' ', 'ArrowLeft', 'ArrowRight'].includes(key) &&\n      !(this.#hotKeys.contains(`no${key.toLowerCase()}`) ||\n        key === ' ' && this.#hotKeys.contains('nospace'))\n    ) {\n      e.preventDefault();\n    }\n\n    this.addEventListener('keyup', this.#keyUpHandler, {once: true});\n  }\n\n  enableHotkeys() {\n    this.addEventListener('keydown', this.#keyDownHandler);\n  }\n\n  disableHotkeys() {\n    this.removeEventListener('keydown', this.#keyDownHandler);\n    this.removeEventListener('keyup', this.#keyUpHandler);\n  }\n\n  get hotkeys() {\n    return this.#hotKeys;\n  }\n\n  keyboardShortcutHandler(e) {\n    // if the event's key is already handled by the target, skip keyboard shortcuts\n    // keysUsed is either an attribute or a property.\n    // The attribute is a DOM array and the property is a JS array\n    // In the attribute Space represents the space key and gets convered to ' '\n    const keysUsed = (e.target.getAttribute(Attributes.KEYS_USED)?.split(' ') ?? e.target?.keysUsed ?? [])\n      .map(key => key === 'Space' ? ' ' : key)\n      .filter(Boolean);\n\n    if (keysUsed.includes(e.key)) {\n      return;\n    }\n\n    let eventName, currentTimeStr, currentTime, detail, evt;\n    const seekOffset = DEFAULT_SEEK_OFFSET;\n\n    // if the blocklist contains the key, skip handling it.\n    if (this.#hotKeys.contains(`no${e.key.toLowerCase()}`)) return;\n    if (e.key === ' ' && this.#hotKeys.contains(`nospace`)) return;\n\n    // These event triggers were copied from the revelant buttons\n    switch (e.key) {\n      case ' ':\n      case 'k':\n        eventName =\n          this.getAttribute(MediaUIAttributes.MEDIA_PAUSED) != null\n            ? MediaUIEvents.MEDIA_PLAY_REQUEST\n            : MediaUIEvents.MEDIA_PAUSE_REQUEST;\n        this.dispatchEvent(\n          new globalThis.CustomEvent(eventName, { composed: true, bubbles: true })\n        );\n        break;\n\n      case 'm':\n        eventName =\n          this.getAttribute(MediaUIAttributes.MEDIA_VOLUME_LEVEL) === 'off'\n            ? MediaUIEvents.MEDIA_UNMUTE_REQUEST\n            : MediaUIEvents.MEDIA_MUTE_REQUEST;\n        this.dispatchEvent(\n          new globalThis.CustomEvent(eventName, { composed: true, bubbles: true })\n        );\n        break;\n\n      case 'f':\n        eventName =\n          this.getAttribute(MediaUIAttributes.MEDIA_IS_FULLSCREEN) != null\n            ? MediaUIEvents.MEDIA_EXIT_FULLSCREEN_REQUEST\n            : MediaUIEvents.MEDIA_ENTER_FULLSCREEN_REQUEST;\n        this.dispatchEvent(\n          new globalThis.CustomEvent(eventName, { composed: true, bubbles: true })\n        );\n        break;\n\n      case 'c':\n        toggleSubsCaps(this);\n        break;\n\n      case 'ArrowLeft':\n        currentTimeStr = this.getAttribute(\n          MediaUIAttributes.MEDIA_CURRENT_TIME\n        );\n        currentTime =\n          currentTimeStr && !Number.isNaN(+currentTimeStr)\n            ? +currentTimeStr\n            : DEFAULT_TIME;\n        detail = Math.max(currentTime - seekOffset, 0);\n        evt = new globalThis.CustomEvent(MediaUIEvents.MEDIA_SEEK_REQUEST, {\n          composed: true,\n          bubbles: true,\n          detail,\n        });\n        this.dispatchEvent(evt);\n        break;\n\n      case 'ArrowRight':\n        currentTimeStr = this.getAttribute(\n          MediaUIAttributes.MEDIA_CURRENT_TIME\n        );\n        currentTime =\n          currentTimeStr && !Number.isNaN(+currentTimeStr)\n            ? +currentTimeStr\n            : DEFAULT_TIME;\n        detail = Math.max(currentTime + seekOffset, 0);\n        evt = new globalThis.CustomEvent(MediaUIEvents.MEDIA_SEEK_REQUEST, {\n          composed: true,\n          bubbles: true,\n          detail,\n        });\n        this.dispatchEvent(evt);\n        break;\n\n      default:\n        break;\n    }\n  }\n}\n\nconst MEDIA_UI_ATTRIBUTE_NAMES = Object.values(MediaUIAttributes);\nconst MEDIA_UI_PROP_NAMES = Object.values(MediaUIProps);\n\nconst getMediaUIAttributesFrom = (child) => {\n  let { observedAttributes } = child.constructor;\n\n  // observedAttributes are only available if the custom element was upgraded.\n  // example: media-gesture-receiver in the shadow DOM requires an upgrade.\n  if (!observedAttributes && child.nodeName?.includes('-')) {\n    globalThis.customElements.upgrade(child);\n    ({ observedAttributes } = child.constructor);\n  }\n\n  const mediaChromeAttributesList = child\n    ?.getAttribute?.(MediaStateReceiverAttributes.MEDIA_CHROME_ATTRIBUTES)\n    ?.split?.(/\\s+/);\n  if (!Array.isArray(observedAttributes || mediaChromeAttributesList))\n    return [];\n  return (observedAttributes || mediaChromeAttributesList).filter((attrName) =>\n    MEDIA_UI_ATTRIBUTE_NAMES.includes(attrName)\n  );\n};\n\nconst hasMediaUIProps = (mediaStateReceiverCandidate) => {\n  if (\n    mediaStateReceiverCandidate.nodeName?.includes('-')\n    && !!globalThis.customElements.get(mediaStateReceiverCandidate.nodeName?.toLowerCase())\n    && !(mediaStateReceiverCandidate instanceof globalThis.customElements.get(mediaStateReceiverCandidate.nodeName.toLowerCase()))\n  ) {\n    globalThis.customElements.upgrade(mediaStateReceiverCandidate);\n  }\n  return MEDIA_UI_PROP_NAMES.some(propName => propName in mediaStateReceiverCandidate);\n};\n\nconst isMediaStateReceiver = (child) => {\n  return hasMediaUIProps(child) || !!getMediaUIAttributesFrom(child).length;\n};\n\nconst serializeTuple = (tuple) => tuple?.join?.(':');\n\nconst CustomAttrSerializer = {\n  [MediaUIAttributes.MEDIA_SUBTITLES_LIST]: stringifyTextTrackList,\n  [MediaUIAttributes.MEDIA_SUBTITLES_SHOWING]: stringifyTextTrackList,\n  [MediaUIAttributes.MEDIA_SEEKABLE]: serializeTuple,\n  [MediaUIAttributes.MEDIA_BUFFERED]: (tuples) => tuples?.map(serializeTuple).join(' '),\n  [MediaUIAttributes.MEDIA_PREVIEW_COORDS]: (coords) => coords?.join(' '),\n};\n\nconst setAttr = async (child, attrName, attrValue) => {\n  // If the node is not connected to the DOM yet wait on macrotask. Fix for:\n  //   Uncaught DOMException: Failed to construct 'CustomElement':\n  //   The result must not have attributes\n  if (!child.isConnected) {\n    await delay(0);\n  }\n\n  // NOTE: For \"nullish\" (null/undefined), can use any setter\n  if (typeof attrValue === 'boolean' || attrValue == null) {\n    return setBooleanAttr(child, attrName, attrValue);\n  }\n  if (typeof attrValue === 'number') {\n    return setNumericAttr(child, attrName, attrValue)\n  }\n  if (typeof attrValue === 'string') {\n    return setStringAttr(child, attrName, attrValue);\n  }\n  // Treat empty arrays as \"nothing\" values\n  if (Array.isArray(attrValue) && !attrValue.length) {\n    return child.removeAttribute(attrName);\n  }\n\n  // For \"special\" values with custom serializers or all other values\n  const val = CustomAttrSerializer[attrName]?.(attrValue) ?? attrValue;\n  return child.setAttribute(attrName, val);\n};\n\nconst isMediaSlotElementDescendant = (el) => !!el.closest?.('*[slot=\"media\"]');\n\n/**\n *\n * @description This function will recursively check for any descendants (including the rootNode)\n * that are Media State Receivers and invoke `mediaStateReceiverCallback` with any Media State Receiver\n * found\n *\n * @param {HTMLElement} rootNode\n * @param {function} mediaStateReceiverCallback\n */\nconst traverseForMediaStateReceivers = (\n  rootNode,\n  mediaStateReceiverCallback\n) => {\n  // We (currently) don't check if descendants of the `media` (e.g. <video/>) are Media State Receivers\n  // See also: `propagateMediaState`\n  if (isMediaSlotElementDescendant(rootNode)) {\n    return;\n  }\n\n  const traverseForMediaStateReceiversSync = (\n    rootNode,\n    mediaStateReceiverCallback\n  ) => {\n    // The rootNode is itself a Media State Receiver\n    if (isMediaStateReceiver(rootNode)) {\n      mediaStateReceiverCallback(rootNode);\n    }\n\n    const { children = [] } = rootNode ?? {};\n    const shadowChildren = rootNode?.shadowRoot?.children ?? [];\n    const allChildren = [...children, ...shadowChildren];\n\n    // Traverse all children (including shadowRoot children) to see if they are/have Media State Receivers\n    allChildren.forEach((child) =>\n      traverseForMediaStateReceivers(child, mediaStateReceiverCallback)\n    );\n  };\n\n  // Custom Elements (and *only* Custom Elements) must have a hyphen (\"-\") in their name. So, if the rootNode is\n  // a custom element (aka has a hyphen in its name), wait until it's defined before attempting traversal to determine\n  // whether or not it or its descendants are Media State Receivers.\n  // IMPORTANT NOTE: We're intentionally *always* waiting for the `whenDefined()` Promise to resolve here\n  // (instead of using `globalThis.customElements.get(name)` to check if a custom element is already defined/registered)\n  // because we encountered some reliability issues with the custom element instances not being fully \"ready\", even if/when\n  // they are available in the registry via `globalThis.customElements.get(name)`.\n  const name = rootNode?.nodeName.toLowerCase();\n  if (name.includes('-') && !isMediaStateReceiver(rootNode)) {\n    globalThis.customElements.whenDefined(name).then(() => {\n      // Try/traverse again once the custom element is defined\n      traverseForMediaStateReceiversSync(rootNode, mediaStateReceiverCallback);\n    });\n    return;\n  }\n\n  traverseForMediaStateReceiversSync(rootNode, mediaStateReceiverCallback);\n};\n\nconst propagateMediaState = (els, stateName, val) => {\n  els.forEach((el) => {\n    if (stateName in el) {\n      el[stateName] = val;\n      return;\n    }\n    const relevantAttrs = getMediaUIAttributesFrom(el);\n    const attrName = stateName.toLowerCase();\n    if (!relevantAttrs.includes(attrName)) return;\n    setAttr(el, attrName, val);\n  });\n};\n\n/**\n *\n * @description This function will monitor the rootNode for any Media State Receiver descendants\n * that are already present, added, or removed, invoking the relevant callback function for each\n * case.\n *\n * @param {HTMLElement} rootNode\n * @param {function} registerMediaStateReceiver\n * @param {function} unregisterMediaStateReceiver\n * @returns An unsubscribe method, used to stop monitoring descendants of rootNode and to unregister its descendants\n *\n */\nconst monitorForMediaStateReceivers = (\n  rootNode,\n  registerMediaStateReceiver,\n  unregisterMediaStateReceiver\n) => {\n  // First traverse the tree to register any current Media State Receivers\n  traverseForMediaStateReceivers(rootNode, registerMediaStateReceiver);\n\n  // Monitor for any event-based requests from descendants to register/unregister as a Media State Receiver\n  const registerMediaStateReceiverHandler = (evt) => {\n    const el = evt?.composedPath()[0] ?? evt.target;\n    registerMediaStateReceiver(el);\n  };\n\n  const unregisterMediaStateReceiverHandler = (evt) => {\n    const el = evt?.composedPath()[0] ?? evt.target;\n    unregisterMediaStateReceiver(el);\n  };\n\n  rootNode.addEventListener(\n    MediaUIEvents.REGISTER_MEDIA_STATE_RECEIVER,\n    registerMediaStateReceiverHandler\n  );\n  rootNode.addEventListener(\n    MediaUIEvents.UNREGISTER_MEDIA_STATE_RECEIVER,\n    unregisterMediaStateReceiverHandler\n  );\n\n  // Observe any changes to the DOM for any descendants that are identifiable as Media State Receivers\n  // and register or unregister them, depending on the change that occurred.\n  const mutationCallback = (mutationsList) => {\n    mutationsList.forEach((mutationRecord) => {\n      const {\n        addedNodes = [],\n        removedNodes = [],\n        type,\n        target,\n        attributeName,\n      } = mutationRecord;\n      if (type === 'childList') {\n        // For each added node, register any Media State Receiver descendants (including itself)\n        Array.prototype.forEach.call(addedNodes, (node) =>\n          traverseForMediaStateReceivers(node, registerMediaStateReceiver)\n        );\n        // For each removed node, unregister any Media State Receiver descendants (including itself)\n        Array.prototype.forEach.call(removedNodes, (node) =>\n          traverseForMediaStateReceivers(node, unregisterMediaStateReceiver)\n        );\n      } else if (\n        type === 'attributes' &&\n        attributeName === MediaStateReceiverAttributes.MEDIA_CHROME_ATTRIBUTES\n      ) {\n        if (isMediaStateReceiver(target)) {\n          // Changed from a \"non-Media State Receiver\" to a Media State Receiver: register it.\n          registerMediaStateReceiver(target);\n        } else {\n          // Changed from a Media State Receiver to a \"non-Media State Receiver\": unregister it.\n          unregisterMediaStateReceiver(target);\n        }\n      }\n    });\n  };\n\n  // Storing prevSlotted elements so we can cleanup if slotted elements change over time.\n  let prevSlotted = [];\n  const slotChangeHandler = (event) => {\n    const slotEl = /** @type {HTMLSlotElement} */ event.target;\n    if (slotEl.name === \"media\") return;\n    prevSlotted.forEach((node) =>\n      traverseForMediaStateReceivers(node, unregisterMediaStateReceiver)\n    );\n    prevSlotted = /** @type {HTMLElement[]} */ ([...slotEl.assignedElements({ flatten: true })]);\n    prevSlotted.forEach((node) =>\n      traverseForMediaStateReceivers(node, registerMediaStateReceiver)\n    );\n  };\n  rootNode.addEventListener('slotchange', slotChangeHandler);\n\n  const observer = new MutationObserver(mutationCallback);\n  observer.observe(rootNode, {\n    childList: true,\n    attributes: true,\n    subtree: true,\n  });\n\n  const unsubscribe = () => {\n    // Unregister any Media State Receiver descendants (including ourselves)\n    traverseForMediaStateReceivers(rootNode, unregisterMediaStateReceiver);\n    // Make sure we remove the slotchange event listener\n    rootNode.removeEventListener('slotchange', slotChangeHandler);\n    // Stop observing for Media State Receivers\n    observer.disconnect();\n    // Stop listening for Media State Receiver events.\n    rootNode.removeEventListener(\n      MediaUIEvents.REGISTER_MEDIA_STATE_RECEIVER,\n      registerMediaStateReceiverHandler\n    );\n    rootNode.removeEventListener(\n      MediaUIEvents.UNREGISTER_MEDIA_STATE_RECEIVER,\n      unregisterMediaStateReceiverHandler\n    );\n  };\n\n  return unsubscribe;\n};\n\nif (!globalThis.customElements.get('media-controller')) {\n  globalThis.customElements.define('media-controller', MediaController);\n}\n\nexport default MediaController;\n", "import { MediaStateReceiverAttributes } from './constants.js';\nimport { globalThis, document } from './utils/server-safe-globals.js';\nimport { getOrInsertCSSRule } from './utils/element-utils.js';\n\nconst template = document.createElement('template');\n\n// Can't comma-separate selectors like ::-webkit-slider-thumb, ::-moz-range-thumb\n// Browsers ignore the whole rule if you do. So using templates for those.\nconst thumbStyles = `\n  height: var(--thumb-height);\n  width: var(--media-range-thumb-width, 10px);\n  border: var(--media-range-thumb-border, none);\n  border-radius: var(--media-range-thumb-border-radius, 10px);\n  background: var(--media-range-thumb-background, var(--media-primary-color, rgb(238 238 238)));\n  box-shadow: var(--media-range-thumb-box-shadow, 1px 1px 1px transparent);\n  cursor: pointer;\n  transition: var(--media-range-thumb-transition, none);\n  transform: var(--media-range-thumb-transform, none);\n  opacity: var(--media-range-thumb-opacity, 1);\n`;\n\nconst trackStyles = `\n  min-width: 40px;\n  height: var(--track-height);\n  border: var(--media-range-track-border, none);\n  outline: var(--media-range-track-outline);\n  outline-offset: var(--media-range-track-outline-offset);\n  border-radius: var(--media-range-track-border-radius, 1px);\n  background: var(--media-range-track-progress-internal, var(--media-range-track-background, rgb(255 255 255 / .2)));\n  backdrop-filter: var(--media-range-track-backdrop-filter);\n  box-shadow: var(--media-range-track-box-shadow, none);\n  transition: var(--media-range-track-transition, none);\n  transform: translate(var(--media-range-track-translate-x, 0), var(--media-range-track-translate-y, 0));\n  cursor: pointer;\n`;\n\ntemplate.innerHTML = /*html*/`\n  <style>\n    :host {\n      --thumb-height: var(--media-range-thumb-height, 10px);\n      --track-height: var(--media-range-track-height, 4px);\n      --_focus-box-shadow: var(--media-focus-box-shadow, inset 0 0 0 2px rgb(27 127 204 / .9));\n      --_media-range-padding: var(--media-range-padding, var(--media-control-padding, 10px));\n\n      vertical-align: middle;\n      box-sizing: border-box;\n      display: inline-block;\n      position: relative;\n      background: var(--media-control-background, var(--media-secondary-color, rgb(20 20 30 / .7)));\n      transition: background .15s linear;\n      width: 100px;\n      height: calc(var(--media-control-height, 24px) + 2 * var(--_media-range-padding));\n      padding-left: var(--media-range-padding-left, var(--_media-range-padding));\n      padding-right: var(--media-range-padding-right, var(--_media-range-padding));\n      pointer-events: auto;\n      ${/* needed for vertical align issue 1px off */''}\n      font-size: 0;\n      box-shadow: var(--_focus-visible-box-shadow, none);\n    }\n\n    ${/* Reset before `outline` on track could be set by a CSS var */''}\n    input[type=range]:focus {\n      outline: 0;\n    }\n    input[type=range]:focus::-webkit-slider-runnable-track {\n      outline: 0;\n    }\n\n    :host(:hover) {\n      background: var(--media-control-hover-background, rgb(50 50 70 / .7));\n    }\n\n    #container {\n      position: relative;\n      height: 100%;\n    }\n\n    input[type=range] {\n      ${/* Reset */''}\n      -webkit-appearance: none; ${/* Hides the slider so that custom slider can be made */''}\n      background: transparent; ${/* Otherwise white in Chrome */''}\n\n      ${/* Fill host with the range */''}\n      min-height: 100%;\n      width: var(--media-range-track-width, 100%); ${/* Specific width is required for Firefox. */''}\n\n      box-sizing: border-box;\n      padding: 0;\n      margin: 0;\n    }\n\n    ${/* Special styling for WebKit/Blink */''}\n    input[type=range]::-webkit-slider-thumb {\n      -webkit-appearance: none;\n      ${thumbStyles}\n      ${/* You need to specify a margin in Chrome, but in Firefox and IE it is automatic */''}\n      margin-top: calc(calc(0px - var(--thumb-height) + var(--track-height)) / 2);\n    }\n\n    ${/* The thumb is not positioned relative to the track in Firefox */''}\n    input[type=range]::-moz-range-thumb {\n      ${thumbStyles}\n      translate: var(--media-range-track-translate-x, 0) var(--media-range-track-translate-y, 0);\n    }\n\n    input[type=range]::-webkit-slider-runnable-track { ${trackStyles} }\n    input[type=range]::-moz-range-track { ${trackStyles} }\n    input[type=range]::-ms-track {\n      ${/* Reset */''}\n      width: 100%;\n      cursor: pointer;\n      ${/* Hides the slider so custom styles can be added */''}\n      background: transparent;\n      border-color: transparent;\n      color: transparent;\n\n      ${trackStyles}\n    }\n\n    #background,\n    #pointer {\n      width: var(--media-range-track-width, 100%);\n      height: var(--track-height);\n      border-radius: var(--media-range-track-border-radius, 1px);\n      position: absolute;\n      top: 50%;\n      transform: translate(var(--media-range-track-translate-x, 0px), calc(var(--media-range-track-translate-y, 0px) - 50%));\n    }\n\n    #background {\n      min-width: 40px;\n      background: var(--media-range-track-background, rgb(255 255 255 / .2));\n      backdrop-filter: var(--media-range-track-background-backdrop-filter);\n    }\n\n    #pointer {\n      background: var(--media-range-track-pointer-background);\n      border-right: var(--media-range-track-pointer-border-right);\n      transition: visibility .25s, opacity .25s;\n      visibility: hidden;\n      opacity: 0;\n    }\n\n    :host(:hover) #pointer {\n      transition: visibility .5s, opacity .5s;\n      visibility: visible;\n      opacity: 1;\n    }\n\n    #hoverzone {\n      ${/* Add z-index so it overlaps the top of the control buttons if they are right under. */''}\n      z-index: 1;\n      display: var(--media-time-range-hover-display, none);\n      position: absolute;\n      width: 100%;\n      bottom: var(--media-time-range-hover-bottom, -5px);\n      height: var(--media-time-range-hover-height, max(calc(100% + 5px), 20px));\n    }\n\n    #range {\n      z-index: 2;\n      position: relative;\n      height: var(--media-range-track-height, 4px);\n    }\n\n    input[type=range]:disabled::-webkit-slider-thumb {\n      background-color: #777;\n    }\n\n    input[type=range]:disabled::-webkit-slider-runnable-track {\n      background-color: #777;\n    }\n  </style>\n  <div id=\"container\">\n    <div id=\"background\"></div>\n    <div id=\"pointer\"></div>\n    <div id=\"hoverzone\"></div>\n    <input id=\"range\" type=\"range\" min=\"0\" max=\"1000\" step=\"any\" value=\"0\">\n  </div>\n`;\n\n/**\n * @extends {HTMLElement}\n *\n * @attr {boolean} disabled - The Boolean disabled attribute makes the element not mutable or focusable.\n * @attr {string} mediacontroller - The element `id` of the media controller to connect to (if not nested within).\n *\n * @cssproperty --media-primary-color - Default color of range bar.\n * @cssproperty --media-secondary-color - Default color of range background.\n *\n * @cssproperty [--media-control-display = inline-block] - `display` property of control.\n * @cssproperty --media-control-padding - `padding` of control.\n * @cssproperty --media-control-background - `background` of control.\n * @cssproperty --media-control-hover-background - `background` of control hover state.\n * @cssproperty --media-control-height - `height` of control.\n *\n * @cssproperty --media-range-padding - `padding` of range.\n * @cssproperty --media-range-padding-left - `padding-left` of range.\n * @cssproperty --media-range-padding-right - `padding-right` of range.\n *\n * @cssproperty --media-range-thumb-width - `width` of range thumb.\n * @cssproperty --media-range-thumb-height - `height` of range thumb.\n * @cssproperty --media-range-thumb-border - `border` of range thumb.\n * @cssproperty --media-range-thumb-border-radius - `border-radius` of range thumb.\n * @cssproperty --media-range-thumb-background - `background` of range thumb.\n * @cssproperty --media-range-thumb-box-shadow - `box-shadow` of range thumb.\n * @cssproperty --media-range-thumb-transition - `transition` of range thumb.\n * @cssproperty --media-range-thumb-transform - `transform` of range thumb.\n * @cssproperty --media-range-thumb-opacity - `opacity` of range thumb.\n *\n * @cssproperty [--media-range-bar-color = var(--media-primary-color, rgb(238 238 238))] - `color_value` of range bar (elapsed progress).\n * @cssproperty [--media-range-track-color = transparent] - `color_value` of range track (remaining progress).\n * @cssproperty --media-range-track-backdrop-filter - `backdrop-filter` of range track.\n * @cssproperty --media-range-track-width - `width` of range track.\n * @cssproperty --media-range-track-height - `height` of range track.\n * @cssproperty --media-range-track-border - `border` of range track.\n * @cssproperty --media-range-track-outline - `outline` of range track.\n * @cssproperty --media-range-track-outline-offset - `outline-offset` of range track.\n * @cssproperty --media-range-track-border-radius - `border-radius` of range track.\n * @cssproperty --media-range-track-box-shadow - `box-shadow` of range track.\n * @cssproperty --media-range-track-transition - `transition` of range track.\n * @cssproperty --media-range-track-translate-x - `translate` x-coordinate of range track.\n * @cssproperty --media-range-track-translate-y - `translate` y-coordinate of range track.\n *\n * @cssproperty --media-range-track-background - `background` of range track background.\n * @cssproperty --media-range-track-background-backdrop-filter - `backdrop-filter` of range track background.\n *\n * @cssproperty --media-time-range-hover-display - `display` of range hover zone.\n * @cssproperty --media-time-range-hover-bottom - `bottom` of range hover zone.\n * @cssproperty --media-time-range-hover-height - `height` of range hover zone.\n *\n * @cssproperty --media-range-track-pointer-background - `background` of range track pointer.\n * @cssproperty --media-range-track-pointer-border-right - `border-right` of range track pointer.\n */\nclass MediaChromeRange extends globalThis.HTMLElement {\n  thumbWidth;\n  #mediaController;\n\n  static get observedAttributes() {\n    return [\n      'disabled',\n      'aria-disabled',\n      MediaStateReceiverAttributes.MEDIA_CONTROLLER];\n  }\n\n  constructor() {\n    super();\n\n    if (!this.shadowRoot) {\n      // Set up the Shadow DOM if not using Declarative Shadow DOM.\n      this.attachShadow({ mode: 'open' });\n      this.shadowRoot.appendChild(template.content.cloneNode(true));\n    }\n\n    const { style } = getOrInsertCSSRule(this.shadowRoot, ':host');\n    style.setProperty('display', `var(--media-control-display, var(--${this.localName}-display, inline-block))`);\n\n    this.container = this.shadowRoot.querySelector('#container');\n    /** @type {Omit<HTMLInputElement, \"value\" | \"min\" | \"max\"> &\n      * {value: number, min: number, max: number}} */\n    this.range = this.shadowRoot.querySelector('#range');\n    this.range.addEventListener('input', this.updateBar.bind(this));\n\n    this.thumbWidth = parseInt(getComputedStyle(this).getPropertyValue('--media-range-thumb-width') || '10', 10);\n  }\n\n  #onFocusIn = () => {\n    if (this.range.matches(':focus-visible')) {\n      const { style } = getOrInsertCSSRule(this.shadowRoot, ':host');\n      style.setProperty('--_focus-visible-box-shadow', 'var(--_focus-box-shadow)');\n    }\n  }\n\n  #onFocusOut = () => {\n    const { style } = getOrInsertCSSRule(this.shadowRoot, ':host');\n    style.removeProperty('--_focus-visible-box-shadow');\n  }\n\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    if (attrName === MediaStateReceiverAttributes.MEDIA_CONTROLLER) {\n      if (oldValue) {\n        this.#mediaController?.unassociateElement?.(this);\n        this.#mediaController = null;\n      }\n      if (newValue) {\n        // @ts-ignore\n        this.#mediaController = this.getRootNode()?.getElementById(newValue);\n        this.#mediaController?.associateElement?.(this);\n      }\n    } else if (\n      attrName === 'disabled' ||\n      attrName === 'aria-disabled' &&\n      oldValue !== newValue\n    ) {\n      if (newValue == null) {\n        this.range.removeAttribute(attrName);\n      } else {\n        this.range.setAttribute(attrName, newValue);\n      }\n    }\n  }\n\n  connectedCallback() {\n    const mediaControllerId = this.getAttribute(\n      MediaStateReceiverAttributes.MEDIA_CONTROLLER\n    );\n    if (mediaControllerId) {\n      // @ts-ignore\n      this.#mediaController = this.getRootNode()?.getElementById(mediaControllerId);\n      this.#mediaController?.associateElement?.(this);\n    }\n\n    this.updateBar();\n\n    this.shadowRoot.addEventListener('focusin', this.#onFocusIn);\n    this.shadowRoot.addEventListener('focusout', this.#onFocusOut);\n  }\n\n  disconnectedCallback() {\n    // Use cached mediaController, getRootNode() doesn't work if disconnected.\n    this.#mediaController?.unassociateElement?.(this);\n    this.#mediaController = null;\n\n    this.shadowRoot.removeEventListener('focusin', this.#onFocusIn);\n    this.shadowRoot.removeEventListener('focusout', this.#onFocusOut);\n  }\n\n  updatePointerBar(evt) {\n    // Get mouse position percent\n    const rangeRect = this.range.getBoundingClientRect();\n    let mousePercent = (evt.clientX - rangeRect.left) / rangeRect.width;\n    // Lock between 0 and 1\n    mousePercent = Math.max(0, Math.min(1, mousePercent));\n\n    const { style } = getOrInsertCSSRule(this.shadowRoot, '#pointer');\n    style.setProperty('width', `${mousePercent * rangeRect.width}px`);\n  }\n\n  /*\n    Native ranges have a single color for the whole track, which is different\n    from most video players that have a colored \"bar\" to the left of the handle\n    showing playback progress or volume level. Here we're building that bar\n    by using a background gradient that moves with the range value.\n  */\n  updateBar() {\n    const colorArray = this.getBarColors();\n\n    let gradientStr = 'linear-gradient(to right, ';\n    /** @type {number|string} */\n    let prevPercent = 0;\n    colorArray.forEach((color) => {\n      if (color[1] < prevPercent) return;\n      gradientStr =\n        gradientStr + `${color[0]} ${prevPercent}%, ${color[0]} ${color[1]}%,`;\n      prevPercent = color[1];\n    });\n    gradientStr = gradientStr.slice(0, gradientStr.length - 1) + ')';\n\n    const { style } = getOrInsertCSSRule(this.shadowRoot, '#range');\n    style.setProperty('--media-range-track-progress-internal', gradientStr);\n  }\n\n  getRelativeValues() {\n    const { range } = this;\n    return {\n      relativeValue: range.value - range.min,\n      relativeMax: range.max - range.min,\n    };\n  }\n\n  /*\n    Build the color gradient for the range bar.\n    Creating an array so progress-bar can insert the buffered bar.\n  */\n  getBarColors() {\n    const range = this.range;\n    const {\n      relativeValue,\n      relativeMax,\n    } = this.getRelativeValues();\n    const rangePercent = (relativeValue / relativeMax) * 100;\n\n    let thumbPercent = 0;\n    // If the range thumb is at min or max don't correct the time range.\n    // Ideally the thumb center would go all the way to min and max values\n    // but input[type=range] doesn't play like that.\n    if (!!relativeValue && relativeValue < relativeMax) {\n      const thumbOffset = this.thumbWidth * (0.5 - rangePercent / 100);\n      thumbPercent = (thumbOffset / range.offsetWidth) * 100;\n    }\n\n    let colorArray = [\n      ['var(--media-range-bar-color, var(--media-primary-color, rgb(238 238 238)))', rangePercent + thumbPercent],\n      ['var(--media-range-track-color, transparent)', 100],\n    ];\n\n    return colorArray;\n  }\n\n  get keysUsed() {\n    return ['ArrowUp', 'ArrowRight', 'ArrowDown', 'ArrowLeft'];\n  }\n}\n\nif (!globalThis.customElements.get('media-chrome-range')) {\n  globalThis.customElements.define('media-chrome-range', MediaChromeRange);\n}\n\nexport { MediaChromeRange };\nexport default MediaChromeRange;\n", "/*\n  <media-control-bar>\n\n  Auto position contorls in a line and set some base colors\n*/\nimport { MediaStateReceiverAttributes } from './constants.js';\nimport { getOrInsertCSSRule } from './utils/element-utils.js';\nimport { globalThis, document } from './utils/server-safe-globals.js';\n\nconst template = document.createElement('template');\n\ntemplate.innerHTML = /*html*/`\n  <style>\n    :host {\n      ${/* Need position to display above video for some reason */''}\n      box-sizing: border-box;\n      display: var(--media-control-display, var(--media-control-bar-display, inline-flex));\n      color: var(--media-text-color, var(--media-primary-color, rgb(238 238 238)));\n      --media-loading-indicator-icon-height: 44px;\n    }\n\n    media-time-range,\n    ::slotted(media-time-range),\n    ::slotted(media-clip-selector) {\n      flex-grow: 1;\n    }\n\n    media-time-range,\n    ::slotted(media-time-range),\n    ::slotted(media-clip-selector),\n    media-volume-range,\n    ::slotted(media-volume-range) {\n      height: var(--_range-auto-size, calc(var(--media-control-height, 24px) + 2 * var(--_media-range-padding)));\n    }\n  </style>\n\n  <slot></slot>\n`;\n\n/**\n * @attr {string} mediacontroller - The element `id` of the media controller to connect to (if not nested within).\n *\n * @cssproperty --media-primary-color - Default color of text and icon.\n * @cssproperty --media-secondary-color - Default color of button background.\n * @cssproperty --media-text-color - `color` of button text.\n *\n * @cssproperty --media-control-bar-display - `display` property of control bar.\n * @cssproperty --media-control-display - `display` property of control.\n */\nclass MediaControlBar extends globalThis.HTMLElement {\n  #mediaController;\n\n  static get observedAttributes() {\n    return [MediaStateReceiverAttributes.MEDIA_CONTROLLER];\n  }\n\n  constructor() {\n    super();\n\n    if (!this.shadowRoot) {\n      // Set up the Shadow DOM if not using Declarative Shadow DOM.\n      this.attachShadow({ mode: 'open' });\n      this.shadowRoot.appendChild(template.content.cloneNode(true));\n    }\n\n    this.shadowRoot.querySelector('slot').addEventListener('slotchange', ({ target }) => {\n      const onlyRanges = target.assignedElements({flatten: true})\n        .every(el => ['media-time-range', 'media-volume-range'].includes(el.nodeName.toLowerCase()));\n      const { style } = getOrInsertCSSRule(this.shadowRoot, ':host');\n      const autoSizeHeight = onlyRanges ? 'unset' : 'initial';\n      style.setProperty('--_range-auto-size', autoSizeHeight);\n    });\n  }\n\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    if (attrName === MediaStateReceiverAttributes.MEDIA_CONTROLLER) {\n      if (oldValue) {\n        this.#mediaController?.unassociateElement?.(this);\n        this.#mediaController = null;\n      }\n      if (newValue) {\n        // @ts-ignore\n        this.#mediaController = this.getRootNode()?.getElementById(newValue);\n        this.#mediaController?.associateElement?.(this);\n      }\n    }\n  }\n\n  connectedCallback() {\n    const mediaControllerId = this.getAttribute(\n      MediaStateReceiverAttributes.MEDIA_CONTROLLER\n    );\n    if (mediaControllerId) {\n      // @ts-ignore\n      this.#mediaController = this.getRootNode()?.getElementById(mediaControllerId);\n      this.#mediaController?.associateElement?.(this);\n    }\n  }\n\n  disconnectedCallback() {\n    // Use cached mediaController, getRootNode() doesn't work if disconnected.\n    this.#mediaController?.unassociateElement?.(this);\n    this.#mediaController = null;\n  }\n}\n\nif (!globalThis.customElements.get('media-control-bar')) {\n  globalThis.customElements.define('media-control-bar', MediaControlBar);\n}\n\nexport default MediaControlBar;\n", "import { MediaStateReceiverAttributes } from './constants.js';\nimport { getOrInsertCSSRule } from './utils/element-utils.js';\nimport { globalThis, document } from './utils/server-safe-globals.js';\n// Todo: Use data locals: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleTimeString\n\nconst template = document.createElement('template');\n\ntemplate.innerHTML = /*html*/`\n  <style>\n    :host {\n      font: var(--media-font,\n        var(--media-font-weight, normal)\n        var(--media-font-size, 14px) /\n        var(--media-text-content-height, var(--media-control-height, 24px))\n        var(--media-font-family, helvetica neue, segoe ui, roboto, arial, sans-serif));\n      color: var(--media-text-color, var(--media-primary-color, rgb(238 238 238)));\n      background: var(--media-text-background, var(--media-control-background, var(--media-secondary-color, rgb(20 20 30 / .7))));\n      padding: var(--media-control-padding, 10px);\n      display: inline-flex;\n      justify-content: center;\n      align-items: center;\n      vertical-align: middle;\n      box-sizing: border-box;\n      text-align: center;\n      pointer-events: auto;\n    }\n\n    ${/*\n      Only show outline when keyboard focusing.\n      https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo\n    */''}\n    :host(:focus-visible) {\n      box-shadow: inset 0 0 0 2px rgb(27 127 204 / .9);\n      outline: 0;\n    }\n\n    ${/*\n     * hide default focus ring, particularly when using mouse\n     */''}\n    :host(:where(:focus)) {\n      box-shadow: none;\n      outline: 0;\n    }\n  </style>\n  <slot></slot>\n`;\n\n/**\n * @slot - Default slotted elements.\n *\n * @attr {string} mediacontroller - The element `id` of the media controller to connect to (if not nested within).\n *\n * @cssproperty --media-primary-color - Default color of text.\n * @cssproperty --media-secondary-color - Default color of background.\n * @cssproperty --media-text-color - `color` of text.\n *\n * @cssproperty --media-control-display - `display` property of control.\n * @cssproperty --media-control-background - `background` of control.\n * @cssproperty --media-control-padding - `padding` of control.\n * @cssproperty --media-control-height - `line-height` of control.\n *\n * @cssproperty --media-font - `font` shorthand property.\n * @cssproperty --media-font-weight - `font-weight` property.\n * @cssproperty --media-font-family - `font-family` property.\n * @cssproperty --media-font-size - `font-size` property.\n * @cssproperty --media-text-content-height - `line-height` of text.\n */\nclass MediaTextDisplay extends globalThis.HTMLElement {\n  #mediaController;\n\n  static get observedAttributes() {\n    return [MediaStateReceiverAttributes.MEDIA_CONTROLLER];\n  }\n\n  constructor() {\n    super();\n\n    if (!this.shadowRoot) {\n      // Set up the Shadow DOM if not using Declarative Shadow DOM.\n      this.attachShadow({ mode: 'open' });\n      this.shadowRoot.appendChild(template.content.cloneNode(true));\n    }\n\n    const { style } = getOrInsertCSSRule(this.shadowRoot, ':host');\n    style.setProperty('display', `var(--media-control-display, var(--${this.localName}-display, inline-flex))`);\n  }\n\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    if (attrName === MediaStateReceiverAttributes.MEDIA_CONTROLLER) {\n      if (oldValue) {\n        this.#mediaController?.unassociateElement?.(this);\n        this.#mediaController = null;\n      }\n      if (newValue) {\n        // @ts-ignore\n        this.#mediaController = this.getRootNode()?.getElementById(newValue);\n        this.#mediaController?.associateElement?.(this);\n      }\n    }\n  }\n\n  connectedCallback() {\n    const mediaControllerId = this.getAttribute(\n      MediaStateReceiverAttributes.MEDIA_CONTROLLER\n    );\n    if (mediaControllerId) {\n      // @ts-ignore\n      this.#mediaController = this.getRootNode()?.getElementById(mediaControllerId);\n      this.#mediaController?.associateElement?.(this);\n    }\n  }\n\n  disconnectedCallback() {\n    // Use cached mediaController, getRootNode() doesn't work if disconnected.\n    this.#mediaController?.unassociateElement?.(this);\n    this.#mediaController = null;\n  }\n}\n\nif (!globalThis.customElements.get('media-text-display')) {\n  globalThis.customElements.define('media-text-display', MediaTextDisplay);\n}\n\nexport { MediaTextDisplay };\nexport default MediaTextDisplay;\n", "import { MediaTextDisplay } from './media-text-display.js';\nimport { globalThis } from './utils/server-safe-globals.js';\nimport { formatTime } from './utils/time.js';\nimport { MediaUIAttributes } from './constants.js';\nimport { getNumericAttr, setNumericAttr } from './utils/element-utils.js';\n// Todo: Use data locals: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleTimeString\n\n/**\n * @attr {string} mediaduration - (read-only) Set to the media duration.\n *\n * @cssproperty [--media-duration-display-display = inline-flex] - `display` property of display.\n */\nclass MediaDurationDisplay extends MediaTextDisplay {\n  /** @type {HTMLSlotElement} */\n  #slot;\n\n  static get observedAttributes() {\n    return [...super.observedAttributes, MediaUIAttributes.MEDIA_DURATION];\n  }\n\n  constructor() {\n    super();\n    this.#slot = this.shadowRoot.querySelector('slot');\n    this.#slot.textContent = formatTime(0);\n  }\n\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    if (attrName === MediaUIAttributes.MEDIA_DURATION) {\n      this.#slot.textContent = formatTime(newValue);\n    }\n    super.attributeChangedCallback(attrName, oldValue, newValue);\n  }\n\n  /**\n   * @type {number | undefined} In seconds\n   */\n  get mediaDuration() {\n    return getNumericAttr(this, MediaUIAttributes.MEDIA_DURATION);\n  }\n\n  set mediaDuration(time) {\n    setNumericAttr(this, MediaUIAttributes.MEDIA_DURATION, time);\n  }\n}\n\nif (!globalThis.customElements.get('media-duration-display')) {\n  globalThis.customElements.define('media-duration-display', MediaDurationDisplay);\n}\n\nexport default MediaDurationDisplay;\n", "import { MediaTextDisplay } from './media-text-display.js';\nimport {\n  getBooleanAttr,\n  getNumericAttr,\n  getOrInsertCSSRule,\n  setBooleanAttr,\n  setNumericAttr,\n} from './utils/element-utils.js';\nimport { globalThis } from './utils/server-safe-globals.js';\nimport { formatAsTimePhrase, formatTime } from './utils/time.js';\nimport { MediaUIAttributes } from './constants.js';\nimport { nouns } from './labels/labels.js';\n\nexport const Attributes = {\n  REMAINING: 'remaining',\n  SHOW_DURATION: 'showduration',\n  NO_TOGGLE: 'notoggle',\n};\n\nconst CombinedAttributes = [\n  ...Object.values(Attributes),\n  MediaUIAttributes.MEDIA_CURRENT_TIME,\n  MediaUIAttributes.MEDIA_DURATION,\n  MediaUIAttributes.MEDIA_SEEKABLE,\n];\n\n// Todo: Use data locals: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleTimeString\n\nconst ButtonPressedKeys = ['Enter', ' '];\n\nconst DEFAULT_TIMES_SEP = '&nbsp;/&nbsp;';\n\nconst formatTimesLabel = (el, { timesSep = DEFAULT_TIMES_SEP } = {}) => {\n  const showRemaining = el.hasAttribute(Attributes.REMAINING);\n  const showDuration = el.hasAttribute(Attributes.SHOW_DURATION);\n  const currentTime = el.mediaCurrentTime ?? 0;\n  const [, seekableEnd] = el.mediaSeekable ?? [];\n  const endTime = el.mediaDuration ?? seekableEnd ?? 0;\n\n  const timeLabel = showRemaining\n    ? formatTime(0 - (endTime - currentTime))\n    : formatTime(currentTime);\n\n  if (!showDuration) return timeLabel;\n  return `${timeLabel}${timesSep}${formatTime(endTime)}`;\n};\n\nconst DEFAULT_MISSING_TIME_PHRASE = 'video not loaded, unknown time.';\n\nconst updateAriaValueText = (el) => {\n  const currentTime = el.mediaCurrentTime;\n  const [, seekableEnd] = el.mediaSeekable ?? [];\n  const endTime = el.mediaDuration || seekableEnd;\n  if (currentTime == null || endTime == null) {\n    el.setAttribute('aria-valuetext', DEFAULT_MISSING_TIME_PHRASE);\n    return;\n  }\n  const showRemaining = el.hasAttribute(Attributes.REMAINING);\n  const showDuration = el.hasAttribute(Attributes.SHOW_DURATION);\n\n  const currentTimePhrase = showRemaining\n    ? formatAsTimePhrase(0 - (endTime - currentTime))\n    : formatAsTimePhrase(currentTime);\n\n  if (!showDuration) {\n    el.setAttribute('aria-valuetext', currentTimePhrase);\n    return;\n  }\n  const totalTimePhrase = formatAsTimePhrase(endTime);\n  const fullPhrase = `${currentTimePhrase} of ${totalTimePhrase}`;\n  el.setAttribute('aria-valuetext', fullPhrase);\n};\n\n/**\n * @attr {boolean} remaining - Toggle on to show the remaining time instead of elapsed time.\n * @attr {boolean} showduration - Toggle on to show the duration.\n * @attr {boolean} disabled - The Boolean disabled attribute makes the element not mutable or focusable.\n * @attr {boolean} notoggle - Set this to disable click or tap behavior that toggles between remaining and current time.\n * @attr {string} mediacurrenttime - (read-only) Set to the current media time.\n * @attr {string} mediaduration - (read-only) Set to the media duration.\n * @attr {string} mediaseekable - (read-only) Set to the seekable time ranges.\n *\n * @cssproperty [--media-time-display-display = inline-flex] - `display` property of display.\n * @cssproperty --media-control-hover-background - `background` of control hover state.\n */\nclass MediaTimeDisplay extends MediaTextDisplay {\n  /** @type {HTMLSlotElement} */\n  #slot;\n\n  static get observedAttributes() {\n    return [...super.observedAttributes, ...CombinedAttributes, 'disabled'];\n  }\n\n  constructor() {\n    super();\n\n    this.#slot = this.shadowRoot.querySelector('slot');\n    this.#slot.innerHTML = `${formatTimesLabel(this)}`;\n\n    const { style } = getOrInsertCSSRule(this.shadowRoot, ':host:not([notoggle])');\n    style.setProperty('cursor', 'pointer');\n\n    const { style: hoverStyle } = getOrInsertCSSRule(\n      this.shadowRoot,\n      ':host(:hover:not([notoggle]))'\n    );\n    hoverStyle.setProperty(\n      'background',\n      'var(--media-control-hover-background, rgba(50 50 70 / .7))'\n    );\n  }\n\n  connectedCallback() {\n    if (!this.hasAttribute('disabled')) {\n      this.enable();\n    }\n\n    this.setAttribute('role', 'progressbar');\n    this.setAttribute('aria-label', nouns.PLAYBACK_TIME());\n\n    const keyUpHandler = (evt) => {\n      const { key } = evt;\n      if (!ButtonPressedKeys.includes(key)) {\n        this.removeEventListener('keyup', keyUpHandler);\n        return;\n      }\n\n      this.toggleTimeDisplay();\n    };\n\n    this.addEventListener('keydown', (evt) => {\n      const { metaKey, altKey, key } = evt;\n      if (metaKey || altKey || !ButtonPressedKeys.includes(key)) {\n        this.removeEventListener('keyup', keyUpHandler);\n        return;\n      }\n      this.addEventListener('keyup', keyUpHandler);\n    });\n\n    this.addEventListener('click', this.toggleTimeDisplay);\n\n    super.connectedCallback();\n  }\n\n  toggleTimeDisplay() {\n    if (this.noToggle) {\n      return;\n    }\n    if (this.hasAttribute('remaining')) {\n      this.removeAttribute('remaining');\n    } else {\n      this.setAttribute('remaining', '');\n    }\n  }\n\n  disconnectedCallback() {\n    this.disable();\n    super.disconnectedCallback();\n  }\n\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    if (CombinedAttributes.includes(attrName)) {\n      this.update();\n    } else if (attrName === 'disabled' && newValue !== oldValue) {\n      if (newValue == null) {\n        this.enable();\n      } else {\n        this.disable();\n      }\n    }\n\n    super.attributeChangedCallback(attrName, oldValue, newValue);\n  }\n\n  enable() {\n    this.tabIndex = 0;\n  }\n\n  disable() {\n    this.tabIndex = -1;\n  }\n\n  // Own props\n\n  /**\n   * Whether to show the remaining time\n   * @type {boolean}\n   */\n  get remaining() {\n    return getBooleanAttr(this, Attributes.REMAINING);\n  }\n\n  set remaining(show) {\n    setBooleanAttr(this, Attributes.REMAINING, show);\n  }\n\n  /**\n   * Whether to show the duration\n   * @type {boolean}\n   */\n  get showDuration() {\n    return getBooleanAttr(this, Attributes.SHOW_DURATION);\n  }\n\n  set showDuration(show) {\n    setBooleanAttr(this, Attributes.SHOW_DURATION, show);\n  }\n\n  /**\n   * Disable the default behavior that toggles between current and remaining time\n   * @type {boolean}\n   */\n  get noToggle() {\n    return getBooleanAttr(this, Attributes.NO_TOGGLE);\n  }\n\n  set noToggle(notoggle) {\n    setBooleanAttr(this, Attributes.NO_TOGGLE, notoggle);\n  }\n\n  // Props derived from media UI attributes\n\n  /**\n   * Get the duration\n   * @type {number | undefined} In seconds\n   */\n  get mediaDuration() {\n    return getNumericAttr(this, MediaUIAttributes.MEDIA_DURATION);\n  }\n\n  set mediaDuration(time) {\n    setNumericAttr(this, MediaUIAttributes.MEDIA_DURATION, time);\n  }\n\n  /**\n   * The current time\n   * @type {number | undefined} In seconds\n   */\n  get mediaCurrentTime() {\n    return getNumericAttr(this, MediaUIAttributes.MEDIA_CURRENT_TIME);\n  }\n\n  set mediaCurrentTime(time) {\n    setNumericAttr(this, MediaUIAttributes.MEDIA_CURRENT_TIME, time);\n  }\n\n  /**\n   * Range of values that can be seeked to\n   * @type {[number, number] | undefined} An array of two numbers [start, end]\n   */\n  get mediaSeekable() {\n    const seekable = this.getAttribute(MediaUIAttributes.MEDIA_SEEKABLE);\n    if (!seekable) return undefined;\n    // Only currently supports a single, contiguous seekable range (CJP)\n    return seekable.split(':').map((time) => +time);\n  }\n\n  set mediaSeekable(range) {\n    if (range == null) {\n      this.removeAttribute(MediaUIAttributes.MEDIA_SEEKABLE);\n      return;\n    }\n    this.setAttribute(MediaUIAttributes.MEDIA_SEEKABLE, range.join(':'));\n  }\n\n  update() {\n    const timesLabel = formatTimesLabel(this);\n    updateAriaValueText(this);\n    // Only update if it changed, timeupdate events are called a few times per second.\n    if (timesLabel !== this.#slot.innerHTML) {\n      this.#slot.innerHTML = timesLabel;\n    }\n  }\n}\n\nif (!globalThis.customElements.get('media-time-display')) {\n  globalThis.customElements.define('media-time-display', MediaTimeDisplay);\n}\n\nexport default MediaTimeDisplay;\n", "import { MediaChromeButton } from './media-chrome-button.js';\nimport { globalThis, document } from './utils/server-safe-globals.js';\nimport { MediaUIAttributes } from './constants.js';\nimport { nouns } from './labels/labels.js';\nimport {\n  areSubsOn,\n  parseTextTracksStr,\n  stringifyTextTrackList,\n  toggleSubsCaps,\n} from './utils/captions.js';\n\nconst ccIconOn = `<svg aria-hidden=\"true\" viewBox=\"0 0 26 24\">\n  <path d=\"M22.83 5.68a2.58 2.58 0 0 0-2.3-2.5c-3.62-.24-11.44-.24-15.06 0a2.58 2.58 0 0 0-2.3 2.5c-.23 4.21-.23 8.43 0 12.64a2.58 2.58 0 0 0 2.3 2.5c3.62.24 11.44.24 15.06 0a2.58 2.58 0 0 0 2.3-2.5c.23-4.21.23-8.43 0-12.64Zm-11.39 9.45a3.07 3.07 0 0 1-1.91.57 3.06 3.06 0 0 1-2.34-1 3.75 3.75 0 0 1-.92-2.67 3.92 3.92 0 0 1 .92-2.77 3.18 3.18 0 0 1 2.43-1 2.94 2.94 0 0 1 2.13.78c.364.359.62.813.74 1.31l-1.43.35a1.49 1.49 0 0 0-1.51-1.17 1.61 1.61 0 0 0-1.29.58 2.79 2.79 0 0 0-.5 1.89 3 3 0 0 0 .49 1.93 1.61 1.61 0 0 0 1.27.58 1.48 1.48 0 0 0 1-.37 2.1 2.1 0 0 0 .59-1.14l1.4.44a3.23 3.23 0 0 1-1.07 1.69Zm7.22 0a3.07 3.07 0 0 1-1.91.57 3.06 3.06 0 0 1-2.34-1 3.75 3.75 0 0 1-.92-2.67 3.88 3.88 0 0 1 .93-2.77 3.14 3.14 0 0 1 2.42-1 3 3 0 0 1 2.16.82 2.8 2.8 0 0 1 .73 1.31l-1.43.35a1.49 1.49 0 0 0-1.51-1.21 1.61 1.61 0 0 0-1.29.58A2.79 2.79 0 0 0 15 12a3 3 0 0 0 .49 1.93 1.61 1.61 0 0 0 1.27.58 1.44 1.44 0 0 0 1-.37 2.1 2.1 0 0 0 .6-1.15l1.4.44a3.17 3.17 0 0 1-1.1 1.7Z\"/>\n</svg>`;\n\nconst ccIconOff = `<svg aria-hidden=\"true\" viewBox=\"0 0 26 24\">\n  <path d=\"M17.73 14.09a1.4 1.4 0 0 1-1 .37 1.579 1.579 0 0 1-1.27-.58A3 3 0 0 1 15 12a2.8 2.8 0 0 1 .5-1.85 1.63 1.63 0 0 1 1.29-.57 1.47 1.47 0 0 1 1.51 1.2l1.43-.34A2.89 2.89 0 0 0 19 9.07a3 3 0 0 0-2.14-.78 3.14 3.14 0 0 0-2.42 1 3.91 3.91 0 0 0-.93 2.78 3.74 3.74 0 0 0 .92 2.66 3.07 3.07 0 0 0 2.34 1 3.07 3.07 0 0 0 1.91-.57 3.17 3.17 0 0 0 1.07-1.74l-1.4-.45c-.083.43-.3.822-.62 1.12Zm-7.22 0a1.43 1.43 0 0 1-1 .37 1.58 1.58 0 0 1-1.27-.58A3 3 0 0 1 7.76 12a2.8 2.8 0 0 1 .5-1.85 1.63 1.63 0 0 1 1.29-.57 1.47 1.47 0 0 1 1.51 1.2l1.43-.34a2.81 2.81 0 0 0-.74-1.32 2.94 2.94 0 0 0-2.13-.78 3.18 3.18 0 0 0-2.43 1 4 4 0 0 0-.92 2.78 3.74 3.74 0 0 0 .92 2.66 3.07 3.07 0 0 0 2.34 1 3.07 3.07 0 0 0 1.91-.57 3.23 3.23 0 0 0 1.07-1.74l-1.4-.45a2.06 2.06 0 0 1-.6 1.07Zm12.32-8.41a2.59 2.59 0 0 0-2.3-2.51C18.72 3.05 15.86 3 13 3c-2.86 0-5.72.05-7.53.17a2.59 2.59 0 0 0-2.3 2.51c-.23 4.207-.23 8.423 0 12.63a2.57 2.57 0 0 0 2.3 2.5c1.81.13 4.67.19 7.53.19 2.86 0 5.72-.06 7.53-.19a2.57 2.57 0 0 0 2.3-2.5c.23-4.207.23-8.423 0-12.63Zm-1.49 12.53a1.11 1.11 0 0 1-.91 1.11c-1.67.11-4.45.18-7.43.18-2.98 0-5.76-.07-7.43-.18a1.11 1.11 0 0 1-.91-1.11c-.21-4.14-.21-8.29 0-12.43a1.11 1.11 0 0 1 .91-1.11C7.24 4.56 10 4.49 13 4.49s5.76.07 7.43.18a1.11 1.11 0 0 1 .91 1.11c.21 4.14.21 8.29 0 12.43Z\"/>\n</svg>`;\n\nconst slotTemplate = document.createElement('template');\nslotTemplate.innerHTML = /*html*/`\n  <style>\n    :host([aria-checked=\"true\"]) slot[name=off] {\n      display: none !important;\n    }\n\n    ${/* Double negative, but safer if display doesn't equal 'block' */ ''}\n    :host(:not([aria-checked=\"true\"])) slot[name=on] {\n      display: none !important;\n    }\n  </style>\n\n  <slot name=\"icon\">\n    <slot name=\"on\">${ccIconOn}</slot>\n    <slot name=\"off\">${ccIconOff}</slot>\n  </slot>\n`;\n\nconst updateAriaChecked = (el) => {\n  el.setAttribute('aria-checked', areSubsOn(el));\n};\n\n/**\n * @param {any} el Should be HTMLElement but issues with globalThis shim\n * @param {string} attrName\n * @returns {Array<Object>} An array of TextTrack-like objects.\n */\nconst getSubtitlesListAttr = (el, attrName) => {\n  const attrVal = el.getAttribute(attrName);\n  return attrVal ? parseTextTracksStr(attrVal) : [];\n};\n\n/**\n *\n * @param {any} el Should be HTMLElement but issues with globalThis shim\n * @param {string} attrName\n * @param {Array<Object>} list An array of TextTrack-like objects\n */\nconst setSubtitlesListAttr = (el, attrName, list) => {\n  // null, undefined, and empty arrays are treated as \"no value\" here\n  if (!list?.length) {\n    el.removeAttribute(attrName);\n    return;\n  }\n\n  // don't set if the new value is the same as existing\n  const newValStr = stringifyTextTrackList(list);\n  const oldVal = el.getAttribute(attrName);\n  if (oldVal === newValStr) return;\n\n  el.setAttribute(attrName, newValStr);\n};\n\n/**\n * @slot on - An element that will be shown while closed captions or subtitles are on.\n * @slot off - An element that will be shown while closed captions or subtitles are off.\n * @slot icon - An element for representing on and off states in a single icon\n *\n * @attr {string} mediasubtitleslist - (read-only) A list of all subtitles and captions.\n * @attr {string} mediasubtitlesshowing - (read-only) A list of the showing subtitles and captions.\n *\n * @cssproperty [--media-captions-button-display = inline-flex] - `display` property of button.\n */\nclass MediaCaptionsButton extends MediaChromeButton {\n  static get observedAttributes() {\n    return [\n      ...super.observedAttributes,\n      MediaUIAttributes.MEDIA_SUBTITLES_LIST,\n      MediaUIAttributes.MEDIA_SUBTITLES_SHOWING,\n    ];\n  }\n\n  constructor(options = {}) {\n    super({ slotTemplate, ...options });\n    // Internal variable to keep track of when we have some or no captions (or subtitles, if using subtitles fallback)\n    // Used for `default-showing` behavior.\n    this._captionsReady = false;\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.setAttribute('role', 'switch');\n    this.setAttribute('aria-label', nouns.CLOSED_CAPTIONS());\n    updateAriaChecked(this);\n  }\n\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    if (attrName === MediaUIAttributes.MEDIA_SUBTITLES_SHOWING) {\n      updateAriaChecked(this);\n    }\n\n    super.attributeChangedCallback(attrName, oldValue, newValue);\n  }\n\n  /**\n   * @type {Array<object>} An array of TextTrack-like objects.\n   * Objects must have the properties: kind, language, and label.\n   */\n  get mediaSubtitlesList() {\n    return getSubtitlesListAttr(this, MediaUIAttributes.MEDIA_SUBTITLES_LIST);\n  }\n\n  set mediaSubtitlesList(list) {\n    setSubtitlesListAttr(this, MediaUIAttributes.MEDIA_SUBTITLES_LIST, list);\n  }\n\n  /**\n   * @type {Array<object>} An array of TextTrack-like objects.\n   * Objects must have the properties: kind, language, and label.\n   */\n  get mediaSubtitlesShowing() {\n    return getSubtitlesListAttr(\n      this,\n      MediaUIAttributes.MEDIA_SUBTITLES_SHOWING\n    );\n  }\n\n  set mediaSubtitlesShowing(list) {\n    setSubtitlesListAttr(this, MediaUIAttributes.MEDIA_SUBTITLES_SHOWING, list);\n  }\n\n  handleClick() {\n    toggleSubsCaps(this);\n  }\n}\n\nif (!globalThis.customElements.get('media-captions-button')) {\n  globalThis.customElements.define('media-captions-button', MediaCaptionsButton);\n}\n\nexport default MediaCaptionsButton;\n", "import { verbs } from '../labels/labels.js';\nimport { getSlotted, updateIconText } from './element-utils.js';\n\n/**\n * @param {HTMLElement & { seekOffset: number; }} el\n */\nexport function updateAriaLabel(el) {\n  // NOTE: seek direction is described via text\n  // so always use positive numeric representation\n  const seekOffset = Math.abs(el.seekOffset);\n  const label = verbs.SEEK_BACK_N_SECS({ seekOffset });\n  el.setAttribute('aria-label', label);\n}\n\n/**\n * @param {HTMLElement & { seekOffset: number; }} el\n */\nexport function updateSeekIconValue(el) {\n  const svg = getSlotted(el, 'icon');\n  const value = el.seekOffset;\n  updateIconText(svg, value);\n}\n", "import { MediaChromeButton } from './media-chrome-button.js';\nimport { globalThis, document } from './utils/server-safe-globals.js';\nimport { MediaUIEvents, MediaUIAttributes } from './constants.js';\nimport { updateAriaLabel, updateSeekIconValue } from './utils/seek.js';\nimport { getNumericAttr, setNumericAttr } from './utils/element-utils.js';\n\nexport const Attributes = {\n  SEEK_OFFSET: 'seekoffset',\n};\n\nconst DEFAULT_SEEK_OFFSET = 30;\n\nconst forwardIcon = `<svg aria-hidden=\"true\" viewBox=\"0 0 20 24\"><defs><style>.text{font-size:8px;font-family:Arial-BoldMT, Arial;font-weight:700;}</style></defs><text class=\"text value\" transform=\"translate(8.9 19.87)\">${DEFAULT_SEEK_OFFSET}</text><path d=\"M10 6V3l5.61 4L10 10.94V8a5.54 5.54 0 0 0-1.9 10.48v2.12A7.5 7.5 0 0 1 10 6Z\"/></svg>`;\n\nconst slotTemplate = document.createElement('template');\nslotTemplate.innerHTML = `\n  <slot name=\"icon\">${forwardIcon}</slot>\n`;\n\nconst DEFAULT_TIME = 0;\n\n/**\n * @slot icon - The element shown for the seek forward button\u2019s display.\n *\n * @attr {string} seekoffset - Adjusts how much time (in seconds) the playhead should seek forward.\n * @attr {string} mediacurrenttime - (read-only) Set to the current media time.\n *\n * @cssproperty [--media-seek-forward-button-display = inline-flex] - `display` property of button.\n */\nclass MediaSeekForwardButton extends MediaChromeButton {\n  static get observedAttributes() {\n    return [\n      ...super.observedAttributes,\n      MediaUIAttributes.MEDIA_CURRENT_TIME,\n      Attributes.SEEK_OFFSET,\n    ];\n  }\n\n  constructor(options = {}) {\n    super({ slotTemplate, ...options });\n  }\n\n  connectedCallback() {\n    updateAriaLabel(this);\n    updateSeekIconValue(this);\n    super.connectedCallback();\n  }\n\n  attributeChangedCallback(attrName, _oldValue, newValue) {\n    if (attrName === Attributes.SEEK_OFFSET) {\n      updateSeekIconValue(this);\n      updateAriaLabel(this);\n    }\n\n    super.attributeChangedCallback(attrName, _oldValue, newValue);\n  }\n\n  // Own props\n\n  /**\n   * @type {number | undefined} Seek amount in seconds\n   */\n  get seekOffset() {\n    return getNumericAttr(this, Attributes.SEEK_OFFSET, DEFAULT_SEEK_OFFSET);\n  }\n\n  set seekOffset(value) {\n    setNumericAttr(this, Attributes.SEEK_OFFSET, value);\n  }\n\n  // Props derived from Media UI Attributes\n\n  /**\n   * The current time\n   * @type {number | undefined} In seconds\n   */\n  get mediaCurrentTime() {\n    return getNumericAttr(this, MediaUIAttributes.MEDIA_CURRENT_TIME, DEFAULT_TIME);\n  }\n\n  set mediaCurrentTime(time) {\n    setNumericAttr(this, MediaUIAttributes.MEDIA_CURRENT_TIME, time);\n  }\n\n  handleClick() {\n    const detail = this.mediaCurrentTime + this.seekOffset;\n    const evt = new globalThis.CustomEvent(MediaUIEvents.MEDIA_SEEK_REQUEST, {\n      composed: true,\n      bubbles: true,\n      detail,\n    });\n    this.dispatchEvent(evt);\n  }\n}\n\nif (!globalThis.customElements.get('media-seek-forward-button')) {\n  globalThis.customElements.define(\n    'media-seek-forward-button',\n    MediaSeekForwardButton\n  );\n}\n\nexport default MediaSeekForwardButton;\n", "/*\n  <media-fullscreen-button media=\"#myVideo\" fullscreen-element=\"#myContainer\">\n\n  The fullscreen-element attribute can be used to say which element\n  to make fullscreen.\n  If none, the button will look for the closest media-container element to the media.\n  If none, the button will make the media fullscreen.\n*/\nimport { MediaChromeButton } from './media-chrome-button.js';\nimport { globalThis, document } from './utils/server-safe-globals.js';\nimport { MediaUIEvents, MediaUIAttributes } from './constants.js';\nimport { verbs } from './labels/labels.js';\nimport {\n  getBooleanAttr,\n  getStringAttr,\n  setBooleanAttr,\n  setStringAttr,\n} from './utils/element-utils.js';\n\nconst enterFullscreenIcon = `<svg aria-hidden=\"true\" viewBox=\"0 0 26 24\">\n  <path d=\"M16 3v2.5h3.5V9H22V3h-6ZM4 9h2.5V5.5H10V3H4v6Zm15.5 9.5H16V21h6v-6h-2.5v3.5ZM6.5 15H4v6h6v-2.5H6.5V15Z\"/>\n</svg>`;\n\nconst exitFullscreenIcon = `<svg aria-hidden=\"true\" viewBox=\"0 0 26 24\">\n  <path d=\"M18.5 6.5V3H16v6h6V6.5h-3.5ZM16 21h2.5v-3.5H22V15h-6v6ZM4 17.5h3.5V21H10v-6H4v2.5Zm3.5-11H4V9h6V3H7.5v3.5Z\"/>\n</svg>`;\n\nconst slotTemplate = document.createElement('template');\nslotTemplate.innerHTML = /*html*/`\n  <style>\n  :host([${MediaUIAttributes.MEDIA_IS_FULLSCREEN}]) slot:not([name=exit]):not([name=icon]) {\n    display: none !important;\n  }\n\n  ${/* Double negative, but safer if display doesn't equal 'block' */ ''}\n  :host(:not([${MediaUIAttributes.MEDIA_IS_FULLSCREEN}])) slot:not([name=enter]):not([name=icon]) {\n    display: none !important;\n  }\n  </style>\n\n  <slot name=\"icon\">\n    <slot name=\"enter\">${enterFullscreenIcon}</slot>\n    <slot name=\"exit\">${exitFullscreenIcon}</slot>\n  </slot>\n`;\n\nconst updateAriaLabel = (el) => {\n  const label = el.mediaIsFullscreen\n    ? verbs.EXIT_FULLSCREEN()\n    : verbs.ENTER_FULLSCREEN();\n  el.setAttribute('aria-label', label);\n};\n\n/**\n * @slot enter - An element shown when the media is not in fullscreen and pressing the button will trigger entering fullscreen.\n * @slot exit - An element shown when the media is in fullscreen and pressing the button will trigger exiting fullscreen.\n * @slot icon - An element for representing enter and exit states in a single icon\n *\n * @attr {(unavailable|unsupported)} mediafullscreenunavailable - (read-only) Set if fullscreen is unavailable.\n * @attr {boolean} mediaisfullscreen - (read-only) Present if the media is fullscreen.\n *\n * @cssproperty [--media-fullscreen-button-display = inline-flex] - `display` property of button.\n */\nclass MediaFullscreenButton extends MediaChromeButton {\n  static get observedAttributes() {\n    return [\n      ...super.observedAttributes,\n      MediaUIAttributes.MEDIA_IS_FULLSCREEN,\n      MediaUIAttributes.MEDIA_FULLSCREEN_UNAVAILABLE,\n    ];\n  }\n\n  constructor(options = {}) {\n    super({ slotTemplate, ...options });\n  }\n\n  connectedCallback() {\n    updateAriaLabel(this);\n    super.connectedCallback();\n  }\n\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    if (attrName === MediaUIAttributes.MEDIA_IS_FULLSCREEN) {\n      updateAriaLabel(this);\n    }\n    super.attributeChangedCallback(attrName, oldValue, newValue);\n  }\n\n  /**\n   * @type {string | undefined} Fullscreen unavailability state\n   */\n  get mediaFullscreenUnavailable() {\n    return getStringAttr(this, MediaUIAttributes.MEDIA_FULLSCREEN_UNAVAILABLE);\n  }\n\n  set mediaFullscreenUnavailable(value) {\n    setStringAttr(this, MediaUIAttributes.MEDIA_FULLSCREEN_UNAVAILABLE, value);\n  }\n\n  /**\n   * @type {boolean} Whether fullscreen is available\n   */\n  get mediaIsFullscreen() {\n    return getBooleanAttr(this, MediaUIAttributes.MEDIA_IS_FULLSCREEN);\n  }\n\n  set mediaIsFullscreen(value) {\n    setBooleanAttr(this, MediaUIAttributes.MEDIA_IS_FULLSCREEN, value);\n  }\n\n  handleClick() {\n    const eventName = this.mediaIsFullscreen\n      ? MediaUIEvents.MEDIA_EXIT_FULLSCREEN_REQUEST\n      : MediaUIEvents.MEDIA_ENTER_FULLSCREEN_REQUEST;\n    this.dispatchEvent(\n      new globalThis.CustomEvent(eventName, { composed: true, bubbles: true })\n    );\n  }\n}\n\nif (!globalThis.customElements.get('media-fullscreen-button')) {\n  globalThis.customElements.define(\n    'media-fullscreen-button',\n    MediaFullscreenButton\n  );\n}\n\nexport default MediaFullscreenButton;\n", "import { MediaChromeButton } from './media-chrome-button.js';\nimport { globalThis, document } from './utils/server-safe-globals.js';\nimport { MediaUIEvents, MediaUIAttributes } from './constants.js';\nimport { verbs } from './labels/labels.js';\nimport { getBooleanAttr, setBooleanAttr } from './utils/element-utils.js';\n\nconst { MEDIA_TIME_IS_LIVE, MEDIA_PAUSED } = MediaUIAttributes;\nconst { MEDIA_SEEK_TO_LIVE_REQUEST, MEDIA_PLAY_REQUEST } = MediaUIEvents;\n\nconst indicatorSVG =\n  '<svg viewBox=\"0 0 6 12\"><circle cx=\"3\" cy=\"6\" r=\"2\"></circle></svg>';\n\nconst slotTemplate = document.createElement('template');\nslotTemplate.innerHTML = /*html*/`\n  <style>\n\n  slot[name=indicator] > *,\n  :host ::slotted([slot=indicator]) {\n    ${/* Override styles for icon-only buttons */ ''}\n    min-width: auto;\n    fill: var(--media-live-button-icon-color, rgb(140, 140, 140));\n    color: var(--media-live-button-icon-color, rgb(140, 140, 140));\n  }\n\n  :host([${MEDIA_TIME_IS_LIVE}]:not([${MEDIA_PAUSED}])) slot[name=indicator] > *,\n  :host([${MEDIA_TIME_IS_LIVE}]:not([${MEDIA_PAUSED}])) ::slotted([slot=indicator]) {\n    fill: var(--media-live-button-indicator-color, rgb(255, 0, 0));\n    color: var(--media-live-button-indicator-color, rgb(255, 0, 0));\n  }\n\n  :host([${MEDIA_TIME_IS_LIVE}]:not([${MEDIA_PAUSED}])) {\n    cursor: not-allowed;\n  }\n\n  </style>\n\n  <slot name=\"indicator\">${indicatorSVG}</slot>\n  ${\n    /*\n    A new line between spacer and text creates inconsistent spacing\n    between slotted items and default slots.\n  */ ''\n  }\n  <slot name=\"spacer\">&nbsp;</slot><slot name=\"text\">LIVE</slot>\n`;\n\n/**\n * @slot indicator - The default is an SVG of a circle that changes to red when the video or audio is live. Can be replaced with your own SVG or font icon.\n * @slot spacer - A simple text space (&nbsp;) between the indicator and the text.\n * @slot text - The text content of the button, with a default of \u201CLIVE\u201D.\n *\n * @attr {boolean} mediapaused - (read-only) Present if the media is paused.\n * @attr {boolean} mediatimeislive - (read-only) Present if the media playback is live.\n *\n * @cssproperty [--media-live-button-display = inline-flex] - `display` property of button.\n * @cssproperty --media-live-button-icon-color - `fill` and `color` of not live button icon.\n * @cssproperty --media-live-button-indicator-color - `fill` and `color` of live button icon.\n */\nclass MediaLiveButton extends MediaChromeButton {\n  static get observedAttributes() {\n    return [...super.observedAttributes, MEDIA_PAUSED, MEDIA_TIME_IS_LIVE];\n  }\n\n  constructor(options = {}) {\n    super({ slotTemplate, ...options });\n    this.setAttribute('aria-label', verbs.SEEK_LIVE());\n  }\n\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    super.attributeChangedCallback(attrName, oldValue, newValue);\n\n    if (this.mediaPaused || !this.mediaTimeIsLive) {\n      this.setAttribute('aria-label', verbs.SEEK_LIVE());\n      this.removeAttribute('aria-disabled');\n    } else {\n      this.setAttribute('aria-label', verbs.PLAYING_LIVE());\n      this.setAttribute('aria-disabled', 'true');\n    }\n  }\n\n  /**\n   * @type {boolean} Is the media paused\n   */\n  get mediaPaused() {\n    return getBooleanAttr(this, MediaUIAttributes.MEDIA_PAUSED);\n  }\n\n  set mediaPaused(value) {\n    setBooleanAttr(this, MediaUIAttributes.MEDIA_PAUSED, value);\n  }\n\n  /**\n   * @type {boolean} Is the media playback currently live\n   */\n  get mediaTimeIsLive() {\n    return getBooleanAttr(this, MediaUIAttributes.MEDIA_TIME_IS_LIVE);\n  }\n\n  set mediaTimeIsLive(value) {\n    setBooleanAttr(this, MediaUIAttributes.MEDIA_TIME_IS_LIVE, value);\n  }\n\n  handleClick() {\n    // If we're live and not paused, don't allow seek to live\n    if (!this.mediaPaused && this.mediaTimeIsLive) return;\n\n    this.dispatchEvent(\n      new globalThis.CustomEvent(MEDIA_SEEK_TO_LIVE_REQUEST, {\n        composed: true,\n        bubbles: true,\n      })\n    );\n\n    // If we're paused, also automatically play\n    if (this.hasAttribute(MEDIA_PAUSED)) {\n      this.dispatchEvent(\n        new globalThis.CustomEvent(MEDIA_PLAY_REQUEST, {\n          composed: true,\n          bubbles: true,\n        })\n      );\n    }\n  }\n}\n\nif (!globalThis.customElements.get('media-live-button')) {\n  globalThis.customElements.define('media-live-button', MediaLiveButton);\n}\n\nexport default MediaLiveButton;\n", "import { MediaChromeButton } from './media-chrome-button.js';\nimport { globalThis, document } from './utils/server-safe-globals.js';\nimport { MediaUIEvents, MediaUIAttributes } from './constants.js';\nimport { verbs } from './labels/labels.js';\nimport { getStringAttr, setStringAttr } from './utils/element-utils.js';\n\nconst { MEDIA_VOLUME_LEVEL } = MediaUIAttributes;\n\nconst offIcon = `<svg aria-hidden=\"true\" viewBox=\"0 0 24 24\">\n  <path d=\"M16.5 12A4.5 4.5 0 0 0 14 8v2.18l2.45 2.45a4.22 4.22 0 0 0 .05-.63Zm2.5 0a6.84 6.84 0 0 1-.54 2.64L20 16.15A8.8 8.8 0 0 0 21 12a9 9 0 0 0-7-8.77v2.06A7 7 0 0 1 19 12ZM4.27 3 3 4.27 7.73 9H3v6h4l5 5v-6.73l4.25 4.25A6.92 6.92 0 0 1 14 18.7v2.06A9 9 0 0 0 17.69 19l2 2.05L21 19.73l-9-9L4.27 3ZM12 4 9.91 6.09 12 8.18V4Z\"/>\n</svg>`;\n\nconst lowIcon = `<svg aria-hidden=\"true\" viewBox=\"0 0 24 24\">\n  <path d=\"M3 9v6h4l5 5V4L7 9H3Zm13.5 3A4.5 4.5 0 0 0 14 8v8a4.47 4.47 0 0 0 2.5-4Z\"/>\n</svg>`;\n\nconst highIcon = `<svg aria-hidden=\"true\" viewBox=\"0 0 24 24\">\n  <path d=\"M3 9v6h4l5 5V4L7 9H3Zm13.5 3A4.5 4.5 0 0 0 14 8v8a4.47 4.47 0 0 0 2.5-4ZM14 3.23v2.06a7 7 0 0 1 0 13.42v2.06a9 9 0 0 0 0-17.54Z\"/>\n</svg>`;\n\nconst slotTemplate = document.createElement('template');\nslotTemplate.innerHTML = /*html*/`\n  <style>\n  ${/* Default to High slot/icon. */''}\n  :host(:not([${MEDIA_VOLUME_LEVEL}])) slot:not([name=high]):not([name=icon]), \n  :host([${MEDIA_VOLUME_LEVEL}=high]) slot:not([name=high]):not([name=icon]) {\n    display: none !important;\n  }\n\n  :host([${MEDIA_VOLUME_LEVEL}=off]) slot:not([name=off]):not([name=icon]) {\n    display: none !important;\n  }\n\n  :host([${MEDIA_VOLUME_LEVEL}=low]) slot:not([name=low]):not([name=icon]) {\n    display: none !important;\n  }\n\n  :host([${MEDIA_VOLUME_LEVEL}=medium]) slot:not([name=medium]):not([name=icon]) {\n    display: none !important;\n  }\n  </style>\n\n  <slot name=\"icon\">\n    <slot name=\"off\">${offIcon}</slot>\n    <slot name=\"low\">${lowIcon}</slot>\n    <slot name=\"medium\">${lowIcon}</slot>\n    <slot name=\"high\">${highIcon}</slot>\n  </slot>\n`;\n\nconst updateAriaLabel = (el) => {\n  const muted = el.mediaVolumeLevel === 'off';\n  const label = muted ? verbs.UNMUTE() : verbs.MUTE();\n  el.setAttribute('aria-label', label);\n};\n\n/**\n * @slot off - An element shown when the media is muted or the media\u2019s volume is 0.\n * @slot low - An element shown when the media\u2019s volume is \u201Clow\u201D (less than 50% / 0.5).\n * @slot medium - An element shown when the media\u2019s volume is \u201Cmedium\u201D (between 50% / 0.5 and 75% / 0.75).\n * @slot high - An element shown when the media\u2019s volume is \u201Chigh\u201D (75% / 0.75 or greater).\n * @slot icon - An element for representing all states in a single icon\n *\n * @attr {string} mediavolumelevel - (read-only) Set to the media volume level.\n *\n * @cssproperty [--media-mute-button-display = inline-flex] - `display` property of button.\n */\nclass MediaMuteButton extends MediaChromeButton {\n  static get observedAttributes() {\n    return [...super.observedAttributes, MediaUIAttributes.MEDIA_VOLUME_LEVEL];\n  }\n\n  constructor(options = {}) {\n    super({ slotTemplate, ...options });\n  }\n\n  connectedCallback() {\n    updateAriaLabel(this);\n    super.connectedCallback();\n  }\n\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    if (attrName === MediaUIAttributes.MEDIA_VOLUME_LEVEL) {\n      updateAriaLabel(this);\n    }\n    super.attributeChangedCallback(attrName, oldValue, newValue);\n  }\n\n  /**\n   * @type {string | undefined}\n   */\n  get mediaVolumeLevel() {\n    return getStringAttr(this, MediaUIAttributes.MEDIA_VOLUME_LEVEL);\n  }\n\n  set mediaVolumeLevel(value) {\n    setStringAttr(this, MediaUIAttributes.MEDIA_VOLUME_LEVEL, value);\n  }\n\n  handleClick() {\n    const eventName =\n      this.mediaVolumeLevel === 'off'\n        ? MediaUIEvents.MEDIA_UNMUTE_REQUEST\n        : MediaUIEvents.MEDIA_MUTE_REQUEST;\n    this.dispatchEvent(\n      new globalThis.CustomEvent(eventName, { composed: true, bubbles: true })\n    );\n  }\n}\n\nif (!globalThis.customElements.get('media-mute-button')) {\n  globalThis.customElements.define('media-mute-button', MediaMuteButton);\n}\n\nexport default MediaMuteButton;\n", "import { MediaChromeButton } from './media-chrome-button.js';\nimport { globalThis, document } from './utils/server-safe-globals.js';\nimport { MediaUIEvents, MediaUIAttributes } from './constants.js';\nimport { verbs } from './labels/labels.js';\nimport {\n  getBooleanAttr,\n  getStringAttr,\n  setBooleanAttr,\n  setStringAttr,\n} from './utils/element-utils.js';\n\nconst pipIcon = `<svg aria-hidden=\"true\" viewBox=\"0 0 28 24\">\n  <path d=\"M24 3H4a1 1 0 0 0-1 1v16a1 1 0 0 0 1 1h20a1 1 0 0 0 1-1V4a1 1 0 0 0-1-1Zm-1 16H5V5h18v14Zm-3-8h-7v5h7v-5Z\"/>\n</svg>`;\n\nconst slotTemplate = document.createElement('template');\nslotTemplate.innerHTML = /*html*/`\n  <style>\n  :host([${MediaUIAttributes.MEDIA_IS_PIP}]) slot:not([name=exit]):not([name=icon]) {\n    display: none !important;\n  }\n\n  ${/* Double negative, but safer if display doesn't equal 'block' */ ''}\n  :host(:not([${MediaUIAttributes.MEDIA_IS_PIP}])) slot:not([name=enter]):not([name=icon]) {\n    display: none !important;\n  }\n  </style>\n\n  <slot name=\"icon\">\n    <slot name=\"enter\">${pipIcon}</slot>\n    <slot name=\"exit\">${pipIcon}</slot>\n  </slot>\n`;\n\nconst updateAriaLabel = (el) => {\n  const label = el.mediaIsPip ? verbs.EXIT_PIP() : verbs.ENTER_PIP();\n  el.setAttribute('aria-label', label);\n};\n\n/**\n * @slot enter - An element shown when the media is not in PIP mode and pressing the button will trigger entering PIP mode.\n * @slot exit - An element shown when the media is in PIP and pressing the button will trigger exiting PIP mode.\n * @slot icon - An element for representing enter and exit states in a single icon\n *\n * @attr {(unavailable|unsupported)} mediapipunavailable - (read-only) Set if picture-in-picture is unavailable.\n * @attr {boolean} mediaispip - (read-only) Present if the media is playing in picture-in-picture.\n *\n * @cssproperty [--media-pip-button-display = inline-flex] - `display` property of button.\n */\nclass MediaPipButton extends MediaChromeButton {\n  static get observedAttributes() {\n    return [\n      ...super.observedAttributes,\n      MediaUIAttributes.MEDIA_IS_PIP,\n      MediaUIAttributes.MEDIA_PIP_UNAVAILABLE,\n    ];\n  }\n\n  constructor(options = {}) {\n    super({ slotTemplate, ...options });\n  }\n\n  connectedCallback() {\n    updateAriaLabel(this);\n    super.connectedCallback();\n  }\n\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    if (attrName === MediaUIAttributes.MEDIA_IS_PIP) {\n      updateAriaLabel(this);\n    }\n    super.attributeChangedCallback(attrName, oldValue, newValue);\n  }\n\n  /**\n   * @type {string | undefined} Pip unavailability state\n   */\n  get mediaPipUnavailable() {\n    return getStringAttr(this, MediaUIAttributes.MEDIA_PIP_UNAVAILABLE);\n  }\n\n  set mediaPipUnavailable(value) {\n    setStringAttr(this, MediaUIAttributes.MEDIA_PIP_UNAVAILABLE, value);\n  }\n\n  /**\n   * @type {boolean} Is the media currently playing picture-in-picture\n   */\n  get mediaIsPip() {\n    return getBooleanAttr(this, MediaUIAttributes.MEDIA_IS_PIP);\n  }\n\n  set mediaIsPip(value) {\n    setBooleanAttr(this, MediaUIAttributes.MEDIA_IS_PIP, value);\n  }\n\n  handleClick() {\n    const eventName = this.mediaIsPip\n      ? MediaUIEvents.MEDIA_EXIT_PIP_REQUEST\n      : MediaUIEvents.MEDIA_ENTER_PIP_REQUEST;\n    this.dispatchEvent(\n      new globalThis.CustomEvent(eventName, { composed: true, bubbles: true })\n    );\n  }\n}\n\nif (!globalThis.customElements.get('media-pip-button')) {\n  globalThis.customElements.define('media-pip-button', MediaPipButton);\n}\n\nexport default MediaPipButton;\n", "import { MediaChromeButton } from './media-chrome-button.js';\nimport { globalThis, document } from './utils/server-safe-globals.js';\nimport { MediaUIEvents, MediaUIAttributes } from './constants.js';\nimport { verbs } from './labels/labels.js';\nimport { getBooleanAttr, setBooleanAttr } from './utils/element-utils.js';\n\nconst playIcon = `<svg aria-hidden=\"true\" viewBox=\"0 0 24 24\">\n  <path d=\"m6 21 15-9L6 3v18Z\"/>\n</svg>`;\n\nconst pauseIcon = `<svg aria-hidden=\"true\" viewBox=\"0 0 24 24\">\n  <path d=\"M6 20h4V4H6v16Zm8-16v16h4V4h-4Z\"/>\n</svg>`;\n\nconst slotTemplate = document.createElement('template');\nslotTemplate.innerHTML = /*html*/`\n  <style>\n  :host([${MediaUIAttributes.MEDIA_PAUSED}]) slot[name=pause] {\n    display: none !important;\n  }\n\n  :host(:not([${MediaUIAttributes.MEDIA_PAUSED}])) slot[name=play] {\n    display: none !important;\n  }\n  </style>\n\n  <slot name=\"icon\">\n    <slot name=\"play\">${playIcon}</slot>\n    <slot name=\"pause\">${pauseIcon}</slot>\n  </slot>\n`;\n\nconst updateAriaLabel = (el) => {\n  const label = el.mediaPaused ? verbs.PLAY() : verbs.PAUSE();\n  el.setAttribute('aria-label', label);\n};\n\n/**\n * @slot play - An element shown when the media is paused and pressing the button will start media playback.\n * @slot pause - An element shown when the media is playing and pressing the button will pause media playback.\n * @slot icon - An element for representing play and pause states in a single icon\n *\n * @attr {boolean} mediapaused - (read-only) Present if the media is paused.\n *\n * @cssproperty [--media-play-button-display = inline-flex] - `display` property of button.\n */\nclass MediaPlayButton extends MediaChromeButton {\n  static get observedAttributes() {\n    return [\n      ...super.observedAttributes,\n      MediaUIAttributes.MEDIA_PAUSED,\n      MediaUIAttributes.MEDIA_ENDED,\n    ];\n  }\n\n  constructor(options = {}) {\n    super({ slotTemplate, ...options });\n  }\n\n  connectedCallback() {\n    updateAriaLabel(this);\n    super.connectedCallback();\n  }\n\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    if (attrName === MediaUIAttributes.MEDIA_PAUSED) {\n      updateAriaLabel(this);\n    }\n    super.attributeChangedCallback(attrName, oldValue, newValue);\n  }\n\n  /**\n   * @type {boolean} Is the media paused\n   */\n  get mediaPaused() {\n    return getBooleanAttr(this, MediaUIAttributes.MEDIA_PAUSED);\n  }\n\n  set mediaPaused(value) {\n    setBooleanAttr(this, MediaUIAttributes.MEDIA_PAUSED, value);\n  }\n\n  handleClick() {\n    const eventName = this.mediaPaused\n      ? MediaUIEvents.MEDIA_PLAY_REQUEST\n      : MediaUIEvents.MEDIA_PAUSE_REQUEST;\n    this.dispatchEvent(\n      new globalThis.CustomEvent(eventName, { composed: true, bubbles: true })\n    );\n  }\n}\n\nif (!globalThis.customElements.get('media-play-button')) {\n  globalThis.customElements.define('media-play-button', MediaPlayButton);\n}\n\nexport default MediaPlayButton;\n", "import { MediaChromeButton } from './media-chrome-button.js';\nimport { globalThis, document } from './utils/server-safe-globals.js';\nimport { MediaUIEvents, MediaUIAttributes } from './constants.js';\nimport { nouns } from './labels/labels.js';\nimport { getNumericAttr, setNumericAttr } from './utils/element-utils.js';\nimport { AttributeTokenList } from './utils/attribute-token-list.js';\n\nexport const Attributes = {\n  RATES: 'rates',\n};\n\nexport const DEFAULT_RATES = [1, 1.25, 1.5, 1.75, 2];\nexport const DEFAULT_RATE = 1;\n\nconst slotTemplate = document.createElement('template');\nslotTemplate.innerHTML = `\n  <span id=\"container\"></span>\n`;\n\n/**\n * @attr {string} rates - Set custom playback rates for the user to choose from.\n * @attr {string} mediaplaybackrate - (read-only) Set to the media playback rate.\n *\n * @cssproperty [--media-playback-rate-button-display = inline-flex] - `display` property of button.\n */\nclass MediaPlaybackRateButton extends MediaChromeButton {\n  static get observedAttributes() {\n    return [\n      ...super.observedAttributes,\n      MediaUIAttributes.MEDIA_PLAYBACK_RATE,\n      Attributes.RATES,\n    ];\n  }\n\n  #rates = new AttributeTokenList(this, Attributes.RATES, { defaultValue: DEFAULT_RATES });\n\n  constructor(options = {}) {\n    super({ slotTemplate, ...options });\n    this.container = this.shadowRoot.querySelector('#container');\n    this.container.innerHTML = `${DEFAULT_RATE}x`;\n  }\n\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    if (attrName === Attributes.RATES) {\n      this.#rates.value = newValue;\n    }\n    if (attrName === MediaUIAttributes.MEDIA_PLAYBACK_RATE) {\n      const newPlaybackRate = newValue ? +newValue : Number.NaN;\n      const playbackRate = !Number.isNaN(newPlaybackRate)\n        ? newPlaybackRate\n        : DEFAULT_RATE;\n      this.container.innerHTML = `${playbackRate}x`;\n      this.setAttribute('aria-label', nouns.PLAYBACK_RATE({ playbackRate }));\n      return;\n    }\n    super.attributeChangedCallback(attrName, oldValue, newValue);\n  }\n\n  /**\n   * @type { AttributeTokenList | Array<number> | undefined} Will return a DOMTokenList.\n   * Setting a value will accept an array of numbers.\n   */\n  get rates() {\n    return this.#rates;\n  }\n\n  set rates(value) {\n    if (!value) {\n      this.#rates.value = '';\n    } else if (Array.isArray(value)) {\n      this.#rates.value = value.join(' ');\n    }\n  }\n\n  /**\n   * @type {number} The current playback rate\n   */\n  get mediaPlaybackRate() {\n    return getNumericAttr(this, MediaUIAttributes.MEDIA_PLAYBACK_RATE, DEFAULT_RATE);\n  }\n\n  set mediaPlaybackRate(value) {\n    setNumericAttr(this, MediaUIAttributes.MEDIA_PLAYBACK_RATE, value);\n  }\n\n  handleClick() {\n    const availableRates = Array.from(this.rates.values(), str => +str).sort();\n    const detail =\n      availableRates.find((r) => r > this.mediaPlaybackRate) ??\n      availableRates[0] ??\n      DEFAULT_RATE;\n    const evt = new globalThis.CustomEvent(\n      MediaUIEvents.MEDIA_PLAYBACK_RATE_REQUEST,\n      { composed: true, bubbles: true, detail }\n    );\n    this.dispatchEvent(evt);\n  }\n}\n\nif (!globalThis.customElements.get('media-playback-rate-button')) {\n  globalThis.customElements.define(\n    'media-playback-rate-button',\n    MediaPlaybackRateButton\n  );\n}\n\nexport default MediaPlaybackRateButton;\n", "import { globalThis, document } from './utils/server-safe-globals.js';\nimport { getStringAttr, setStringAttr } from './utils/element-utils.js';\n\nexport const Attributes = {\n  PLACEHOLDER_SRC: 'placeholdersrc',\n  SRC: 'src',\n};\n\nconst template = document.createElement('template');\n\ntemplate.innerHTML = /*html*/`\n  <style>\n    :host {\n      pointer-events: none;\n      display: var(--media-poster-image-display, inline-block);\n      box-sizing: border-box;\n    }\n\n    img {\n      max-width: 100%;\n      max-height: 100%;\n      min-width: 100%;\n      min-height: 100%;\n      background-repeat: no-repeat;\n      background-position: var(--media-poster-image-background-position, var(--media-object-position, center));\n      background-size: var(--media-poster-image-background-size, var(--media-object-fit, contain));\n      object-fit: var(--media-object-fit, contain);\n      object-position: var(--media-object-position, center);\n    }\n  </style>\n\n  <img aria-hidden=\"true\" id=\"image\"/>\n`;\n\nconst unsetBackgroundImage = (el) => {\n  el.style.removeProperty('background-image');\n};\nconst setBackgroundImage = (el, image) => {\n  el.style['background-image'] = `url('${image}')`;\n};\n\n/**\n * @attr {string} placeholdersrc - Placeholder image source URL, often a blurhash data URL.\n * @attr {string} src - Poster image source URL.\n *\n * @cssproperty --media-poster-image-display - `display` property of poster image.\n * @cssproperty --media-poster-image-background-position - `background-position` of poster image.\n * @cssproperty --media-poster-image-background-size - `background-size` of poster image.\n * @cssproperty --media-object-fit - `object-fit` of poster image.\n * @cssproperty --media-object-position - `object-position` of poster image.\n */\nclass MediaPosterImage extends globalThis.HTMLElement {\n  static get observedAttributes() {\n    return [Attributes.PLACEHOLDER_SRC, Attributes.SRC];\n  }\n\n  constructor() {\n    super();\n\n    if (!this.shadowRoot) {\n      // Set up the Shadow DOM if not using Declarative Shadow DOM.\n      this.attachShadow({ mode: 'open' });\n      this.shadowRoot.appendChild(template.content.cloneNode(true));\n    }\n\n    this.image = this.shadowRoot.querySelector('#image');\n  }\n\n  attributeChangedCallback(attrName, _oldValue, newValue) {\n    if (attrName === Attributes.SRC) {\n      if (newValue == null) {\n        this.image.removeAttribute(Attributes.SRC);\n      } else {\n        this.image.setAttribute(Attributes.SRC, newValue);\n      }\n    }\n\n    if (attrName === Attributes.PLACEHOLDER_SRC) {\n      if (newValue == null) {\n        unsetBackgroundImage(this.image);\n      } else {\n        setBackgroundImage(this.image, newValue);\n      }\n    }\n  }\n\n  /**\n   * @type {string | undefined}\n   */\n  get placeholderSrc() {\n    return getStringAttr(this, Attributes.PLACEHOLDER_SRC);\n  }\n\n  set placeholderSrc(value) {\n    setStringAttr(this, Attributes.SRC, value);\n  }\n\n  /**\n   * @type {string | undefined}\n   */\n  get src() {\n    return getStringAttr(this, Attributes.SRC);\n  }\n\n  set src(value) {\n    setStringAttr(this, Attributes.SRC, value);\n  }\n}\n\nif (!globalThis.customElements.get('media-poster-image')) {\n  globalThis.customElements.define('media-poster-image', MediaPosterImage);\n}\n\nexport default MediaPosterImage;\n", "import { MediaChromeButton } from './media-chrome-button.js';\nimport { globalThis, document } from './utils/server-safe-globals.js';\nimport { MediaUIEvents, MediaUIAttributes } from './constants.js';\nimport { updateAriaLabel, updateSeekIconValue } from './utils/seek.js';\nimport { getNumericAttr, setNumericAttr } from './utils/element-utils.js';\n\nexport const Attributes = {\n  SEEK_OFFSET: 'seekoffset',\n};\n\nconst DEFAULT_SEEK_OFFSET = 30;\n\nconst backwardIcon = `<svg aria-hidden=\"true\" viewBox=\"0 0 20 24\"><defs><style>.text{font-size:8px;font-family:Arial-BoldMT, Arial;font-weight:700;}</style></defs><text class=\"text value\" transform=\"translate(2.18 19.87)\">${DEFAULT_SEEK_OFFSET}</text><path d=\"M10 6V3L4.37 7 10 10.94V8a5.54 5.54 0 0 1 1.9 10.48v2.12A7.5 7.5 0 0 0 10 6Z\"/></svg>`;\n\nconst slotTemplate = document.createElement('template');\nslotTemplate.innerHTML = `\n  <slot name=\"icon\">${backwardIcon}</slot>\n`;\n\nconst DEFAULT_TIME = 0;\n\n/**\n * @slot icon - The element shown for the seek backward button\u2019s display.\n *\n * @attr {string} seekoffset - Adjusts how much time (in seconds) the playhead should seek backward.\n * @attr {string} mediacurrenttime - (read-only) Set to the current media time.\n *\n * @cssproperty [--media-seek-backward-button-display = inline-flex] - `display` property of button.\n */\nclass MediaSeekBackwardButton extends MediaChromeButton {\n  static get observedAttributes() {\n    return [\n      ...super.observedAttributes,\n      MediaUIAttributes.MEDIA_CURRENT_TIME,\n      Attributes.SEEK_OFFSET,\n    ];\n  }\n\n  constructor(options = {}) {\n    super({ slotTemplate, ...options });\n  }\n\n  connectedCallback() {\n    updateAriaLabel(this);\n    updateSeekIconValue(this);\n    super.connectedCallback();\n  }\n\n  attributeChangedCallback(attrName, _oldValue, newValue) {\n    if (attrName === Attributes.SEEK_OFFSET) {\n      updateSeekIconValue(this);\n      updateAriaLabel(this);\n    }\n\n    super.attributeChangedCallback(attrName, _oldValue, newValue);\n  }\n\n  // Own props\n\n  /**\n   * @type {number | undefined} Seek amount in seconds\n   */\n  get seekOffset() {\n    return getNumericAttr(this, Attributes.SEEK_OFFSET, DEFAULT_SEEK_OFFSET);\n  }\n\n  set seekOffset(value) {\n    setNumericAttr(this, Attributes.SEEK_OFFSET, value);\n  }\n\n  // Props derived from Media UI Attributes\n\n  /**\n   * The current time\n   * @type {number | undefined} In seconds\n   */\n  get mediaCurrentTime() {\n    return getNumericAttr(this, MediaUIAttributes.MEDIA_CURRENT_TIME, DEFAULT_TIME);\n  }\n\n  set mediaCurrentTime(time) {\n    setNumericAttr(this, MediaUIAttributes.MEDIA_CURRENT_TIME, time);\n  }\n\n  handleClick() {\n    const detail = Math.max(this.mediaCurrentTime - this.seekOffset, 0);\n    const evt = new globalThis.CustomEvent(MediaUIEvents.MEDIA_SEEK_REQUEST, {\n      composed: true,\n      bubbles: true,\n      detail,\n    });\n    this.dispatchEvent(evt);\n  }\n}\n\nif (!globalThis.customElements.get('media-seek-backward-button')) {\n  globalThis.customElements.define(\n    'media-seek-backward-button',\n    MediaSeekBackwardButton\n  );\n}\n\nexport default MediaSeekBackwardButton;\n", "import { MediaTextDisplay } from './media-text-display.js';\nimport { globalThis } from './utils/server-safe-globals.js';\nimport { formatTime } from './utils/time.js';\nimport { MediaUIAttributes } from './constants.js';\nimport { getNumericAttr, setNumericAttr } from './utils/element-utils.js';\n// Todo: Use data locals: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleTimeString\n\n/**\n * @attr {string} mediapreviewtime - (read-only) Set to the timeline preview time.\n *\n * @cssproperty [--media-preview-time-display-display = inline-flex] - `display` property of display.\n */\nclass MediaPreviewTimeDisplay extends MediaTextDisplay {\n  /** @type {HTMLSlotElement} */\n  #slot;\n\n  static get observedAttributes() {\n    return [...super.observedAttributes, MediaUIAttributes.MEDIA_PREVIEW_TIME];\n  }\n\n  constructor() {\n    super();\n    this.#slot = this.shadowRoot.querySelector('slot');\n    this.#slot.textContent = formatTime(0);\n  }\n\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    if (attrName === MediaUIAttributes.MEDIA_PREVIEW_TIME && newValue != null) {\n      this.#slot.textContent = formatTime(newValue);\n    }\n    super.attributeChangedCallback(attrName, oldValue, newValue);\n  }\n\n  /**\n   * @type {number | undefined} Timeline preview time\n   */\n  get mediaPreviewTime() {\n    return getNumericAttr(this, MediaUIAttributes.MEDIA_PREVIEW_TIME);\n  }\n\n  set mediaPreviewTime(value) {\n    setNumericAttr(this, MediaUIAttributes.MEDIA_PREVIEW_TIME, value);\n  }\n}\n\nif (!globalThis.customElements.get('media-preview-time-display')) {\n  globalThis.customElements.define(\n    'media-preview-time-display',\n    MediaPreviewTimeDisplay\n  );\n}\n\nexport default MediaPreviewTimeDisplay;\n", "import { globalThis, document } from './utils/server-safe-globals.js';\nimport {\n  MediaUIAttributes,\n  MediaStateReceiverAttributes,\n} from './constants.js';\nimport {\n  getOrInsertCSSRule,\n  getStringAttr,\n  setStringAttr,\n} from './utils/element-utils.js';\n\nconst template = document.createElement('template');\ntemplate.innerHTML = /*html*/`\n  <style>\n    :host {\n      box-sizing: border-box;\n      display: var(--media-control-display, var(--media-preview-thumbnail-display, inline-block));\n      overflow: hidden;\n    }\n\n    img {\n      display: none;\n      position: relative;\n    }\n  </style>\n  <img crossorigin loading=\"eager\" decoding=\"async\">\n`;\n\n/**\n * @extends {HTMLElement}\n *\n * @attr {string} mediacontroller - The element `id` of the media controller to connect to (if not nested within).\n * @attr {string} mediapreviewimage - (read-only) Set to the timeline preview image URL.\n * @attr {string} mediapreviewcoords - (read-only) Set to the active preview image coordinates.\n *\n * @cssproperty [--media-preview-thumbnail-display = inline-block] - `display` property of display.\n * @cssproperty [--media-control-display = inline-block] - `display` property of control.\n */\nclass MediaPreviewThumbnail extends globalThis.HTMLElement {\n  #mediaController;\n\n  static get observedAttributes() {\n    return [\n      MediaStateReceiverAttributes.MEDIA_CONTROLLER,\n      MediaUIAttributes.MEDIA_PREVIEW_IMAGE,\n      MediaUIAttributes.MEDIA_PREVIEW_COORDS,\n    ];\n  }\n\n  constructor() {\n    super();\n\n    if (!this.shadowRoot) {\n      // Set up the Shadow DOM if not using Declarative Shadow DOM.\n      this.attachShadow({ mode: 'open' });\n      this.shadowRoot.appendChild(template.content.cloneNode(true));\n    }\n  }\n\n  connectedCallback() {\n    const mediaControllerId = this.getAttribute(\n      MediaStateReceiverAttributes.MEDIA_CONTROLLER\n    );\n    if (mediaControllerId) {\n      this.#mediaController =\n        // @ts-ignore\n        this.getRootNode()?.getElementById(mediaControllerId);\n      this.#mediaController?.associateElement?.(this);\n    }\n  }\n\n  disconnectedCallback() {\n    // Use cached mediaController, getRootNode() doesn't work if disconnected.\n    this.#mediaController?.unassociateElement?.(this);\n    this.#mediaController = null;\n  }\n\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    if (\n      [\n        MediaUIAttributes.MEDIA_PREVIEW_IMAGE,\n        MediaUIAttributes.MEDIA_PREVIEW_COORDS,\n      ].includes(attrName)\n    ) {\n      this.update();\n    }\n    if (attrName === MediaStateReceiverAttributes.MEDIA_CONTROLLER) {\n      if (oldValue) {\n        this.#mediaController?.unassociateElement?.(this);\n        this.#mediaController = null;\n      }\n      if (newValue) {\n        // @ts-ignore\n        this.#mediaController = this.getRootNode()?.getElementById(newValue);\n        this.#mediaController?.associateElement?.(this);\n      }\n    }\n  }\n\n  /**\n   * @type {string | undefined} The url of the preview image\n   */\n  get mediaPreviewImage() {\n    return getStringAttr(this, MediaUIAttributes.MEDIA_PREVIEW_IMAGE);\n  }\n\n  set mediaPreviewImage(value) {\n    setStringAttr(this, MediaUIAttributes.MEDIA_PREVIEW_IMAGE, value);\n  }\n\n  /**\n   * @type {Array<number> | undefined} Fixed length array [x, y, width, height] or undefined\n   */\n  get mediaPreviewCoords() {\n    const attrVal = this.getAttribute(MediaUIAttributes.MEDIA_PREVIEW_COORDS);\n\n    if (!attrVal) return undefined;\n\n    return attrVal.split(/\\s+/).map((coord) => +coord);\n  }\n\n  set mediaPreviewCoords(value) {\n    if (!value) {\n      this.removeAttribute(MediaUIAttributes.MEDIA_PREVIEW_COORDS);\n      return;\n    }\n\n    this.setAttribute(MediaUIAttributes.MEDIA_PREVIEW_COORDS, value.join(' '));\n  }\n\n  update() {\n    const coords = this.mediaPreviewCoords;\n    const previewImage = this.mediaPreviewImage;\n\n    if (!(coords && previewImage)) return;\n\n    const [x, y, w, h] = coords;\n    const src = previewImage.split('#')[0];\n\n    const computedStyle = getComputedStyle(this);\n    const { maxWidth, maxHeight, minWidth, minHeight } = computedStyle;\n    const maxRatio = Math.min(parseInt(maxWidth) / w, parseInt(maxHeight) / h);\n    const minRatio = Math.max(parseInt(minWidth) / w, parseInt(minHeight) / h);\n\n    // maxRatio scales down and takes priority, minRatio scales up.\n    const isScalingDown = maxRatio < 1;\n    const scale = isScalingDown ? maxRatio : minRatio > 1 ? minRatio : 1;\n\n    const { style } = getOrInsertCSSRule(this.shadowRoot, ':host');\n    const imgStyle = getOrInsertCSSRule(this.shadowRoot, 'img').style;\n    const img = this.shadowRoot.querySelector('img');\n\n    // Revert one set of extremum to its initial value on a known scale direction.\n    const extremum = isScalingDown ? 'min' : 'max';\n    style.setProperty(`${extremum}-width`, 'initial', 'important');\n    style.setProperty(`${extremum}-height`, 'initial', 'important');\n    style.width = `${w * scale}px`;\n    style.height = `${h * scale}px`;\n\n    const resize = () => {\n      imgStyle.width = `${this.imgWidth * scale}px`;\n      imgStyle.height = `${this.imgHeight * scale}px`;\n      imgStyle.display = 'block';\n    };\n\n    if (img.src !== src) {\n      img.onload = () => {\n        this.imgWidth = img.naturalWidth;\n        this.imgHeight = img.naturalHeight;\n        resize();\n      };\n      img.src = src;\n      resize();\n    }\n\n    resize();\n    imgStyle.transform = `translate(-${x * scale}px, -${y * scale}px)`;\n  }\n}\n\nif (!globalThis.customElements.get('media-preview-thumbnail')) {\n  globalThis.customElements.define(\n    'media-preview-thumbnail',\n    MediaPreviewThumbnail\n  );\n}\n\nexport default MediaPreviewThumbnail;\n", "import { MediaChromeRange } from './media-chrome-range.js';\nimport { globalThis, document } from './utils/server-safe-globals.js';\nimport { MediaUIEvents, MediaUIAttributes } from './constants.js';\nimport { nouns } from './labels/labels.js';\nimport { formatAsTimePhrase } from './utils/time.js';\nimport {\n  getOrInsertCSSRule,\n  closestComposedNode,\n  getBooleanAttr,\n  setBooleanAttr,\n  getNumericAttr,\n  setNumericAttr,\n  getStringAttr,\n  setStringAttr,\n} from './utils/element-utils.js';\n\nconst DEFAULT_MISSING_TIME_PHRASE = 'video not loaded, unknown time.';\n\nconst updateAriaValueText = (el) => {\n  const range = el.range;\n  const currentTimePhrase = formatAsTimePhrase(+range.value);\n  const totalTimePhrase = formatAsTimePhrase(+range.max);\n  const fullPhrase = !(currentTimePhrase && totalTimePhrase)\n    ? DEFAULT_MISSING_TIME_PHRASE\n    : `${currentTimePhrase} of ${totalTimePhrase}`;\n  range.setAttribute('aria-valuetext', fullPhrase);\n};\n\nconst template = document.createElement('template');\ntemplate.innerHTML = /*html*/`\n  <style>\n    :host {\n      --media-preview-border-radius: 3px;\n      --media-box-padding-left: 10px;\n      --media-box-padding-right: 10px;\n    }\n\n    #preview-rail,\n    #current-rail {\n      ${/* 1% of parent element and upscale by 100 in the translateX() */ ''}\n      width: 1%;\n      position: absolute;\n      left: 0;\n      bottom: 100%;\n      pointer-events: none;\n    }\n\n    [part~=\"box\"] {\n      ${/* absolute position is needed here so the box doesn't overflow the bounds */''}\n      position: absolute;\n      bottom: 100%;\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      transform: translateX(-50%);\n    }\n\n    [part~=\"preview-box\"] {\n      transition-property: var(--media-preview-transition-property, visibility, opacity);\n      transition-duration: var(--media-preview-transition-duration-out, .25s);\n      transition-delay: var(--media-preview-transition-delay-out, 0s);\n      visibility: hidden;\n      opacity: 0;\n    }\n\n    :host([${MediaUIAttributes.MEDIA_PREVIEW_IMAGE}]:hover) [part~=\"preview-box\"],\n    :host([${MediaUIAttributes.MEDIA_PREVIEW_TIME}]:hover) [part~=\"preview-box\"] {\n      transition-duration: var(--media-preview-transition-duration-in, .5s);\n      transition-delay: var(--media-preview-transition-delay-in, .25s);\n      visibility: visible;\n      opacity: 1;\n    }\n\n    media-preview-thumbnail,\n    ::slotted(media-preview-thumbnail) {\n      visibility: hidden;\n      ${/* delay changing these CSS props until the preview box transition is ended */''}\n      transition: visibility 0s .25s;\n      transition-delay: calc(var(--media-preview-transition-delay-out, 0s) + var(--media-preview-transition-duration-out, .25s));\n      background: var(--media-preview-thumbnail-background, var(--media-preview-background, var(--media-control-background, var(--media-secondary-color, rgb(20 20 30 / .7)))));\n      box-shadow: var(--media-preview-thumbnail-box-shadow, 0 0 4px rgb(0 0 0 / .2));\n      max-width: var(--media-preview-thumbnail-max-width, 180px);\n      max-height: var(--media-preview-thumbnail-max-height, 160px);\n      min-width: var(--media-preview-thumbnail-min-width, 120px);\n      min-height: var(--media-preview-thumbnail-min-height, 80px);\n      border: var(--media-preview-thumbnail-border);\n      border-radius: var(--media-preview-thumbnail-border-radius,\n        var(--media-preview-border-radius) var(--media-preview-border-radius) 0 0);\n    }\n\n    :host([${MediaUIAttributes.MEDIA_PREVIEW_IMAGE}]:hover) media-preview-thumbnail,\n    :host([${MediaUIAttributes.MEDIA_PREVIEW_IMAGE}]:hover) ::slotted(media-preview-thumbnail) {\n      transition-delay: var(--media-preview-transition-delay-in, .25s);\n      visibility: visible;\n    }\n\n    media-preview-time-display,\n    ::slotted(media-preview-time-display) {\n      min-width: 0;\n      ${/* delay changing these CSS props until the preview box transition is ended */''}\n      transition: min-width 0s, border-radius 0s;\n      transition-delay: calc(var(--media-preview-transition-delay-out, 0s) + var(--media-preview-transition-duration-out, .25s));\n      background: var(--media-preview-time-background, var(--media-preview-background, var(--media-control-background, var(--media-secondary-color, rgb(20 20 30 / .7)))));\n      border-radius: var(--media-preview-time-border-radius,\n        var(--media-preview-border-radius) var(--media-preview-border-radius)\n        var(--media-preview-border-radius) var(--media-preview-border-radius));\n      padding: var(--media-preview-time-padding, 1px 10px 0);\n      margin: var(--media-preview-time-margin, 0 0 10px);\n      text-shadow: var(--media-preview-time-text-shadow, 0 0 4px rgb(0 0 0 / .75));\n    }\n\n    :host([${MediaUIAttributes.MEDIA_PREVIEW_IMAGE}]) media-preview-time-display,\n    :host([${MediaUIAttributes.MEDIA_PREVIEW_IMAGE}]) ::slotted(media-preview-time-display) {\n      transition-delay: var(--media-preview-transition-delay-in, .25s);\n      min-width: 100%;\n      border-radius: var(--media-preview-time-border-radius,\n        0 0 var(--media-preview-border-radius) var(--media-preview-border-radius));\n    }\n\n    :host([${MediaUIAttributes.MEDIA_PREVIEW_TIME}]:hover) {\n      --media-time-range-hover-display: block;\n    }\n  </style>\n  <div id=\"preview-rail\">\n    <slot name=\"preview\" part=\"box preview-box\">\n      <media-preview-thumbnail></media-preview-thumbnail>\n      <media-preview-time-display></media-preview-time-display>\n    </slot>\n  </div>\n  <div id=\"current-rail\">\n    <slot name=\"current\" part=\"box current-box\">\n      ${/* Example: add the current time to the playhead\n        <media-time-display></media-time-display> */''}\n    </slot>\n  </div>\n`;\n\n/**\n * @slot preview - An element that slides along the timeline to the position of the pointer hovering.\n * @slot current - An element that slides along the timeline to the position of the current time.\n *\n * @attr {string} mediabuffered - (read-only) Set to the buffered time ranges.\n * @attr {string} mediaplaybackrate - (read-only) Set to the media playback rate.\n * @attr {string} mediaduration - (read-only) Set to the media duration.\n * @attr {string} mediaseekable - (read-only) Set to the seekable time ranges.\n * @attr {boolean} mediapaused - (read-only) Present if the media is paused.\n * @attr {boolean} medialoading - (read-only) Present if the media is loading.\n * @attr {string} mediacurrenttime - (read-only) Set to the current media time.\n * @attr {string} mediapreviewimage - (read-only) Set to the timeline preview image URL.\n * @attr {string} mediapreviewtime - (read-only) Set to the timeline preview time.\n *\n * @csspart box - A CSS part that selects both the preview and current box elements.\n * @csspart preview-box - A CSS part that selects the preview box element.\n * @csspart current-box - A CSS part that selects the current box element.\n *\n * @cssproperty [--media-time-range-display = inline-block] - `display` property of range.\n *\n * @cssproperty --media-preview-transition-property - `transition-property` of range hover preview.\n * @cssproperty --media-preview-transition-duration-out - `transition-duration` out of range hover preview.\n * @cssproperty --media-preview-transition-delay-out - `transition-delay` out of range hover preview.\n * @cssproperty --media-preview-transition-duration-in - `transition-duration` in of range hover preview.\n * @cssproperty --media-preview-transition-delay-in - `transition-delay` in of range hover preview.\n *\n * @cssproperty --media-preview-thumbnail-background - `background` of range preview thumbnail.\n * @cssproperty --media-preview-thumbnail-box-shadow - `box-shadow` of range preview thumbnail.\n * @cssproperty --media-preview-thumbnail-max-width - `max-width` of range preview thumbnail.\n * @cssproperty --media-preview-thumbnail-max-height - `max-height` of range preview thumbnail.\n * @cssproperty --media-preview-thumbnail-min-width - `min-width` of range preview thumbnail.\n * @cssproperty --media-preview-thumbnail-min-height - `min-height` of range preview thumbnail.\n * @cssproperty --media-preview-thumbnail-border-radius - `border-radius` of range preview thumbnail.\n * @cssproperty --media-preview-thumbnail-border - `border` of range preview thumbnail.\n *\n * @cssproperty --media-preview-time-background - `background` of range preview time display.\n * @cssproperty --media-preview-time-border-radius - `border-radius` of range preview time display.\n * @cssproperty --media-preview-time-padding - `padding` of range preview time display.\n * @cssproperty --media-preview-time-margin - `margin` of range preview time display.\n * @cssproperty --media-preview-time-text-shadow - `text-shadow` of range preview time display.\n */\nclass MediaTimeRange extends MediaChromeRange {\n  static get observedAttributes() {\n    return [\n      ...super.observedAttributes,\n      MediaUIAttributes.MEDIA_PAUSED,\n      MediaUIAttributes.MEDIA_DURATION,\n      MediaUIAttributes.MEDIA_SEEKABLE,\n      MediaUIAttributes.MEDIA_CURRENT_TIME,\n      MediaUIAttributes.MEDIA_PREVIEW_IMAGE,\n      MediaUIAttributes.MEDIA_PREVIEW_TIME,\n      MediaUIAttributes.MEDIA_BUFFERED,\n      MediaUIAttributes.MEDIA_PLAYBACK_RATE,\n      MediaUIAttributes.MEDIA_LOADING,\n      MediaUIAttributes.MEDIA_ENDED,\n    ];\n  }\n\n  #boxes;\n  #previewBox;\n  #currentBox;\n  #boxPaddingLeft;\n  #boxPaddingRight;\n\n  constructor() {\n    super();\n\n    this.container.appendChild(template.content.cloneNode(true));\n\n    this.range.addEventListener('input', () => {\n      // Cancel color bar refreshing when seeking.\n      cancelAnimationFrame(this._refreshId);\n\n      const newTime = this.range.value;\n      const detail = newTime;\n      const evt = new globalThis.CustomEvent(MediaUIEvents.MEDIA_SEEK_REQUEST, {\n        composed: true,\n        bubbles: true,\n        detail,\n      });\n      this.dispatchEvent(evt);\n    });\n\n    // Come back to this feature\n    // this.playIfNotReady = e => {\n    //   this.range.removeEventListener('change', this.playIfNotReady);\n    //   const media = this.media;\n    //   media.play().then(this.setMediaTimeWithRange);\n    // };\n\n    this._refreshBar = () => {\n      const delta = (performance.now() - this._updateTimestamp) / 1000;\n      this.range.value = this.mediaCurrentTime + delta * this.mediaPlaybackRate;\n      this.updateBar();\n      this.updateCurrentBox();\n\n      this._refreshId = requestAnimationFrame(this._refreshBar);\n    };\n\n    this.#boxes = this.shadowRoot.querySelectorAll('[part~=\"box\"]');\n    this.#previewBox = this.shadowRoot.querySelector('[part~=\"preview-box\"]');\n    this.#currentBox = this.shadowRoot.querySelector('[part~=\"current-box\"]');\n\n    const computedStyle = getComputedStyle(this);\n    this.#boxPaddingLeft = parseInt(\n      computedStyle.getPropertyValue('--media-box-padding-left')\n    );\n    this.#boxPaddingRight = parseInt(\n      computedStyle.getPropertyValue('--media-box-padding-right')\n    );\n\n    this.#enableBoxes();\n  }\n\n  connectedCallback() {\n    this.range.setAttribute('aria-label', nouns.SEEK());\n    super.connectedCallback();\n  }\n\n  disconnectedCallback() {\n    cancelAnimationFrame(this._refreshId);\n    super.disconnectedCallback();\n  }\n\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    if (\n      attrName === MediaUIAttributes.MEDIA_CURRENT_TIME ||\n      attrName === MediaUIAttributes.MEDIA_PAUSED ||\n      attrName === MediaUIAttributes.MEDIA_ENDED ||\n      attrName === MediaUIAttributes.MEDIA_LOADING\n    ) {\n      this._updateTimestamp = performance.now();\n      this.range.value = this.mediaCurrentTime;\n      updateAriaValueText(this);\n      this.updateBar();\n      this.updateCurrentBox();\n\n      cancelAnimationFrame(this._refreshId);\n      if (!this.mediaPaused && !this.mediaLoading) {\n        this._refreshId = requestAnimationFrame(this._refreshBar);\n      }\n    }\n    if (attrName === MediaUIAttributes.MEDIA_DURATION) {\n      this.range.max = this.#mediaSeekableEnd ?? this.mediaDuration ?? 1000;\n      updateAriaValueText(this);\n      this.updateBar();\n      this.updateCurrentBox();\n    }\n    if (attrName === MediaUIAttributes.MEDIA_SEEKABLE) {\n      this.range.min = this.#mediaSeekableStart ?? 0;\n      this.range.max = this.#mediaSeekableEnd ?? this.mediaDuration ?? 1000;\n      updateAriaValueText(this);\n      this.updateBar();\n    }\n    if (attrName === MediaUIAttributes.MEDIA_BUFFERED) {\n      this.updateBar();\n    }\n    if (attrName === 'disabled') {\n      if (newValue == null) {\n        this.#enableBoxes();\n      } else {\n        this.#disableBoxes();\n      }\n    }\n    super.attributeChangedCallback(attrName, oldValue, newValue);\n  }\n\n  /**\n   * @type {boolean} Is the media paused\n   */\n  get mediaPaused() {\n    return getBooleanAttr(this, MediaUIAttributes.MEDIA_PAUSED);\n  }\n\n  set mediaPaused(value) {\n    setBooleanAttr(this, MediaUIAttributes.MEDIA_PAUSED, value);\n  }\n\n  /**\n   * @type {boolean} Is the media loading\n   */\n  get mediaLoading() {\n    return getBooleanAttr(this, MediaUIAttributes.MEDIA_LOADING);\n  }\n\n  set mediaLoading(value) {\n    setBooleanAttr(this, MediaUIAttributes.MEDIA_LOADING, value);\n  }\n\n  /**\n   * @type {number | undefined}\n   */\n  get mediaDuration() {\n    return getNumericAttr(this, MediaUIAttributes.MEDIA_DURATION);\n  }\n\n  set mediaDuration(value) {\n    setNumericAttr(this, MediaUIAttributes.MEDIA_DURATION, value);\n  }\n\n  /**\n   * @type {number | undefined}\n   */\n  get mediaCurrentTime() {\n    return getNumericAttr(this, MediaUIAttributes.MEDIA_CURRENT_TIME);\n  }\n\n  set mediaCurrentTime(value) {\n    setNumericAttr(this, MediaUIAttributes.MEDIA_CURRENT_TIME, value);\n  }\n\n  /**\n   * @type {number}\n   */\n  get mediaPlaybackRate() {\n    return getNumericAttr(this, MediaUIAttributes.MEDIA_PLAYBACK_RATE, 1);\n  }\n\n  set mediaPlaybackRate(value) {\n    setNumericAttr(this, MediaUIAttributes.MEDIA_PLAYBACK_RATE, value);\n  }\n\n  /**\n   * @type {Array<Array<number>>} An array of ranges, each range being an array of two numbers.\n   * e.g. [[1, 2], [3, 4]]\n   */\n  get mediaBuffered() {\n    const buffered = this.getAttribute(MediaUIAttributes.MEDIA_BUFFERED);\n    if (!buffered) return [];\n    return buffered\n      .split(' ')\n      .map((timePair) => timePair.split(':').map((timeStr) => +timeStr));\n  }\n\n  set mediaBuffered(list) {\n    if (!list) {\n      this.removeAttribute(MediaUIAttributes.MEDIA_BUFFERED);\n      return;\n    }\n    const strVal = list.map((n1, n2) => `${n1}:${n2}`).join(' ');\n    this.setAttribute(MediaUIAttributes.MEDIA_BUFFERED, strVal);\n  }\n\n  /**\n   * Range of values that can be seeked to\n   * @type {Array<number> | undefined} An array of two numbers [start, end]\n   */\n  get mediaSeekable() {\n    const seekable = this.getAttribute(MediaUIAttributes.MEDIA_SEEKABLE);\n    if (!seekable) return undefined;\n    // Only currently supports a single, contiguous seekable range (CJP)\n    return seekable.split(':').map((time) => +time);\n  }\n\n  set mediaSeekable(range) {\n    if (range == null) {\n      this.removeAttribute(MediaUIAttributes.MEDIA_SEEKABLE);\n      return;\n    }\n    this.setAttribute(MediaUIAttributes.MEDIA_SEEKABLE, range.join(':'));\n  }\n\n  /**\n   * @type {number | undefined}\n   */\n  get #mediaSeekableEnd() {\n    const [, end] = this.mediaSeekable ?? [];\n    return end;\n  }\n\n  get #mediaSeekableStart() {\n    const [start] = this.mediaSeekable ?? [];\n    return start;\n  }\n\n  /**\n   * @type {string | undefined} The url of the preview image\n   */\n  get mediaPreviewImage() {\n    return getStringAttr(this, MediaUIAttributes.MEDIA_PREVIEW_IMAGE);\n  }\n\n  set mediaPreviewImage(value) {\n    setStringAttr(this, MediaUIAttributes.MEDIA_PREVIEW_IMAGE, value);\n  }\n\n  /**\n   * @type {number | undefined}\n   */\n  get mediaPreviewTime() {\n    return getNumericAttr(this, MediaUIAttributes.MEDIA_PREVIEW_TIME);\n  }\n\n  set mediaPreviewTime(value) {\n    setNumericAttr(this, MediaUIAttributes.MEDIA_PREVIEW_TIME, value);\n  }\n\n  /**\n   * @type {boolean | undefined}\n   */\n  get mediaEnded() {\n    return getBooleanAttr(this, MediaUIAttributes.MEDIA_ENDED);\n  }\n\n  set mediaEnded(value) {\n    setBooleanAttr(this, MediaUIAttributes.MEDIA_ENDED, value);\n  }\n\n  getRelativeValues() {\n    const defaultRelativeValues = super.getRelativeValues();\n    if (!this.mediaEnded) return defaultRelativeValues;\n    return {\n      ...defaultRelativeValues,\n      relativeValue: defaultRelativeValues.relativeMax,\n    };\n  }\n\n  /* Add a buffered progress bar */\n  getBarColors() {\n    let colorsArray = super.getBarColors();\n    const { range } = this;\n    const relativeMax = range.max - range.min;\n    const buffered = this.mediaBuffered;\n\n    if (!buffered.length || !Number.isFinite(relativeMax) || relativeMax <= 0) {\n      return colorsArray;\n    }\n\n    // Find the buffered range that \"contains\" the current time and get its end.\n    // If none, just assume the start of the media timeline/range.min for\n    // visualization purposes.\n    let relativeBufferedEnd;\n    if (!this.mediaEnded) {\n      const currentTime = this.mediaCurrentTime;\n      const [, bufferedEnd = range.min] = buffered.find(\n        ([start, end]) => start <= currentTime && currentTime <= end\n      ) ?? [];\n      relativeBufferedEnd = bufferedEnd - range.min;\n    } else {\n      // If we've ended, there may be some discrepancies between seekable end, duration, and current time.\n      // In this case, just presume `relativeBufferedEnd` is the maximum possible value for visualization\n      // purposes (CJP.)\n      relativeBufferedEnd = relativeMax;\n    }\n\n    const buffPercent = (relativeBufferedEnd / relativeMax) * 100;\n    colorsArray.splice(1, 0, [\n      'var(--media-time-range-buffered-color, rgb(255 255 255 / .4))',\n      buffPercent,\n    ]);\n    return colorsArray;\n  }\n\n  updateCurrentBox() {\n    // If there are no elements in the current box no need for expensive style updates.\n    // @ts-ignore\n    if (!this.#currentBox.assignedElements().length) return;\n\n    const boxRatio = this.range.value / (this.range.max - this.range.min);\n    const boxPos = this.#getBoxPosition(this.#currentBox, boxRatio);\n    const { style } = getOrInsertCSSRule(this.shadowRoot, '#current-rail');\n    style.transform = `translateX(${boxPos})`;\n  }\n\n  #getBoxPosition(box, ratio) {\n    let position = `${ratio * 100 * 100}%`;\n\n    // Use offset dimensions to include borders.\n    const boxWidth = box.offsetWidth;\n    if (!boxWidth) return position;\n\n    // Get the element that enforces the bounds for the time range boxes.\n    const bounds =\n      (this.getAttribute('bounds')\n        ? closestComposedNode(this, `#${this.getAttribute('bounds')}`)\n        : this.parentElement) ?? this;\n\n    const rangeRect = this.range.getBoundingClientRect();\n    const mediaBoundsRect = bounds.getBoundingClientRect();\n    const boxMin = (this.#boxPaddingLeft - (rangeRect.left - mediaBoundsRect.left - boxWidth / 2)) / rangeRect.width * 100;\n    const boxMax = (mediaBoundsRect.right - rangeRect.left - boxWidth / 2 - this.#boxPaddingRight) / rangeRect.width * 100;\n\n    if (!Number.isNaN(boxMin)) position = `max(${boxMin * 100}%, ${position})`;\n    if (!Number.isNaN(boxMax)) position = `min(${position}, ${boxMax * 100}%)`;\n\n    return position;\n  }\n\n  #pointermoveHandler = (evt) => {\n    // @ts-ignore\n    if ([...this.#boxes].some((b) => evt.composedPath().includes(b))) return;\n\n    this.updatePointerBar(evt);\n\n    const duration = this.mediaDuration;\n    // If no duration we can't calculate which time to show\n    if (!duration) return;\n\n    // Get mouse position percent\n    const rangeRect = this.range.getBoundingClientRect();\n    let mouseRatio = (evt.clientX - rangeRect.left - this.thumbWidth / 2) / (rangeRect.width - this.thumbWidth);\n    // Lock between 0 and 1\n    mouseRatio = Math.max(0, Math.min(1, mouseRatio));\n\n    const boxPos = this.#getBoxPosition(this.#previewBox, mouseRatio);\n    const { style } = getOrInsertCSSRule(this.shadowRoot, '#preview-rail');\n    style.transform = `translateX(${boxPos})`;\n\n    const detail = mouseRatio * duration;\n    const mediaPreviewEvt = new globalThis.CustomEvent(\n      MediaUIEvents.MEDIA_PREVIEW_REQUEST,\n      { composed: true, bubbles: true, detail }\n    );\n    this.dispatchEvent(mediaPreviewEvt);\n  };\n\n  // Trigger when the mouse moves over the range\n  #rangeEntered = false;\n\n  #offRangeHandler = (evt) => {\n    if (\n      !evt.composedPath().includes(this) ||\n      // @ts-ignore\n      [...this.#boxes].some((b) => evt.composedPath().includes(b))\n    ) {\n      globalThis.window?.removeEventListener('pointermove', this.#offRangeHandler);\n      this.#rangeEntered = false;\n      this.#stopTrackingMouse();\n    }\n  };\n\n  #trackMouse = () => {\n    globalThis.window?.addEventListener('pointermove', this.#pointermoveHandler, false);\n  };\n\n  #stopTrackingMouse = () => {\n    globalThis.window?.removeEventListener('pointermove', this.#pointermoveHandler);\n    const endEvt = new globalThis.CustomEvent(MediaUIEvents.MEDIA_PREVIEW_REQUEST, {\n      composed: true,\n      bubbles: true,\n      detail: null,\n    });\n    this.dispatchEvent(endEvt);\n  };\n\n  #rangepointermoveHandler = () => {\n    const mediaDurationStr = this.getAttribute(\n      MediaUIAttributes.MEDIA_DURATION\n    );\n    if (!this.#rangeEntered && mediaDurationStr) {\n      this.#rangeEntered = true;\n      this.#trackMouse();\n\n      globalThis.window?.addEventListener('pointermove', this.#offRangeHandler, false);\n    }\n  };\n\n  #enableBoxes() {\n    this.addEventListener('pointermove', this.#rangepointermoveHandler, false);\n  }\n\n  #disableBoxes() {\n    globalThis.window?.removeEventListener('pointermove', this.#offRangeHandler);\n    this.removeEventListener('pointermove', this.#rangepointermoveHandler);\n    this.#rangeEntered = false;\n    this.#stopTrackingMouse();\n  }\n}\n\nif (!globalThis.customElements.get('media-time-range')) {\n  globalThis.customElements.define('media-time-range', MediaTimeRange);\n}\n\nexport default MediaTimeRange;\n", "import { MediaUIAttributes, MediaStateReceiverAttributes } from './constants.js';\nimport { nouns } from './labels/labels.js';\nimport { globalThis, document } from './utils/server-safe-globals.js';\nimport {\n  getBooleanAttr,\n  setBooleanAttr,\n  getOrInsertCSSRule\n} from './utils/element-utils.js';\n\n\nexport const Attributes = {\n  LOADING_DELAY: 'loadingdelay'\n};\n\nconst DEFAULT_LOADING_DELAY = 500;\n\nconst template = document.createElement('template');\n\nconst loadingIndicatorIcon = `\n<svg aria-hidden=\"true\" viewBox=\"0 0 100 100\">\n  <path d=\"M73,50c0-12.7-10.3-23-23-23S27,37.3,27,50 M30.9,50c0-10.5,8.5-19.1,19.1-19.1S69.1,39.5,69.1,50\">\n    <animateTransform\n       attributeName=\"transform\"\n       attributeType=\"XML\"\n       type=\"rotate\"\n       dur=\"1s\"\n       from=\"0 50 50\"\n       to=\"360 50 50\"\n       repeatCount=\"indefinite\" />\n  </path>\n</svg>\n`;\n\ntemplate.innerHTML = /*html*/`\n<style>\n:host {\n  display: var(--media-control-display, var(--media-loading-indicator-display, inline-block));\n  vertical-align: middle;\n  box-sizing: border-box;\n  --_loading-indicator-delay: var(--media-loading-indicator-transition-delay, ${DEFAULT_LOADING_DELAY}ms);\n}\n\n#status {\n  color: rgba(0,0,0,0);\n  width: 0px;\n  height: 0px;\n}\n\n:host slot[name=icon] > *,\n:host ::slotted([slot=icon]) {\n  opacity: var(--media-loading-indicator-opacity, 0);\n  transition: opacity 0.15s;\n}\n\n:host([${MediaUIAttributes.MEDIA_LOADING}]:not([${MediaUIAttributes.MEDIA_PAUSED}])) slot[name=icon] > *,\n:host([${MediaUIAttributes.MEDIA_LOADING}]:not([${MediaUIAttributes.MEDIA_PAUSED}])) ::slotted([slot=icon]) {\n  opacity: var(--media-loading-indicator-opacity, 1);\n  transition: opacity 0.15s var(--_loading-indicator-delay);\n}\n\n:host #status {\n  visibility: var(--media-loading-indicator-opacity, hidden);\n  transition: visibility 0.15s;\n}\n\n:host([${MediaUIAttributes.MEDIA_LOADING}]:not([${MediaUIAttributes.MEDIA_PAUSED}])) #status {\n  visibility: var(--media-loading-indicator-opacity, visible);\n  transition: visibility 0.15s var(--_loading-indicator-delay);\n}\n\nsvg, img, ::slotted(svg), ::slotted(img) {\n  width: var(--media-loading-indicator-icon-width);\n  height: var(--media-loading-indicator-icon-height, 100px);\n  fill: var(--media-icon-color, var(--media-primary-color, rgb(238 238 238)));\n  vertical-align: middle;\n}\n</style>\n\n<slot name=\"icon\">${loadingIndicatorIcon}</slot>\n<div id=\"status\" role=\"status\" aria-live=\"polite\">${nouns.MEDIA_LOADING()}</div>\n`;\n\n/**\n * @slot icon - The element shown for when the media is in a buffering state.\n *\n * @attr {string} loadingdelay - Set the delay in ms before the loading animation is shown.\n * @attr {string} mediacontroller - The element `id` of the media controller to connect to (if not nested within).\n * @attr {boolean} mediapaused - (read-only) Present if the media is paused.\n * @attr {boolean} medialoading - (read-only) Present if the media is loading.\n *\n * @cssproperty --media-primary-color - Default color of text and icon.\n * @cssproperty --media-icon-color - `fill` color of button icon.\n *\n * @cssproperty --media-control-display - `display` property of control.\n *\n * @cssproperty --media-loading-indicator-display - `display` property of loading indicator.\n * @cssproperty [ --media-loading-indicator-opacity = 0 ] - `opacity` property of loading indicator. Set to 1 to force it to be visible.\n * @cssproperty [ --media-loading-indicator-transition-delay = 500ms ] - `transition-delay` property of loading indicator. Make sure to include units.\n * @cssproperty --media-loading-indicator-icon-width - `width` of loading icon.\n * @cssproperty [ --media-loading-indicator-icon-height = 100px ] - `height` of loading icon.\n */\nclass MediaLoadingIndicator extends globalThis.HTMLElement {\n  #mediaController;\n  #delay = DEFAULT_LOADING_DELAY;\n  #style;\n\n  static get observedAttributes() {\n    return [\n      MediaStateReceiverAttributes.MEDIA_CONTROLLER,\n      MediaUIAttributes.MEDIA_PAUSED,\n      MediaUIAttributes.MEDIA_LOADING,\n      Attributes.LOADING_DELAY,\n    ];\n  }\n\n  constructor() {\n    super();\n\n    if (!this.shadowRoot) {\n      // Set up the Shadow DOM if not using Declarative Shadow DOM.\n      const shadow = this.attachShadow({ mode: 'open' });\n      const indicatorHTML = template.content.cloneNode(true);\n      shadow.appendChild(indicatorHTML);\n    }\n\n    const { style } = getOrInsertCSSRule(this.shadowRoot, ':host');\n    this.#style = style;\n  }\n\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    if (attrName === Attributes.LOADING_DELAY && oldValue !== newValue) {\n      this.loadingDelay = Number(newValue);\n    } else if (attrName === MediaStateReceiverAttributes.MEDIA_CONTROLLER) {\n      if (oldValue) {\n        this.#mediaController?.unassociateElement?.(this);\n        this.#mediaController = null;\n      }\n      if (newValue) {\n        // @ts-ignore\n        this.#mediaController = this.getRootNode()?.getElementById(newValue);\n        this.#mediaController?.associateElement?.(this);\n      }\n    }\n  }\n\n  connectedCallback() {\n    const mediaControllerId = this.getAttribute(\n      MediaStateReceiverAttributes.MEDIA_CONTROLLER\n    );\n    if (mediaControllerId) {\n      // @ts-ignore\n      this.#mediaController = this.getRootNode()?.getElementById(mediaControllerId);\n      this.#mediaController?.associateElement?.(this);\n    }\n  }\n\n  disconnectedCallback() {\n    // Use cached mediaController, getRootNode() doesn't work if disconnected.\n    this.#mediaController?.unassociateElement?.(this);\n    this.#mediaController = null;\n  }\n\n  /**\n   * @type {number} Delay in ms\n   */\n  get loadingDelay() {\n    return this.#delay;\n  }\n\n  set loadingDelay(delay) {\n    this.#delay = delay;\n\n    this.#style.setProperty(\n      '--_loading-indicator-delay',\n      `var(--media-loading-indicator-transition-delay, ${delay}ms)`\n    );\n  }\n\n  /**\n   * @type {boolean} Is the media paused\n   */\n  get mediaPaused() {\n    return getBooleanAttr(this, MediaUIAttributes.MEDIA_PAUSED);\n  }\n\n  set mediaPaused(value) {\n    setBooleanAttr(this, MediaUIAttributes.MEDIA_PAUSED, value);\n  }\n  /**\n   * @type {boolean} Is the media loading\n   */\n  get mediaLoading() {\n    return getBooleanAttr(this, MediaUIAttributes.MEDIA_LOADING);\n  }\n\n  set mediaLoading(value) {\n    setBooleanAttr(this, MediaUIAttributes.MEDIA_LOADING, value);\n  }\n}\n\nif (!globalThis.customElements.get('media-loading-indicator')) {\n  globalThis.customElements.define('media-loading-indicator', MediaLoadingIndicator);\n}\n\nexport default MediaLoadingIndicator;\n", "import { globalThis } from './utils/server-safe-globals.js';\nimport { MediaChromeRange } from './media-chrome-range.js';\nimport { MediaUIAttributes, MediaUIEvents } from './constants.js';\nimport { nouns } from './labels/labels.js';\nimport {\n  getBooleanAttr,\n  getNumericAttr,\n  getStringAttr,\n  setBooleanAttr,\n  setNumericAttr,\n  setStringAttr,\n} from './utils/element-utils.js';\n\nconst DEFAULT_MAX_VOLUME = 100;\nconst DEFAULT_VOLUME = 1;\n\nconst toVolume = (el) => {\n  if (el.mediaMuted) return 0;\n  return Math.round(el.mediaVolume * el.range.max);\n};\n\nconst formatAsPercentString = ({ value, max }) =>\n  `${Math.round((value / max) * 100)}%`;\n\n/**\n * @attr {string} mediavolume - (read-only) Set to the media volume.\n * @attr {boolean} mediamuted - (read-only) Set to the media muted state.\n * @attr {string} mediavolumeunavailable - (read-only) Set if changing volume is unavailable.\n *\n * @cssproperty [--media-volume-range-display = inline-block] - `display` property of range.\n */\nclass MediaVolumeRange extends MediaChromeRange {\n  static get observedAttributes() {\n    return [\n      ...super.observedAttributes,\n      MediaUIAttributes.MEDIA_VOLUME,\n      MediaUIAttributes.MEDIA_MUTED,\n      MediaUIAttributes.MEDIA_VOLUME_UNAVAILABLE,\n    ];\n  }\n\n  constructor() {\n    super();\n\n    this.range.max = DEFAULT_MAX_VOLUME;\n\n    this.range.addEventListener('input', () => {\n      const newVolume = this.range.value / this.range.max;\n      const detail = newVolume;\n      const evt = new globalThis.CustomEvent(MediaUIEvents.MEDIA_VOLUME_REQUEST, {\n        composed: true,\n        bubbles: true,\n        detail,\n      });\n      this.dispatchEvent(evt);\n    });\n  }\n\n  connectedCallback() {\n    this.range.setAttribute('aria-label', nouns.VOLUME());\n    super.connectedCallback();\n  }\n\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    if (\n      attrName === MediaUIAttributes.MEDIA_VOLUME ||\n      attrName === MediaUIAttributes.MEDIA_MUTED\n    ) {\n      const newVolume = toVolume(this);\n      this.range.value = newVolume;\n      this.range.setAttribute(\n        'aria-valuetext',\n        formatAsPercentString(this.range)\n      );\n      this.updateBar();\n    }\n    super.attributeChangedCallback(attrName, oldValue, newValue);\n  }\n\n  /**\n   * @type {number}\n   */\n  get mediaVolume() {\n    return getNumericAttr(this, MediaUIAttributes.MEDIA_VOLUME, DEFAULT_VOLUME);\n  }\n\n  set mediaVolume(value) {\n    setNumericAttr(this, MediaUIAttributes.MEDIA_VOLUME, value);\n  }\n\n  /**\n   * @type {boolean} Is the media currently muted\n   */\n  get mediaMuted() {\n    return getBooleanAttr(this, MediaUIAttributes.MEDIA_MUTED);\n  }\n\n  set mediaMuted(value) {\n    setBooleanAttr(this, MediaUIAttributes.MEDIA_MUTED, value);\n  }\n\n  /**\n   * @type {string | undefined} The volume unavailability state\n   */\n  get mediaVolumeUnavailable() {\n    return getStringAttr(this, MediaUIAttributes.MEDIA_VOLUME_UNAVAILABLE);\n  }\n\n  set mediaVolumeUnavailable(value) {\n    setStringAttr(this, MediaUIAttributes.MEDIA_VOLUME_UNAVAILABLE, value);\n  }\n}\n\nif (!globalThis.customElements.get('media-volume-range')) {\n  globalThis.customElements.define('media-volume-range', MediaVolumeRange);\n}\n\nexport default MediaVolumeRange;\n"],
  "mappings": "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",
  "names": ["js_exports", "__export", "media_airplay_button_default", "media_captions_button_default", "media_cast_button_default", "media_chrome_button_default", "media_chrome_range_default", "media_control_bar_default", "media_controller_default", "media_duration_display_default", "media_fullscreen_button_default", "media_gesture_receiver_default", "media_live_button_default", "media_loading_indicator_default", "media_mute_button_default", "media_pip_button_default", "media_play_button_default", "media_playback_rate_button_default", "media_poster_image_default", "media_preview_thumbnail_default", "media_preview_time_display_default", "media_seek_backward_button_default", "media_seek_forward_button_default", "media_time_display_default", "media_time_range_default", "media_volume_range_default", "constants_exports", "labels_default", "time_exports", "constants_exports", "__export", "AttributeToStateChangeEventMap", "AvailabilityStates", "MediaStateChangeEvents", "MediaStateReceiverAttributes", "MediaUIAttributes", "MediaUIEvents", "MediaUIProps", "PointerTypes", "ReadyStates", "StateChangeEventToAttributeMap", "StreamTypes", "TextTrackKinds", "TextTrackModes", "MediaUIPropsEntries", "dictObj", "key", "propName", "mapObj", "eventType", "attrName", "evtType", "nouns", "playbackRate", "verbs", "seekOffset", "labels_default", "time_exports", "__export", "emptyTimeRanges", "formatAsTimePhrase", "formatTime", "serializeTimeRanges", "constToCamel", "word", "upperFirst", "x", "i", "isValidNumber", "x", "delay", "ms", "resolve", "UnitLabels", "toTimeUnitPhrase", "timeUnitValue", "unitIndex", "unitLabel", "formatAsTimePhrase", "seconds", "isValidNumber", "positiveSeconds", "negative", "secondsDateTime", "index", "x", "formatTime", "guide", "s", "m", "h", "gm", "gh", "emptyTimeRanges", "unsignedIdx", "serializeTimeRanges", "timeRanges", "_", "i", "updateIconText", "svg", "value", "selector", "node", "getAllSlotted", "el", "name", "slotSelector", "slot", "getSlotted", "containsComposedNode", "rootNode", "childNode", "closestComposedNode", "closest", "getOrInsertCSSRule", "styleParent", "selectorText", "_a", "style", "cssRules", "rule", "getNumericAttr", "attrName", "defaultValue", "attrVal", "setNumericAttr", "nextNumericValue", "getBooleanAttr", "setBooleanAttr", "getStringAttr", "setStringAttr", "nextValue", "EventTarget", "ResizeObserver", "documentShim", "globalThisShim", "_cb", "isServer", "isShimmed", "key", "GlobalThis", "Document", "template", "Document", "_mediaController", "_clickListener", "_keyupListener", "_keydownListener", "MediaChromeButton", "GlobalThis", "options", "__privateAdd", "__publicField", "key", "__privateGet", "metaKey", "altKey", "buttonHTML", "slotTemplate", "style", "getOrInsertCSSRule", "MediaStateReceiverAttributes", "attrName", "oldValue", "newValue", "_a", "_b", "_c", "_d", "_e", "__privateSet", "mediaControllerId", "media_chrome_button_default", "MediaChromeButton", "airplayIcon", "slotTemplate", "Document", "MediaAirplayButton", "MediaChromeButton", "MediaUIAttributes", "options", "verbs", "getStringAttr", "value", "setStringAttr", "evt", "GlobalThis", "MediaUIEvents", "media_airplay_button_default", "enterIcon", "exitIcon", "slotTemplate", "Document", "MediaUIAttributes", "updateAriaLabel", "el", "label", "verbs", "MediaCastButton", "MediaChromeButton", "options", "attrName", "oldValue", "newValue", "getBooleanAttr", "value", "setBooleanAttr", "getStringAttr", "setStringAttr", "eventName", "MediaUIEvents", "GlobalThis", "media_cast_button_default", "template", "Document", "_mediaController", "MediaGestureReceiver", "GlobalThis", "options", "__privateAdd", "shadow", "buttonHTML", "slotTemplate", "MediaStateReceiverAttributes", "MediaUIAttributes", "attrName", "oldValue", "newValue", "_a", "_b", "_c", "_d", "_e", "__privateGet", "__privateSet", "getMediaControllerEl", "event", "composedTarget", "clientX", "clientY", "left", "top", "width", "height", "x", "y", "pointerType", "PointerTypes", "getBooleanAttr", "value", "setBooleanAttr", "eventName", "MediaUIEvents", "controlEl", "mediaControllerId", "closestComposedNode", "media_gesture_receiver_default", "Attributes", "template", "Document", "MediaUIAttributes", "MEDIA_UI_ATTRIBUTE_NAMES", "defaultBreakpoints", "resizeCallback", "entries", "_a", "entry", "container", "breakpoints", "ranges", "createBreakpointMap", "activeBreakpoints", "getBreakpoints", "changed", "name", "evt", "MediaStateChangeEvents", "pairs", "pair", "rect", "MediaContainer", "GlobalThis", "mutationCallback", "mutationsList", "media", "mutation", "node", "previousSibling", "wasFirst", "pendingResizeCb", "deferResizeCallback", "resizeObserver", "currentMedia", "chainedSlot", "attrName", "oldValue", "newValue", "eventName", "MediaUIEvents", "resolveMediaPromise", "rejectMediaPromise", "mediaName", "label", "nouns", "setInactive", "setActive", "scheduleInactive", "e", "el", "seconds", "_el", "_attr", "_defaultSet", "_tokenSet", "_tokens", "tokens_get", "AttributeTokenList", "el", "attr", "defaultValue", "__privateAdd", "__privateSet", "__privateGet", "_a", "val", "index", "callback", "tokens", "_b", "t", "token", "force", "oldToken", "newToken", "splitTextTracksStr", "textTracksStr", "parseTextTrackStr", "textTrackStr", "kind", "language", "encodedLabel", "label", "parseTextTracksStr", "textTrackLikeObj", "textTrackObj", "parseTracks", "trackOrTracks", "trackObjOrStr", "formatTextTrackObj", "stringifyTextTrackList", "textTracks", "isMatchingPropOf", "key", "value", "obj", "textTrackObjAsPred", "filterObj", "preds", "textTrack", "pred", "updateTracksModeTo", "mode", "tracks", "tracksToUpdate", "isTrackToUpdate", "getTextTracksList", "media", "filterPredOrObj", "filterPred", "areSubsOn", "el", "MediaUIAttributes", "toggleSubsCaps", "force", "_a", "_b", "subsOn", "subtitlesShowingStr", "evt", "GlobalThis", "MediaUIEvents", "subTrackStr", "fullscreenApi", "Document", "testMediaEl", "getTestMediaEl", "_a", "_b", "Document", "hasVolumeSupportAsync", "mediaEl", "prevVolume", "delay", "hasPipSupport", "hasFullscreenSupport", "fullscreenEnabled", "fullscreenApi", "fullscreenSupported", "pipSupported", "airplaySupported", "GlobalThis", "castSupported", "volumeSupported", "volumeSupportPromise", "hasVolumeSupportAsync", "supported", "StreamTypeValues", "StreamTypes", "getSubtitleTracks", "controller", "getTextTracksList", "textTrack", "TextTrackKinds", "a", "b", "getShowingSubtitleTracks", "TextTrackModes", "MediaUIStates", "media", "level", "muted", "volume", "_a", "start", "end", "_b", "_c", "timeRanges", "_", "i", "streamType", "defaultType", "duration", "targetLiveWindow", "seekable", "liveEdgeStartOffset", "liveEdgeStart", "event", "Document", "fullscreenApi", "fullscreenEl", "containsComposedNode", "e", "pipElement", "castElement", "GlobalThis", "castState", "airplaySupported", "AvailabilityStates", "castSupported", "fullscreenSupported", "pipSupported", "kind", "label", "language", "MediaUIAttributes", "toggleSubsCaps", "MediaUIRequestHandlers", "autoSeekToLive", "mediaController", "warnNotReady", "err", "cleanup", "tryPip", "time", "track", "cue", "c", "base", "url", "previewCoordsStr", "tracks", "tracksToUpdate", "updateTracksModeTo", "ButtonPressedKeys", "DEFAULT_SEEK_OFFSET", "DEFAULT_TIME", "Attributes", "_hotKeys", "_fullscreenElement", "_keyUpHandler", "keyUpHandler_fn", "_keyDownHandler", "keyDownHandler_fn", "MediaController", "MediaContainer", "__privateAdd", "AttributeTokenList", "MediaUIStates", "volumeSupportPromise", "MediaUIAttributes", "MediaUIRequestHandlers", "key", "handlerName", "constToCamel", "e", "MediaUIEvents", "MediaUIProps", "_a", "__privateGet", "element", "__privateSet", "attrName", "oldValue", "newValue", "toggleSubsCaps", "el", "media", "mediaEvents", "rootEvents", "trackListEvents", "handler", "eventName", "volPref", "GlobalThis", "stateName", "state", "previousState", "propagateMediaState", "evt", "AttributeToStateChangeEventMap", "associatedElementSubscriptions", "registerMediaStateReceiver", "unregisterMediaStateReceiver", "unsubscribe", "monitorForMediaStateReceivers", "els", "stateConstName", "stateDetails", "index", "__privateMethod", "_b", "_c", "_d", "currentTimeStr", "currentTime", "detail", "seekOffset", "metaKey", "altKey", "MEDIA_UI_ATTRIBUTE_NAMES", "MEDIA_UI_PROP_NAMES", "getMediaUIAttributesFrom", "child", "observedAttributes", "mediaChromeAttributesList", "MediaStateReceiverAttributes", "hasMediaUIProps", "mediaStateReceiverCandidate", "propName", "isMediaStateReceiver", "serializeTuple", "tuple", "CustomAttrSerializer", "stringifyTextTrackList", "tuples", "coords", "setAttr", "attrValue", "delay", "setBooleanAttr", "setNumericAttr", "setStringAttr", "val", "isMediaSlotElementDescendant", "traverseForMediaStateReceivers", "rootNode", "mediaStateReceiverCallback", "traverseForMediaStateReceiversSync", "children", "shadowChildren", "name", "relevantAttrs", "registerMediaStateReceiverHandler", "unregisterMediaStateReceiverHandler", "mutationCallback", "mutationsList", "mutationRecord", "addedNodes", "removedNodes", "type", "target", "attributeName", "node", "prevSlotted", "slotChangeHandler", "event", "slotEl", "observer", "media_controller_default", "template", "Document", "thumbStyles", "trackStyles", "_mediaController", "_onFocusIn", "_onFocusOut", "MediaChromeRange", "GlobalThis", "__publicField", "__privateAdd", "style", "getOrInsertCSSRule", "MediaStateReceiverAttributes", "attrName", "oldValue", "newValue", "_a", "_b", "_c", "_d", "_e", "__privateGet", "__privateSet", "mediaControllerId", "evt", "rangeRect", "mousePercent", "colorArray", "gradientStr", "prevPercent", "color", "range", "relativeValue", "relativeMax", "rangePercent", "thumbPercent", "media_chrome_range_default", "MediaChromeRange", "template", "Document", "_mediaController", "MediaControlBar", "GlobalThis", "__privateAdd", "target", "onlyRanges", "el", "style", "getOrInsertCSSRule", "autoSizeHeight", "MediaStateReceiverAttributes", "attrName", "oldValue", "newValue", "_a", "_b", "_c", "_d", "_e", "__privateGet", "__privateSet", "mediaControllerId", "media_control_bar_default", "template", "Document", "_mediaController", "MediaTextDisplay", "GlobalThis", "__privateAdd", "style", "getOrInsertCSSRule", "MediaStateReceiverAttributes", "attrName", "oldValue", "newValue", "_a", "_b", "_c", "_d", "_e", "__privateGet", "__privateSet", "mediaControllerId", "_slot", "MediaDurationDisplay", "MediaTextDisplay", "__privateAdd", "__privateSet", "__privateGet", "formatTime", "MediaUIAttributes", "attrName", "oldValue", "newValue", "getNumericAttr", "time", "setNumericAttr", "GlobalThis", "media_duration_display_default", "Attributes", "CombinedAttributes", "MediaUIAttributes", "ButtonPressedKeys", "DEFAULT_TIMES_SEP", "formatTimesLabel", "el", "timesSep", "_a", "_b", "_c", "_d", "showRemaining", "showDuration", "currentTime", "seekableEnd", "endTime", "timeLabel", "formatTime", "DEFAULT_MISSING_TIME_PHRASE", "updateAriaValueText", "currentTimePhrase", "formatAsTimePhrase", "totalTimePhrase", "fullPhrase", "_slot", "MediaTimeDisplay", "MediaTextDisplay", "__privateAdd", "__privateSet", "__privateGet", "style", "getOrInsertCSSRule", "hoverStyle", "nouns", "keyUpHandler", "evt", "key", "metaKey", "altKey", "attrName", "oldValue", "newValue", "getBooleanAttr", "show", "setBooleanAttr", "notoggle", "getNumericAttr", "time", "setNumericAttr", "seekable", "range", "timesLabel", "GlobalThis", "media_time_display_default", "ccIconOn", "ccIconOff", "slotTemplate", "Document", "updateAriaChecked", "el", "areSubsOn", "getSubtitlesListAttr", "attrName", "attrVal", "parseTextTracksStr", "setSubtitlesListAttr", "list", "newValStr", "stringifyTextTrackList", "MediaCaptionsButton", "MediaChromeButton", "MediaUIAttributes", "options", "nouns", "oldValue", "newValue", "toggleSubsCaps", "GlobalThis", "media_captions_button_default", "updateAriaLabel", "el", "seekOffset", "label", "verbs", "updateSeekIconValue", "svg", "getSlotted", "value", "updateIconText", "Attributes", "DEFAULT_SEEK_OFFSET", "forwardIcon", "slotTemplate", "Document", "DEFAULT_TIME", "MediaSeekForwardButton", "MediaChromeButton", "MediaUIAttributes", "options", "updateAriaLabel", "updateSeekIconValue", "attrName", "_oldValue", "newValue", "getNumericAttr", "value", "setNumericAttr", "time", "detail", "evt", "GlobalThis", "MediaUIEvents", "media_seek_forward_button_default", "enterFullscreenIcon", "exitFullscreenIcon", "slotTemplate", "Document", "MediaUIAttributes", "updateAriaLabel", "el", "label", "verbs", "MediaFullscreenButton", "MediaChromeButton", "options", "attrName", "oldValue", "newValue", "getStringAttr", "value", "setStringAttr", "getBooleanAttr", "setBooleanAttr", "eventName", "MediaUIEvents", "GlobalThis", "media_fullscreen_button_default", "MEDIA_TIME_IS_LIVE", "MEDIA_PAUSED", "MediaUIAttributes", "MEDIA_SEEK_TO_LIVE_REQUEST", "MEDIA_PLAY_REQUEST", "MediaUIEvents", "indicatorSVG", "slotTemplate", "Document", "MediaLiveButton", "MediaChromeButton", "options", "verbs", "attrName", "oldValue", "newValue", "getBooleanAttr", "value", "setBooleanAttr", "GlobalThis", "media_live_button_default", "MEDIA_VOLUME_LEVEL", "MediaUIAttributes", "offIcon", "lowIcon", "highIcon", "slotTemplate", "Document", "updateAriaLabel", "el", "label", "verbs", "MediaMuteButton", "MediaChromeButton", "options", "attrName", "oldValue", "newValue", "getStringAttr", "value", "setStringAttr", "eventName", "MediaUIEvents", "GlobalThis", "media_mute_button_default", "pipIcon", "slotTemplate", "Document", "MediaUIAttributes", "updateAriaLabel", "el", "label", "verbs", "MediaPipButton", "MediaChromeButton", "options", "attrName", "oldValue", "newValue", "getStringAttr", "value", "setStringAttr", "getBooleanAttr", "setBooleanAttr", "eventName", "MediaUIEvents", "GlobalThis", "media_pip_button_default", "playIcon", "pauseIcon", "slotTemplate", "Document", "MediaUIAttributes", "updateAriaLabel", "el", "label", "verbs", "MediaPlayButton", "MediaChromeButton", "options", "attrName", "oldValue", "newValue", "getBooleanAttr", "value", "setBooleanAttr", "eventName", "MediaUIEvents", "GlobalThis", "media_play_button_default", "Attributes", "DEFAULT_RATES", "DEFAULT_RATE", "slotTemplate", "Document", "_rates", "MediaPlaybackRateButton", "MediaChromeButton", "options", "__privateAdd", "AttributeTokenList", "MediaUIAttributes", "attrName", "oldValue", "newValue", "__privateGet", "newPlaybackRate", "playbackRate", "nouns", "value", "getNumericAttr", "setNumericAttr", "_a", "_b", "availableRates", "str", "detail", "r", "evt", "GlobalThis", "MediaUIEvents", "media_playback_rate_button_default", "Attributes", "template", "Document", "unsetBackgroundImage", "el", "setBackgroundImage", "image", "MediaPosterImage", "GlobalThis", "attrName", "_oldValue", "newValue", "getStringAttr", "value", "setStringAttr", "media_poster_image_default", "Attributes", "DEFAULT_SEEK_OFFSET", "backwardIcon", "slotTemplate", "Document", "DEFAULT_TIME", "MediaSeekBackwardButton", "MediaChromeButton", "MediaUIAttributes", "options", "updateAriaLabel", "updateSeekIconValue", "attrName", "_oldValue", "newValue", "getNumericAttr", "value", "setNumericAttr", "time", "detail", "evt", "GlobalThis", "MediaUIEvents", "media_seek_backward_button_default", "_slot", "MediaPreviewTimeDisplay", "MediaTextDisplay", "__privateAdd", "__privateSet", "__privateGet", "formatTime", "MediaUIAttributes", "attrName", "oldValue", "newValue", "getNumericAttr", "value", "setNumericAttr", "GlobalThis", "media_preview_time_display_default", "template", "Document", "_mediaController", "MediaPreviewThumbnail", "GlobalThis", "__privateAdd", "MediaStateReceiverAttributes", "MediaUIAttributes", "_a", "_b", "_c", "mediaControllerId", "__privateSet", "__privateGet", "attrName", "oldValue", "newValue", "_d", "_e", "getStringAttr", "value", "setStringAttr", "attrVal", "coord", "coords", "previewImage", "x", "y", "w", "h", "src", "computedStyle", "maxWidth", "maxHeight", "minWidth", "minHeight", "maxRatio", "minRatio", "isScalingDown", "scale", "style", "getOrInsertCSSRule", "imgStyle", "img", "extremum", "resize", "media_preview_thumbnail_default", "DEFAULT_MISSING_TIME_PHRASE", "updateAriaValueText", "el", "range", "currentTimePhrase", "formatAsTimePhrase", "totalTimePhrase", "fullPhrase", "template", "Document", "MediaUIAttributes", "_boxes", "_previewBox", "_currentBox", "_boxPaddingLeft", "_boxPaddingRight", "_mediaSeekableEnd", "mediaSeekableEnd_get", "_mediaSeekableStart", "mediaSeekableStart_get", "_getBoxPosition", "getBoxPosition_fn", "_pointermoveHandler", "_rangeEntered", "_offRangeHandler", "_trackMouse", "_stopTrackingMouse", "_rangepointermoveHandler", "_enableBoxes", "enableBoxes_fn", "_disableBoxes", "disableBoxes_fn", "MediaTimeRange", "MediaChromeRange", "__privateAdd", "evt", "__privateGet", "b", "duration", "rangeRect", "mouseRatio", "boxPos", "__privateMethod", "style", "getOrInsertCSSRule", "detail", "mediaPreviewEvt", "GlobalThis", "MediaUIEvents", "_a", "__privateSet", "endEvt", "mediaDurationStr", "delta", "computedStyle", "nouns", "attrName", "oldValue", "newValue", "_b", "_c", "_d", "_e", "getBooleanAttr", "value", "setBooleanAttr", "getNumericAttr", "setNumericAttr", "buffered", "timePair", "timeStr", "list", "strVal", "n1", "n2", "seekable", "time", "getStringAttr", "setStringAttr", "defaultRelativeValues", "colorsArray", "relativeMax", "relativeBufferedEnd", "currentTime", "bufferedEnd", "start", "end", "buffPercent", "boxRatio", "box", "ratio", "position", "boxWidth", "bounds", "closestComposedNode", "mediaBoundsRect", "boxMin", "boxMax", "media_time_range_default", "Attributes", "DEFAULT_LOADING_DELAY", "template", "Document", "loadingIndicatorIcon", "MediaUIAttributes", "nouns", "_mediaController", "_delay", "_style", "MediaLoadingIndicator", "GlobalThis", "__privateAdd", "shadow", "indicatorHTML", "style", "getOrInsertCSSRule", "__privateSet", "MediaStateReceiverAttributes", "attrName", "oldValue", "newValue", "_a", "_b", "_c", "_d", "_e", "__privateGet", "mediaControllerId", "delay", "getBooleanAttr", "value", "setBooleanAttr", "media_loading_indicator_default", "DEFAULT_MAX_VOLUME", "DEFAULT_VOLUME", "toVolume", "el", "formatAsPercentString", "value", "max", "MediaVolumeRange", "MediaChromeRange", "MediaUIAttributes", "detail", "evt", "GlobalThis", "MediaUIEvents", "nouns", "attrName", "oldValue", "newValue", "newVolume", "getNumericAttr", "setNumericAttr", "getBooleanAttr", "setBooleanAttr", "getStringAttr", "setStringAttr", "media_volume_range_default"]
}
