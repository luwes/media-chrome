import type { NextPage } from 'next';
import Head from 'next/head';
import 'media-chrome';
import styles from '../styles/Home.module.css';
// @ts-ignore
import {
  Provider as MediaChromeProvider,
  useMediaUIDispatch as useDispatch,
  useMediaUISelector as useSelector,
} from '../components/media-chrome-react/stateMgmt';

const PlayButton = () => {
  const dispatch = useDispatch();
  // @ts-ignore
  const mediaPaused = useSelector((state) => state.mediaPaused);
  return (
    <button
      style={{ cursor: 'pointer' }}
      onClick={() => {
        const type = mediaPaused ? 'mediaplayrequest' : 'mediapauserequest';
        dispatch({ type });
      }}
    >
      {mediaPaused ? 'Play' : 'Pause'} React Only!
    </button>
  );
};

// We could make something like this official.
// Also, "Name Are Hard TM"
const useAssociateMediaEl = () => {
  const dispatch = useDispatch();
  return (mediaEl: HTMLElement | null | undefined) => {
    dispatch({ type: 'mediaelementchangerequest', detail: mediaEl });
  };
};

const Video = () => {
  const associateMediaEl = useAssociateMediaEl();
  return (
    <video
      ref={associateMediaEl}
      slot="media"
      src="https://stream.mux.com/A3VXy02VoUinw01pwyomEO3bHnG4P32xzV7u1j1FSzjNg/high.mp4"
      muted
      crossOrigin=""
      playsInline
    ></video>
  );
};

const MediaPlayButton = () => {
  const dispatch = useDispatch();
  // @ts-ignore
  const mediaPaused = useSelector((state) => state.mediaPaused);
  return (
    // @ts-ignore
    <media-play-button
      mediapaused={mediaPaused ? '' : undefined}
      // NOTE: The real version would actually forward on the mediaplayrequest/mediapauserequest events
      onClick={() => {
        const type = mediaPaused ? 'mediaplayrequest' : 'mediapauserequest';
        dispatch({ type });
      }}
      // @ts-ignore
    ></media-play-button>
  );
};

const Home: NextPage = () => {
  return (
    // @ts-ignore
    <MediaChromeProvider>
      <div className={styles.container}>
        <Head>
          <title>Media Chrome React+Next.JS</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>

        <main className={styles.main}>
          <h1 className={styles.title}>
            Welcome to{' '}
            <a href="https://www.media-chrome.org" target="_blank">
              Media Chrome (React Only!)!
            </a>
          </h1>
          <Video />
          <PlayButton />
          <MediaPlayButton />
        </main>

        <footer className={styles.footer}></footer>
      </div>
    </MediaChromeProvider>
  );
};

export default Home;
